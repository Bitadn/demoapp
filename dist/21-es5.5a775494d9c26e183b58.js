!function(){function e(e){return function(e){if(Array.isArray(e))return t(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,n){if(!e)return;if("string"==typeof e)return t(e,n);var a=Object.prototype.toString.call(e).slice(8,-1);"Object"===a&&e.constructor&&(a=e.constructor.name);if("Map"===a||"Set"===a)return Array.from(e);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return t(e,n)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function n(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function a(e,t,a){return t&&n(e.prototype,t),a&&n(e,a),e}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{"7of8":function(t,n,i){"use strict";i.r(n),i.d(n,"MaterialModule",function(){return ns});var l,r=i("QibW"),s=i("ofXK"),m=i("tyNb"),c=i("fXoL"),p=((l=function e(){o(this,e)}).\u0275fac=function(e){return new(e||l)},l.\u0275cmp=c.Kb({type:l,selectors:[["app-material"]],decls:1,vars:0,template:function(e,t){1&e&&c.Rb(0,"router-outlet")},directives:[m.m],encapsulation:2}),l),d=i("3Pt+"),b=i("JX91"),u=i("lJxs"),h=i("I0zi"),g=i("1U00"),f=i("kmnG"),v=i("qFsG"),C=i("/1cH"),x=i("1jcm"),w=i("FKr1");function V(e,t){if(1&e&&(c.Wb(0,"mat-option",25),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.qc("value",n),c.Cb(1),c.Pc(" ",n," ")}}function W(e,t){if(1&e&&(c.Wb(0,"mat-option",25),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.qc("value",n),c.Cb(1),c.Pc(" ",n," ")}}function y(e,t){if(1&e&&(c.Wb(0,"mat-option",25),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.qc("value",n),c.Cb(1),c.Pc(" ",n.name," ")}}function N(e,t){if(1&e&&(c.Wb(0,"mat-option",25),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.qc("value",n),c.Cb(1),c.Pc(" ",n," ")}}function k(e,t){if(1&e&&(c.Wb(0,"mat-option",25),c.Rb(1,"img",26),c.Nc(2,"\xa0 "),c.Wb(3,"span"),c.Nc(4),c.Vb(),c.Nc(5," | "),c.Wb(6,"small"),c.Nc(7),c.Vb(),c.Vb()),2&e){var n=t.$implicit;c.qc("value",n.name),c.Cb(1),c.rc("src",n.flag,c.Dc),c.Cb(3),c.Oc(n.name),c.Cb(3),c.Pc("Population: ",n.population,"")}}function M(e,t){if(1&e&&(c.Wb(0,"mat-option",25),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.qc("value",n),c.Cb(1),c.Pc(" ",n," ")}}function S(e,t){if(1&e&&(c.Wb(0,"mat-optgroup",27),c.Lc(1,M,2,2,"mat-option",11),c.Vb()),2&e){var n=t.$implicit;c.qc("label",n.letter),c.Cb(1),c.qc("ngForOf",n.names)}}var T,I,D={beforeCodeTitle:"Simple autocomplete",htmlCode:'<form class="example-full-width">\n  <mat-form-field class="example-full-width">\n    <input type="text" placeholder="Pick one" aria-label="Number"\n      matInput [formControl]="myControl"\n      [matAutocomplete]="auto">\n      <mat-autocomplete #auto="matAutocomplete">\n        <mat-option *ngFor="let option of options" [value]="option">\n          {{ option }}\n        </mat-option>\n       </mat-autocomplete>\n  </mat-form-field>\n</form>\n',tsCode:"\nimport {FormControl} from '@angular/forms';\nimport {Component} from '@angular/core';\n\n/**\n* @title Simple autocomplete\n*/\n@Component({\n    selector: 'autocomplete-simple-example',\n    templateUrl: 'autocomplete-simple-example.html',\n    styleUrls: ['autocomplete-simple-example.css']\n})\nexport class AutocompleteSimpleExample {\n    myControl: FormControl = new FormControl();\n    options = [\n        'One',\n        'Two',\n        'Three'\n    ];\n}",cssCode:".example-form {\n    min-width: 150px;\n    max-width: 500px;\n    width: 100%;\n}\n.example-full-width {\n    width: 100%;\n}",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},F={beforeCodeTitle:"Adding a custom filter",htmlCode:'<form class="example-form">\n  <mat-form-field class="example-full-width">\n    <input type="text" placeholder="Pick one" aria-label="Number" matInput [formControl]="myControl" [matAutocomplete]="auto">\n      <mat-autocomplete #auto="matAutocomplete">\n        <mat-option *ngFor="let option of filteredOptions | async" [value]="option">\n          {{ option }}\n        </mat-option>\n      </mat-autocomplete>\n  </mat-form-field>\n</form>',tsCode:"import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs/Observable';\nimport {startWith} from 'rxjs/operators/startWith';\nimport {map} from 'rxjs/operators/map';\n\n/**\n* @title Filter autocomplete\n*/\n@Component({\n  selector: 'autocomplete-filter-example',\n  templateUrl: 'autocomplete-filter-example.html',\n  styleUrls: ['autocomplete-filter-example.css']\n})\nexport class AutocompleteFilterExample {\n\n  myControl: FormControl = new FormControl();\n\n  options = [\n    'One',\n    'Two',\n\t'Three'\n  ];\n\n  filteredOptions: Observable<string[]>;\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n         map(val => this.filter(val))\n      );\n  }\n\n  filter(val: string): string[] {\n    return this.options.filter(option =>\n\t\toption.toLowerCase().includes(val.toLowerCase()));\n  }\n}",cssCode:".example-form {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n.example-full-width {\n  width: 100%;\n}",viewCode:"",isCodeVisible:!1},E={beforeCodeTitle:"Setting separate control and display valuess",beforeCodeDescription:"",htmlCode:'<form class="example-form">\n  <mat-form-field class="example-full-width">\n    <input type="text" placeholder="Assignee" aria-label="Assignee" matInput [formControl]="myControl" [matAutocomplete]="auto">\n    <mat-autocomplete #auto="matAutocomplete" [displayWith]="displayFn">\n      <mat-option *ngFor="let option of filteredOptions | async" [value]="option">\n        {{ option.name }}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n</form>',tsCode:"import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs/Observable';\nimport {startWith} from 'rxjs/operators/startWith';\nimport {map} from 'rxjs/operators/map';\n\nexport class User {\n  constructor(public name: string) { }\n}\n/**\n* @title Display value autocomplete\n*/\n@Component({\n  selector: 'autocomplete-display-example',\n  templateUrl: 'autocomplete-display-example.html',\n  styleUrls: ['autocomplete-display-example.css']\n})\nexport class AutocompleteDisplayExample {\n\n  myControl = new FormControl();\n\n  options = [\n    new User('Mary'),\n    new User('Shelley'),\n    new User('Igor')\n  ];\n\n  filteredOptions: Observable<User[]>;\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges\n      .pipe(\n        startWith<string | User>(''),\n        map(value => typeof value === 'string' ? value : value.name),\n        map(name => name ? this.filter(name) : this.options.slice())\n      );\n  }\n\n  filter(name: string): User[] {\n    return this.options.filter(option =>\n      option.name.toLowerCase().indexOf(name.toLowerCase()) === 0);\n  }\n\n  displayFn(user?: User): string | undefined {\n    return user ? user.name : undefined;\n  }\n\n}",cssCode:".example-form {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n.example-full-width {\n  width: 100%;\n}",viewCode:"",isCodeVisible:!1},O={beforeCodeTitle:"Automatically highlighting the first option",htmlCode:'<form class="example-form">\n  <mat-form-field class="example-full-width">\n    <input type="text" placeholder="Pick one" aria-label="Number" matInput [formControl]="myControl" [matAutocomplete]="auto">\n    <mat-autocomplete autoActiveFirstOption #auto="matAutocomplete">\n      <mat-option *ngFor="let option of filteredOptions | async" [value]="option">\n        {{ option }}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n</form>',tsCode:"import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs/Observable';\nimport {startWith} from 'rxjs/operators/startWith';\nimport {map} from 'rxjs/operators/map';\n/**\n* @title Highlight the first autocomplete option\n*/\n@Component({\n  selector: 'autocomplete-auto-active-first-option-example',\n  templateUrl: 'autocomplete-auto-active-first-option-example.html',\n  styleUrls: ['autocomplete-auto-active-first-option-example.css']\n})\nexport class AutocompleteAutoActiveFirstOptionExample {\n  myControl: FormControl = new FormControl();\n  options = ['One', 'Two', 'Three'];\n  filteredOptions: Observable<string[]>;\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map(val => this.filter(val))\n    );\n\n  filter(val: string): string[] {\n    return this.options.filter(option => option.toLowerCase().indexOf(val.toLowerCase()) === 0);\n  }\n\n}",cssCode:".example-form {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n.example-full-width {\n  width: 100%;\n}",viewCode:"",isCodeVisible:!1},q={beforeCodeTitle:"Autocomplete overview",htmlCode:'<form class="example-form">\n  <mat-form-field class="example-full-width">\n    <input matInput placeholder="State" aria-label="State" [matAutocomplete]="auto" [formControl]="stateCtrl">\n    <mat-autocomplete #auto="matAutocomplete">\n      <mat-option *ngFor="let state of filteredStates | async" [value]="state.name">\n        <img style="vertical-align:middle;" aria-hidden src="{{state.flag}}" height="25" />\n        <span>{{ state.name }}</span> |\n        <small>Population: {{state.population}}</small>\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <br />\n  <mat-slide-toggle\n    [checked]="stateCtrl.disabled"\n    (change)="stateCtrl.disabled ? stateCtrl.enable() : stateCtrl.disable()">\n    Disable Input?\n  </mat-slide-toggle>\n</form>',tsCode:"import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\nimport {Observable} from 'rxjs/Observable';\nimport {startWith} from 'rxjs/operators/startWith';\nimport {map} from 'rxjs/operators/map';\n\nexport class State {\n  constructor(public name: string, public population: string, public flag: string) { }\n}\n\n/**\n * @title Autocomplete overview\n*/\n@Component({\n  selector: 'autocomplete-overview-example',\n  templateUrl: 'autocomplete-overview-example.html',\n  styleUrls: ['autocomplete-overview-example.css']\n})\nexport class AutocompleteOverviewExample {\n  stateCtrl: FormControl;\n  filteredStates: Observable<any[]>;\n  states: State[] = [\n  {\n    name: 'Arkansas',\n    population: '2.978M',\n    // https://commons.wikimedia.org/wiki/File:Flag_of_Arkansas.svg\n    flag: 'https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg'\n  },\n  {\n\tname: 'California',\n    population: '39.14M',\n    // https://commons.wikimedia.org/wiki/File:Flag_of_California.svg\n    flag: 'https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg'\n  },\n  {\n    name: 'Florida',\n\tpopulation: '20.27M',\n\t// https://commons.wikimedia.org/wiki/File:Flag_of_Florida.svg\n\tflag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg'\n  },\n  {\n    name: 'Texas',\n    population: '27.47M',\n    // https://commons.wikimedia.org/wiki/File:Flag_of_Texas.svg\n    flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg'\n  }\n];\n  constructor() {\n    this.stateCtrl = new FormControl();\n     this.filteredStates = this.stateCtrl.valueChanges\n      .pipe(\n        startWith(''),\n        map(state => state ? this.filterStates(state) : this.states.slice())\n      );\n}\n  filterStates(name: string) {\n    return this.states.filter(state =>\n      state.name.toLowerCase().indexOf(name.toLowerCase()) === 0);\n  }\n}\n",viewCode:"",isCodeVisible:!1},L={beforeCodeTitle:"Option groups autocomplete",htmlCode:'<form [formGroup]="stateForm">\n  <mat-form-field>\n    <input type="text" matInput placeholder="States Group" formControlName="stateGroup" required [matAutocomplete]="autoGroup"/>\n      <mat-autocomplete #autoGroup="matAutocomplete">\n        <mat-optgroup *ngFor="let group of stateGroupOptions | async" [label]="group.letter">\n          <mat-option *ngFor="let name of group.names" [value]="name">\n            {{ name }}\n          </mat-option>\n        </mat-optgroup>\n      </mat-autocomplete>\n  </mat-form-field>\n</form>  ',tsCode:"import {Component, OnInit} from '@angular/core';\nimport {FormGroup, FormBuilder} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {startWith, map} from 'rxjs/operators';\n\nexport interface StateGroup {\n  letter: string;\n  names: string[];\n}\n\n/**\n* @title Option groups autocomplete\n*/\n@Component({\n  templateUrl: './autocomplete-optgroup-example.html',\n  styleUrls: ['./autocomplete-optgroup-example.css'],\n})\n\nexport class AutocompleteOptgroupExample implements OnInit {\n  stateForm: FormGroup = this.fb.group({\n  stateGroup: '',\n});\n\nstateGroups: StateGroup[] = [{\n  letter: 'A',\n  names: ['Alabama', 'Alaska', 'Arizona', 'Arkansas']\n}, {\n  letter: 'C',\n  names: ['California', 'Colorado', 'Connecticut']\n}, {\n  letter: 'D',\n  names: ['Delaware']\n}, {\n  letter: 'F',\n  names: ['Florida']\n}, {\n  letter: 'G',\n  names: ['Georgia']\n}, {\n  letter: 'H',\n  names: ['Hawaii']\n}, {\n  letter: 'I',\n  names: ['Idaho', 'Illinois', 'Indiana', 'Iowa']\n}, {\n  letter: 'K',\n  names: ['Kansas', 'Kentucky']\n}, {\n  letter: 'L',\n  names: ['Louisiana']\n}, {\n  letter: 'M',\n  names: ['Maine', 'Maryland', 'Massachusetts', 'Michigan',\n  'Minnesota', 'Mississippi', 'Missouri', 'Montana']\n}, {\n  letter: 'N',\n  names: ['Nebraska', 'Nevada', 'New Hampshire', 'New Jersey',\n  'New Mexico', 'New York', 'North Carolina', 'North Dakota']\n}, {\n  letter: 'O',\n  names: ['Ohio', 'Oklahoma', 'Oregon']\n}, {\n  letter: 'P',\n  names: ['Pennsylvania']\n}, {\n  letter: 'R',\n  names: ['Rhode Island']\n}, {\n  letter: 'S',\n  names: ['South Carolina', 'South Dakota']\n}, {\n  letter: 'T',\n  names: ['Tennessee', 'Texas']\n}, {\n  letter: 'U',\n  names: ['Utah']\n}, {\n  letter: 'V',\n  names: ['Vermont', 'Virginia']\n}, {\n  letter: 'W',\n  names: ['Washington', 'West Virginia', 'Wisconsin', 'Wyoming']\n}];\n\n  stateGroupOptions: Observable<StateGroup[]>;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.stateGroupOptions = this.stateForm.get('stateGroup')!.valueChanges\n      .pipe(\n        startWith(''),\n          map(val => this.filterGroup(val))\n       );\n  }\n\n  filterGroup(val: string): StateGroup[] {\n    if (val) {\n      return this.stateGroups\n      .map(group => ({ letter: group.letter, names: this._filter(group.names, val) }))\n      .filter(group => group.names.length > 0);\n    }\n\n     return this.stateGroups;\n  }\n\n  private _filter(opt: string[], val: string) {\n    const filterValue = val.toLowerCase();\n      return opt.filter(item => item.toLowerCase().startsWith(filterValue));\n  }\n}",cssCode:"",viewCode:"",isCodeVisible:!1},A=function e(t){o(this,e),this.name=t},R=((T=function(){function e(t){var n=this;o(this,e),this.fb=t,this.myControl=new d.f,this.options=["One","Two","Three"],this.myControl2=new d.f,this.myControl33=new d.f,this.options33=[new A("Mary"),new A("Shelley"),new A("Igor")],this.myControl44=new d.f,this.options44=["One","Two","Three"],this.myControl3=new d.f,this.states=[{name:"Arkansas",population:"2.978M",flag:"https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg"},{name:"California",population:"39.14M",flag:"https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg"},{name:"Florida",population:"20.27M",flag:"https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg"},{name:"Texas",population:"27.47M",flag:"https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg"}],this.stateForm=this.fb.group({stateGroup:""}),this.stateGroups=[{letter:"A",names:["Alabama","Alaska","Arizona","Arkansas"]},{letter:"C",names:["California","Colorado","Connecticut"]},{letter:"D",names:["Delaware"]},{letter:"F",names:["Florida"]},{letter:"G",names:["Georgia"]},{letter:"H",names:["Hawaii"]},{letter:"I",names:["Idaho","Illinois","Indiana","Iowa"]},{letter:"K",names:["Kansas","Kentucky"]},{letter:"L",names:["Louisiana"]},{letter:"M",names:["Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana"]},{letter:"N",names:["Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota"]},{letter:"O",names:["Ohio","Oklahoma","Oregon"]},{letter:"P",names:["Pennsylvania"]},{letter:"R",names:["Rhode Island"]},{letter:"S",names:["South Carolina","South Dakota"]},{letter:"T",names:["Tennessee","Texas"]},{letter:"U",names:["Utah"]},{letter:"V",names:["Vermont","Virginia"]},{letter:"W",names:["Washington","West Virginia","Wisconsin","Wyoming"]}],this.stateCtrl=new d.f,this.filteredStates=this.stateCtrl.valueChanges.pipe(Object(b.a)(""),Object(u.a)(function(e){return e?n.filterStates(e):n.states.slice()}))}return a(e,[{key:"filterStates",value:function(e){return this.states.filter(function(t){return 0===t.name.toLowerCase().indexOf(e.toLowerCase())})}},{key:"ngOnInit",value:function(){var e=this;this.exampleSimpleAutocomplete=D,this.exampleAddingACustomFilter=F,this.exampleSettingSeparateControlAndDisplayValues=E,this.exampleAutomaticallyHighlightingTheFirstOption=O,this.exampleAutocompleteOverview=q,this.exampleOptionGroupsAutocomplete=L,this.filteredOptions=this.myControl.valueChanges.pipe(Object(b.a)(""),Object(u.a)(function(t){return e.filter(t)})),this.filteredOptions33=this.myControl33.valueChanges.pipe(Object(b.a)(""),Object(u.a)(function(e){return"string"==typeof e?e:e.name}),Object(u.a)(function(t){return t?e.filter33(t):e.options33.slice()})),this.filteredOptions44=this.myControl44.valueChanges.pipe(Object(b.a)(""),Object(u.a)(function(t){return e.filter44(t)})),this.stateGroupOptions=this.stateForm.get("stateGroup").valueChanges.pipe(Object(b.a)(""),Object(u.a)(function(t){return e.filterGroup(t)}))}},{key:"filter33",value:function(e){return this.options33.filter(function(t){return 0===t.name.toLowerCase().indexOf(e.toLowerCase())})}},{key:"filter44",value:function(e){return this.options44.filter(function(t){return 0===t.toLowerCase().indexOf(e.toLowerCase())})}},{key:"displayFn",value:function(e){return e?e.name:void 0}},{key:"filter",value:function(e){return this.options.filter(function(t){return t.toLowerCase().includes(e.toLowerCase())})}},{key:"filterGroup",value:function(e){var t=this;return e?this.stateGroups.map(function(n){return{letter:n.letter,names:t._filter(n.names,e)}}).filter(function(e){return e.names.length>0}):this.stateGroups}},{key:"_filter",value:function(e,t){var n=t.toLowerCase();return e.filter(function(e){return e.toLowerCase().startsWith(n)})}}]),e}()).\u0275fac=function(e){return new(e||T)(c.Qb(d.e))},T.\u0275cmp=c.Kb({type:T,selectors:[["app-material-autocomplete"]],decls:113,vars:37,consts:[[3,"svg"],["href","https://material.angular.io/components/autocomplete/overview","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],[1,"example-form"],[1,"example-full-width"],["type","text","placeholder","Pick one","aria-label","Number","matInput","",3,"formControl","matAutocomplete"],["auto1","matAutocomplete"],[3,"value",4,"ngFor","ngForOf"],["auto2","matAutocomplete"],["type","text","placeholder","Assignee","aria-label","Assignee","matInput","",3,"formControl","matAutocomplete"],[3,"displayWith"],["auto33","matAutocomplete"],["autoActiveFirstOption",""],["auto44","matAutocomplete"],["matInput","","placeholder","State","aria-label","State",3,"matAutocomplete","formControl"],["auto55","matAutocomplete"],[3,"checked","change"],[3,"formGroup"],["type","text","matInput","","placeholder","States Group","formControlName","stateGroup","required","",3,"matAutocomplete"],["autoGroup","matAutocomplete"],[3,"label",4,"ngFor","ngForOf"],[3,"value"],["aria-hidden","","height","25",2,"vertical-align","middle",3,"src"],[3,"label"]],template:function(e,t){if(1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"span"),c.Nc(9,"The autocomplete is a normal text input enhanced by a panel of suggested options. "),c.Vb(),c.Rb(10,"div",6),c.Wb(11,"div"),c.Wb(12,"form",7),c.Wb(13,"mat-form-field",8),c.Rb(14,"input",9),c.Wb(15,"mat-autocomplete",null,10),c.Lc(17,V,2,2,"mat-option",11),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(18,"app-code-preview",4),c.Wb(19,"div",5),c.Wb(20,"span"),c.Nc(21," At this point, the autocomplete panel should be toggleable on focus and options should be selectable. But if we want our options to filter when we type, we need to add a custom filter. "),c.Vb(),c.Rb(22,"div",6),c.Wb(23,"div"),c.Wb(24,"form",7),c.Wb(25,"mat-form-field",8),c.Rb(26,"input",9),c.Wb(27,"mat-autocomplete",null,12),c.Lc(29,W,2,2,"mat-option",11),c.lc(30,"async"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(31,"app-code-preview",4),c.Wb(32,"div",5),c.Wb(33,"span"),c.Nc(34," If you want the option's control value (what is saved in the form) to be different than the option's display value (what is displayed in the text field), you'll need to set the "),c.Wb(35,"code"),c.Nc(36,"displayWith"),c.Vb(),c.Nc(37," property on your autocomplete element. A common use case for this might be if you want to save your data as an object, but display just one of the option's string properties. To make this work, create a function on your component class that maps the control value to the desired display value. Then bind it to the autocomplete's "),c.Wb(38,"code"),c.Nc(39,"displayWith"),c.Vb(),c.Nc(40," property. "),c.Vb(),c.Rb(41,"div",6),c.Wb(42,"div"),c.Wb(43,"form",7),c.Wb(44,"mat-form-field",8),c.Rb(45,"input",13),c.Wb(46,"mat-autocomplete",14,15),c.Lc(48,y,2,2,"mat-option",11),c.lc(49,"async"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(50,"div",3),c.Wb(51,"app-code-preview",4),c.Wb(52,"div",5),c.Wb(53,"span"),c.Nc(54," If your use case requires for the first autocomplete option to be highlighted when the user opens the panel, you can do so by setting the "),c.Wb(55,"code"),c.Nc(56,"autoActiveFirstOption"),c.Vb(),c.Nc(57," input on the "),c.Wb(58,"code"),c.Nc(59,"mat-autocomplete"),c.Vb(),c.Nc(60," component. This behavior can be configured globally using the "),c.Wb(61,"code"),c.Nc(62,"MAT_AUTOCOMPLETE_DEFAULT_OPTIONS"),c.Vb(),c.Nc(63," injection token. "),c.Vb(),c.Rb(64,"div",6),c.Wb(65,"div"),c.Wb(66,"form",7),c.Wb(67,"mat-form-field",8),c.Rb(68,"input",9),c.Wb(69,"mat-autocomplete",16,17),c.Lc(71,N,2,2,"mat-option",11),c.lc(72,"async"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(73,"app-code-preview",4),c.Wb(74,"div",5),c.Wb(75,"span"),c.Nc(76," If your use case requires for the first autocomplete option to be highlighted when the user opens the panel, you can do so by setting the "),c.Wb(77,"code"),c.Nc(78,"autoActiveFirstOption"),c.Vb(),c.Nc(79," input on the "),c.Wb(80,"code"),c.Nc(81,"mat-autocomplete"),c.Vb(),c.Nc(82," component. This behavior can be configured globally using the "),c.Wb(83,"code"),c.Nc(84,"MAT_AUTOCOMPLETE_DEFAULT_OPTIONS"),c.Vb(),c.Nc(85," injection token. "),c.Vb(),c.Rb(86,"div",6),c.Wb(87,"div"),c.Wb(88,"form",7),c.Wb(89,"mat-form-field",8),c.Rb(90,"input",18),c.Wb(91,"mat-autocomplete",null,19),c.Lc(93,k,8,4,"mat-option",11),c.lc(94,"async"),c.Vb(),c.Vb(),c.Rb(95,"br"),c.Wb(96,"mat-slide-toggle",20),c.gc("change",function(){return t.stateCtrl.disabled?t.stateCtrl.enable():t.stateCtrl.disable()}),c.Nc(97," Disable Input? "),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(98,"app-code-preview",4),c.Wb(99,"div",5),c.Wb(100,"span"),c.Wb(101,"code"),c.Nc(102,"mat-option"),c.Vb(),c.Nc(103,"can be collected into groups using the mat-optgroup element: "),c.Vb(),c.Rb(104,"div",6),c.Wb(105,"div"),c.Wb(106,"form",21),c.Wb(107,"mat-form-field"),c.Rb(108,"input",22),c.Wb(109,"mat-autocomplete",null,23),c.Lc(111,S,2,2,"mat-optgroup",24),c.lc(112,"async"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e){var n=c.yc(16),a=c.yc(28),o=c.yc(47),i=c.yc(70),l=c.yc(92),r=c.yc(110);c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleSimpleAutocomplete),c.Cb(8),c.qc("formControl",t.myControl)("matAutocomplete",n),c.Cb(3),c.qc("ngForOf",t.options),c.Cb(1),c.qc("viewItem",t.exampleAddingACustomFilter),c.Cb(8),c.qc("formControl",t.myControl2)("matAutocomplete",a),c.Cb(3),c.qc("ngForOf",c.mc(30,27,t.filteredOptions)),c.Cb(2),c.qc("viewItem",t.exampleSettingSeparateControlAndDisplayValues),c.Cb(14),c.qc("formControl",t.myControl33)("matAutocomplete",o),c.Cb(1),c.qc("displayWith",t.displayFn),c.Cb(2),c.qc("ngForOf",c.mc(49,29,t.filteredOptions33)),c.Cb(3),c.qc("viewItem",t.exampleAutomaticallyHighlightingTheFirstOption),c.Cb(17),c.qc("formControl",t.myControl44)("matAutocomplete",i),c.Cb(3),c.qc("ngForOf",c.mc(72,31,t.filteredOptions44)),c.Cb(2),c.qc("viewItem",t.exampleAutocompleteOverview),c.Cb(17),c.qc("matAutocomplete",l)("formControl",t.stateCtrl),c.Cb(3),c.qc("ngForOf",c.mc(94,33,t.filteredStates)),c.Cb(3),c.qc("checked",t.stateCtrl.disabled),c.Cb(2),c.qc("viewItem",t.exampleOptionGroupsAutocomplete),c.Cb(8),c.qc("formGroup",t.stateForm),c.Cb(2),c.qc("matAutocomplete",r),c.Cb(3),c.qc("ngForOf",c.mc(112,35,t.stateGroupOptions))}},directives:[h.a,g.a,d.z,d.p,d.q,f.c,v.b,d.d,C.c,d.o,d.g,C.a,s.m,x.a,d.i,d.h,d.v,w.o,w.n],pipes:[s.b],styles:[".example-form[_ngcontent-%COMP%] {\n        min-width: 150px;\n        max-width: 500px;\n        width: 100%;\n      }\n      .example-full-width[_ngcontent-%COMP%] {\n        width: 100%;\n      }"],changeDetection:0}),T),P=i("bSwM"),_={beforeCodeTitle:"Basic checkboxes",htmlCode:"<mat-checkbox>Check me!</mat-checkbox>",tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Basic checkboxes\n*/\n@Component({\n  selector: 'checkbox-overview-example',\n  templateUrl: 'checkbox-overview-example.html',\n  styleUrls: ['checkbox-overview-example.css'],\n})\nexport class CheckboxOverviewExample {}",cssCode:"",viewCode:"",isCodeVisible:!1},B={beforeCodeTitle:"Configurable checkbox",htmlCode:'\n<mat-card>\n  <mat-card-content>\n    <h2 class="example-h2">Checkbox configuration</h2>\n    <section class="example-section">\n      <mat-checkbox class="example-margin" [(ngModel)]="checked">Checked</mat-checkbox>\n      <mat-checkbox class="example-margin" [(ngModel)]="indeterminate">Indeterminate</mat-checkbox>\n    </section>\n    <section class="example-section">\n      <label class="example-margin">Align:</label>\n      <mat-radio-group [(ngModel)]="align">\n        <mat-radio-button class="example-margin" value="start">Start</mat-radio-button>\n        <mat-radio-button class="example-margin" value="end">End</mat-radio-button>\n      </mat-radio-group>\n\t</section>\n    <section class="example-section">\n      <mat-checkbox class="example-margin" [(ngModel)]="disabled">Disabled</mat-checkbox>\n    </section>\n  </mat-card-content>\n</mat-card>\n<mat-card class="result">\n  <mat-card-content>\n    <h2 class="example-h2">Result</h2>\n    <section class="example-section">\n      <mat-checkbox\n        class="example-margin"\n        [(ngModel)]="checked"\n        [(indeterminate)]="indeterminate"\n        [align]="align"\n        [disabled]="disabled">\n        I\'m a checkbox\n      </mat-checkbox>\n    </section>\n  </mat-card-content>\n</mat-card>',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n * @title Configurable checkbox\n */\n@Component({\n  selector: 'checkbox-configurable-example',\n  templateUrl: 'checkbox-configurable-example.html',\n  styleUrls: ['checkbox-configurable-example.css'],\n})\nexport class CheckboxConfigurableExample {\n  checked = false;\n  indeterminate = false;\n  align = 'start';\n  disabled = false;\n}",viewCode:"",cssCode:"\n.example-h2 {\n  margin: 10px;\n}\n.example-section {\n  display: flex;\n  align-content: center;\n  align-items: center;\n  height: 60px;\n}\n.example-margin {\n  margin: 0 10px;\n}",isCodeVisible:!1},U={beforeCodeTitle:"Label positions",htmlCode:"<mat-checkbox>Check me!</mat-checkbox>",tsCode:"\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'checkbox-label-positions-example',\n  templateUrl: 'checkbox-label-positions-example.html',\n  styleUrls: ['checkbox-label-positions-example.css'],\n})\nexport class CheckboxLabelPositionsExample {\n\n  labelPosition: string = \"before\";\n\n  changeLablesPositions() {\n    this.labelPosition = this.labelPosition == \"before\" ? \"after\" : \"before\";\n  }\n}",cssCode:"",viewCode:"",isCodeVisible:!1},z={beforeCodeTitle:"Change event binding",htmlCode:'\n<mat-checkbox [(ngModel)]="myValue" (change)="changeValueEvent()">Check me!</mat-checkbox>\n\n<div class="separator separator-dashed my-6"></div>\n\n<span>Checked: <mark>{{ myValue }}</mark></span>',tsCode:"\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'checkbox-change-event-example',\n  templateUrl: 'checkbox-change-event-example.html',\n  styleUrls: ['checkbox-change-event-example.css'],\n})\nexport class CheckboxChangeEventExample {\n  myValue: boolean = true;\n  changeValueEvent() {\n    console.log(\"myValue:\", this.myValue);\n  }\n}",cssCode:"",viewCode:"",isCodeVisible:!1},j=((I=function(){function e(){o(this,e),this.checked=!1,this.indeterminate=!1,this.align="start",this.disabled=!1,this.labelPosition="before",this.myValue=!0}return a(e,[{key:"ngOnInit",value:function(){this.exampleBasicCheckboxes=_,this.exampleConfigurableCheckbox=B,this.exampleLabelPositions=U,this.exampleChangeEvent=z}},{key:"changeLablesPositions",value:function(){this.labelPosition="before"===this.labelPosition?"after":"before"}},{key:"changeValueEvent",value:function(){console.log("myValue:",this.myValue)}}]),e}()).\u0275fac=function(e){return new(e||I)},I.\u0275cmp=c.Kb({type:I,selectors:[["app-material-checkbox"]],decls:82,vars:22,consts:[[3,"svg"],["href","https://material.angular.io/components/checkbox/overview","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],[3,"color"],[3,"labelPosition","color"],[3,"change"],[3,"ngModel","color","ngModelChange","change"],["href","https://angular.io/guide/dependency-injection","target","_blank"],[1,"example-margin",3,"ngModel","color","ngModelChange"],[1,"example-margin"],[3,"ngModel","ngModelChange"],["value","start",1,"example-margin"],["value","end",1,"example-margin"],[1,"example-margin",3,"ngModel","indeterminate","disabled","color","ngModelChange","indeterminateChange"]],template:function(e,t){1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"span"),c.Wb(9,"code"),c.Nc(10,"<mat-checkbox>"),c.Vb(),c.Nc(11," provides the same functionality as a native "),c.Wb(12,"code"),c.Nc(13,'<input type="checkbox">'),c.Vb(),c.Nc(14," enhanced with Material Design styling and animations. "),c.Vb(),c.Rb(15,"div",6),c.Wb(16,"div"),c.Wb(17,"mat-checkbox",7),c.Nc(18,"Check me!"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(19,"app-code-preview",4),c.Wb(20,"div",5),c.Wb(21,"span"),c.Wb(22,"code"),c.Nc(23,"@Input() labelPosition: 'before' | 'after'"),c.Vb(),c.Nc(24," Whether the label should appear after or before the checkbox. Defaults to 'after' "),c.Vb(),c.Rb(25,"div",6),c.Wb(26,"div"),c.Wb(27,"mat-checkbox",8),c.Nc(28,"Check me!"),c.Vb(),c.Rb(29,"div",6),c.Wb(30,"mat-slide-toggle",9),c.gc("change",function(){return t.changeLablesPositions()}),c.Nc(31,"Slide labels position"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(32,"app-code-preview",4),c.Wb(33,"div",5),c.Wb(34,"span"),c.Wb(35,"code"),c.Nc(36,"@Output() change: EventEmitter<MatCheckboxChange>"),c.Vb(),c.Nc(37," Event emitted when the checkbox's checked value changes. "),c.Vb(),c.Rb(38,"div",6),c.Wb(39,"div"),c.Wb(40,"mat-checkbox",10),c.gc("ngModelChange",function(e){return t.myValue=e})("change",function(){return t.changeValueEvent()}),c.Nc(41,"Check me!"),c.Vb(),c.Rb(42,"div",6),c.Wb(43,"span"),c.Nc(44,"Checked: "),c.Wb(45,"mark"),c.Nc(46),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(47,"div",3),c.Wb(48,"app-code-preview",4),c.Wb(49,"div",5),c.Wb(50,"span"),c.Nc(51," When user clicks on the "),c.Wb(52,"code"),c.Nc(53,"mat-checkbox"),c.Vb(),c.Nc(54,", the default behavior is toggle checked value and set indeterminate to false. This behavior can be customized by "),c.Wb(55,"a",11),c.Nc(56,"providing a new value"),c.Vb(),c.Nc(57," of "),c.Wb(58,"code"),c.Nc(59,"MAT_CHECKBOX_CLICK_ACTION"),c.Vb(),c.Nc(60," to the checkbox. "),c.Vb(),c.Rb(61,"div",6),c.Wb(62,"div"),c.Wb(63,"mat-checkbox",12),c.gc("ngModelChange",function(e){return t.checked=e}),c.Nc(64,"Checked"),c.Vb(),c.Wb(65,"mat-checkbox",12),c.gc("ngModelChange",function(e){return t.indeterminate=e}),c.Nc(66,"Indeterminate"),c.Vb(),c.Rb(67,"div",6),c.Wb(68,"label",13),c.Nc(69,"Align:"),c.Vb(),c.Wb(70,"mat-radio-group",14),c.gc("ngModelChange",function(e){return t.align=e}),c.Wb(71,"mat-radio-button",15),c.Nc(72,"Start"),c.Vb(),c.Wb(73,"mat-radio-button",16),c.Nc(74,"End"),c.Vb(),c.Vb(),c.Rb(75,"div",6),c.Wb(76,"mat-checkbox",12),c.gc("ngModelChange",function(e){return t.disabled=e}),c.Nc(77,"Disabled"),c.Vb(),c.Rb(78,"div",6),c.Nc(79," Result: "),c.Wb(80,"mat-checkbox",17),c.gc("ngModelChange",function(e){return t.checked=e})("indeterminateChange",function(e){return t.indeterminate=e}),c.Nc(81," I'm a checkbox "),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e&&(c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleBasicCheckboxes),c.Cb(11),c.qc("color","primary"),c.Cb(2),c.qc("viewItem",t.exampleLabelPositions),c.Cb(8),c.qc("labelPosition",t.labelPosition)("color","primary"),c.Cb(5),c.qc("viewItem",t.exampleChangeEvent),c.Cb(8),c.qc("ngModel",t.myValue)("color","primary"),c.Cb(6),c.Oc(t.myValue),c.Cb(2),c.qc("viewItem",t.exampleConfigurableCheckbox),c.Cb(15),c.qc("ngModel",t.checked)("color","primary"),c.Cb(2),c.qc("ngModel",t.indeterminate)("color","primary"),c.Cb(5),c.qc("ngModel",t.align),c.Cb(6),c.qc("ngModel",t.disabled)("color","primary"),c.Cb(4),c.qc("ngModel",t.checked)("indeterminate",t.indeterminate)("disabled",t.disabled)("color","primary"))},directives:[h.a,g.a,P.a,x.a,d.o,d.r,r.b,r.a],styles:[".example-h2[_ngcontent-%COMP%] {\n        margin: 10px;\n      }\n      .example-section[_ngcontent-%COMP%] {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        height: 60px;\n      }\n      .example-margin[_ngcontent-%COMP%] {\n        margin: 0 10px;\n      }"],changeDetection:0}),I),H=i("WsYS"),G=i("93Pz"),$=i("0IaG"),K=i("NFeN"),Y=i("iadO"),J=i("1yaQ"),Q=i("wd/R"),X=i("bTqV");function Z(e,t){1&e&&c.Rb(0,"div",6)}function ee(e,t){if(1&e&&(c.Wb(0,"div"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Oc(n)}}function te(e,t){if(1&e&&(c.Wb(0,"div",41),c.Wb(1,"div",42),c.Lc(2,ee,2,1,"div",43),c.Vb(),c.Vb()),2&e){var n=c.kc();c.Cb(2),c.qc("ngForOf",n.events)}}var ne,ae={beforeCodeTitle:"Basic datepicker",htmlCode:'\n<mat-form-field>\n  <input matInput [matDatepicker]="picker" placeholder="Choose a date">\n  <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>\n  <mat-datepicker #picker></mat-datepicker>\n</mat-form-field>',tsCode:"\nimport {Component} from '@angular/core';\n\n/** @title Basic datepicker */\n@Component({\n  selector: 'datepicker-overview-example',\n  templateUrl: 'datepicker-overview-example.html',\n  styleUrls: ['datepicker-overview-example.css'],\n})\nexport class DatepickerOverviewExample {}",cssCode:"",viewCode:"",isCodeVisible:!1},oe={beforeCodeTitle:"Datepicker selected value",htmlCode:'\n<mat-card>\n  <mat-card-content>\n    <h2 class="example-h2">Checkbox configuration</h2>\n    <section class="example-section">\n      <mat-checkbox class="example-margin" [(ngModel)]="checked">Checked</mat-checkbox>\n      <mat-checkbox class="example-margin" [(ngModel)]="indeterminate">Indeterminate</mat-checkbox>\n    </section>\n    <section class="example-section">\n      <label class="example-margin">Align:</label>\n      <mat-radio-group [(ngModel)]="align">\n        <mat-radio-button class="example-margin" value="start">Start</mat-radio-button>\n          <mat-radio-button class="example-margin" value="end">End</mat-radio-button>\n      </mat-radio-group>\n    </section>\n    <section class="example-section">\n      <mat-checkbox class="example-margin" [(ngModel)]="disabled">Disabled</mat-checkbox>\n    </section>\n  </mat-card-content>\n</mat-card>\n<mat-card class="result">\n  <mat-card-content>\n    <h2 class="example-h2">Result</h2>\n    <section class="example-section">\n      <mat-checkbox\n        class="example-margin"\n        [(ngModel)]="checked"\n        [(indeterminate)]="indeterminate"\n        [align]="align"\n        [disabled]="disabled">\n        I\'m a checkbox\n      </mat-checkbox>\n    </section>\n  </mat-card-content>\n</mat-card>',tsCode:"\nimport {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n/** @title Datepicker selected value */\n@Component({\n  selector: 'datepicker-value-example',\n  templateUrl: 'datepicker-value-example.html',\n  styleUrls: ['datepicker-value-example.css'],\n})\nexport class DatepickerValueExample {\n  date = new FormControl(new Date());\n  serializedDate = new FormControl((new Date()).toISOString());\n}",viewCode:"",cssCode:"",isCodeVisible:!1},ie={beforeCodeTitle:"Datepicker start date",htmlCode:'\n<mat-form-field>\n  <input matInput [matDatepicker]="picker" placeholder="Choose a date">\n  <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>\n  <mat-datepicker #picker startView="year" [startAt]="startDate"></mat-datepicker>\n</mat-form-field>',tsCode:"\nimport {Component} from '@angular/core';\n\n/** @title Datepicker start date */\n@Component({\n  selector: 'datepicker-start-view-example',\n  templateUrl: 'datepicker-start-view-example.html',\n  styleUrls: ['datepicker-start-view-example.css'],\n})\nexport class DatepickerStartViewExample {\n  startDate = new Date(1990, 0, 1);\n}",viewCode:"",cssCode:"",isCodeVisible:!1},le={beforeCodeTitle:"Datepicker with min & max validation",htmlCode:'\n<mat-form-field class="example-full-width">\n  <input matInput [min]="minDate" [max]="maxDate" [matDatepicker]="picker" placeholder="Choose a date">\n  <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>\n  <mat-datepicker #picker></mat-datepicker>\n</mat-form-field>',tsCode:"\nimport {Component} from '@angular/core';\n\n/** @title Datepicker with min & max validation */\n@Component({\n  selector: 'datepicker-min-max-example',\n  templateUrl: 'datepicker-min-max-example.html',\n  styleUrls: ['datepicker-min-max-example.css'],\n})\nexport class DatepickerMinMaxExample {\n  minDate = new Date(2000, 0, 1);\n  maxDate = new Date(2020, 0, 1);\n}",viewCode:"",cssCode:"",isCodeVisible:!1},re={beforeCodeTitle:"Datepicker with filter validation",htmlCode:'\n<mat-form-field class="example-full-width">\n  <input matInput [matDatepickerFilter]="myFilter" [matDatepicker]="picker" placeholder="Choose a date">\n  <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>\n  <mat-datepicker #picker></mat-datepicker>\n</mat-form-field>',tsCode:"\nimport {Component} from '@angular/core';\n\n/** @title Datepicker with filter validation */\n@Component({\n  selector: 'datepicker-filter-example',\n  templateUrl: 'datepicker-filter-example.html',\n  styleUrls: ['datepicker-filter-example.css'],\n})\nexport class DatepickerFilterExample {\n  myFilter = (d: Date): boolean => {\n    const day = d.day();\n    // Prevent Saturday and Sunday from being selected.\n    return day !== 0 && day !== 6;\n  }\n}",viewCode:"",cssCode:"",isCodeVisible:!1},se={beforeCodeTitle:"Datepicker input and change events",htmlCode:'\n<mat-form-field>\n  <input matInput [matDatepicker]="picker" placeholder="Input & change events"\n    (dateInput)="addEvent(\'input\', $event)" (dateChange)="addEvent(\'change\', $event)">\n  <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>\n  <mat-datepicker #picker></mat-datepicker>\n</mat-form-field>\n<div class="example-events">\n  <div *ngFor="let e of events">{{e}}</div>\n</div>',tsCode:"\nimport {Component} from '@angular/core';\nimport {MatDatepickerInputEvent} from '@angular/material/datepicker';\n\n/** @title Datepicker input and change events */\n@Component({\n  selector: 'datepicker-events-example',\n  templateUrl: 'datepicker-events-example.html',\n  styleUrls: ['datepicker-events-example.css'],\n})\nexport class DatepickerEventsExample {\n  events: string[] = [];\n\n  addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\n  this.events.push(`${type}: ${event.value}`);\n  }\n}",viewCode:"",cssCode:"",isCodeVisible:!1},me={beforeCodeTitle:"Disabled datepicker",htmlCode:'\n<p>\n  <mat-form-field>\n    <input matInput [matDatepicker]="dp1" placeholder="Completely disabled" disabled>\n    <mat-datepicker-toggle matSuffix [for]="dp1"></mat-datepicker-toggle>\n    <mat-datepicker #dp1></mat-datepicker>\n  </mat-form-field>\n</p>\n<p>\n  <mat-form-field>\n    <input matInput [matDatepicker]="dp2" placeholder="Popup disabled">\n    <mat-datepicker-toggle matSuffix [for]="dp2" disabled></mat-datepicker-toggle>\n    <mat-datepicker #dp2></mat-datepicker>\n  </mat-form-field>\n</p>\n<p>\n  <mat-form-field>\n    <input matInput [matDatepicker]="dp3" placeholder="Input disabled" disabled>\n\t<mat-datepicker-toggle matSuffix [for]="dp3">\n  </mat-datepicker-toggle>\n  <mat-datepicker #dp3 disabled="false"></mat-datepicker>\n    </mat-form-field>\n</p>',tsCode:"\nimport {Component} from '@angular/core';\n\n/** @title Disabled datepicker */\n@Component({\n  selector: 'datepicker-disabled-example',\n  templateUrl: 'datepicker-disabled-example.html',\n  styleUrls: ['datepicker-disabled-example.css'],\n})\nexport class DatepickerDisabledExample {}",viewCode:"",cssCode:"",isCodeVisible:!1},ce={beforeCodeTitle:"Datepicker touch UI",htmlCode:'\n<mat-form-field class="example-full-width">\n  <input matInput [matDatepicker]="picker" placeholder="Choose a date">\n  <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>\n  <mat-datepicker touchUi="true" #picker></mat-datepicker>',tsCode:"\nimport {Component} from '@angular/core';\n\n/** @title Datepicker touch UI */\n@Component({\n  selector: 'datepicker-touch-example',\n  templateUrl: 'datepicker-touch-example.html',\n  styleUrls: ['datepicker-touch-example.css'],\n})\nexport class DatepickerTouchExample {}",viewCode:"",cssCode:"",isCodeVisible:!1},pe={beforeCodeTitle:"Datepicker open method",htmlCode:'\n<mat-form-field class="example-full-width">\n  <input matInput [matDatepicker]="picker" placeholder="Choose a date">\n    <mat-datepicker #picker></mat-datepicker>\n</mat-form-field>\n<button mat-raised-button (click)="picker.open()">Open</button>',tsCode:"\nimport {Component} from '@angular/core';\n\n/** @title Datepicker open method */\n@Component({\n  selector: 'datepicker-api-example',\n  templateUrl: 'datepicker-api-example.html',\n  styleUrls: ['datepicker-api-example.css'],\n})\nexport class DatepickerApiExample {}",viewCode:"",cssCode:"",isCodeVisible:!1},de={beforeCodeTitle:"Datepicker with different locale",htmlCode:'\n<mat-form-field>\n  <input matInput [matDatepicker]="dp" placeholder="Different locale">\n  <mat-datepicker-toggle matSuffix [for]="dp"></mat-datepicker-toggle>\n  <mat-datepicker #dp></mat-datepicker>\n</mat-form-field>\n<button mat-button (click)="french()">Dynamically switch to French</button>',tsCode:"\nimport {Component} from '@angular/core';\nimport {MAT_MOMENT_DATE_FORMATS, MomentDateAdapter} from '@angular/material-moment-adapter';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\n\n/** @title Datepicker with different locale */\n@Component({\n  selector: 'datepicker-locale-example',\n  templateUrl: 'datepicker-locale-example.html',\n  styleUrls: ['datepicker-locale-example.css'],\n  providers: [\n    // The locale would typically be provided on the root module of your application. We do it at\n    // the component level here, due to limitations of our example generation script.\n    {provide: MAT_DATE_LOCALE, useValue: 'ja-JP'},\n\n    // `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing\n    // `MatMomentDateModule` in your applications root module. We provide it at the component level\n\t// here, due to limitations of our example generation script.\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\n  ],\n})\nexport class DatepickerLocaleExample {\n  constructor(private adapter: DateAdapter<any>) {}\n  french() {\n    this.adapter.setLocale('fr');\n  }\n}",viewCode:"",cssCode:"",isCodeVisible:!1},be={beforeCodeTitle:"Datepicker that uses Moment.js dates",htmlCode:'\n<mat-form-field>\n  <input matInput [matDatepicker]="dp" placeholder="Moment.js datepicker" [formControl]="date">\n  <mat-datepicker-toggle matSuffix [for]="dp"></mat-datepicker-toggle>\n  <mat-datepicker #dp></mat-datepicker>\n</mat-form-field>',tsCode:"\nimport {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {MAT_MOMENT_DATE_FORMATS, MomentDateAdapter} from '@angular/material-moment-adapter';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\n\n// Depending on whether rollup is used, moment needs to be imported differently.\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\n// the `default as` syntax.\nimport * as _moment from 'moment';\nimport {default as _rollupMoment} from 'moment';\nconst moment = _rollupMoment || _moment;\n\n/** @title Datepicker that uses Moment.js dates */\n@Component({\n  selector: 'datepicker-moment-example',\n  templateUrl: 'datepicker-moment-example.html',\n  styleUrls: ['datepicker-moment-example.css'],\n  providers: [\n    // `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing\n    // `MatMomentDateModule` in your applications root module. We provide it at the component level\n    // here, due to limitations of our example generation script.\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\n  ],\n})\nexport class DatepickerMomentExample {\n// Datepicker takes `Moment` objects instead of `Date` objects.\n  date = new FormControl(moment([2017, 0, 1]));\n}",viewCode:"",cssCode:"",isCodeVisible:!1},ue={beforeCodeTitle:"Datepicker with custom formats",htmlCode:'\n<mat-form-field>\n  <input matInput [matDatepicker]="dp" placeholder="Verbose datepicker" [formControl]="date">\n  <mat-datepicker-toggle matSuffix [for]="dp"></mat-datepicker-toggle>\n  <mat-datepicker #dp></mat-datepicker>\n</mat-form-field>',tsCode:"\nimport {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {MomentDateAdapter} from '@angular/material-moment-adapter';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\n\n// Depending on whether rollup is used, moment needs to be imported differently.\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\n// the `default as` syntax.\nimport * as _moment from 'moment';\nimport {default as _rollupMoment} from 'moment';\nconst moment = _rollupMoment || _moment;\n// See the Moment.js docs for the meaning of these formats:\n// https://momentjs.com/docs/#/displaying/format/\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'LL',\n  },\n  display: {\n    dateInput: 'LL',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n/** @title Datepicker with custom formats */\n@Component({\n  selector: 'datepicker-formats-example',\n  templateUrl: 'datepicker-formats-example.html',\n  styleUrls: ['datepicker-formats-example.css'],\n  providers: [\n  // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\n  // application's root module. We provide it at the component level here, due to limitations of\n  // our example generation script.\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n\t{provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\n  ],\n})\nexport class DatepickerFormatsExample {\n  date = new FormControl(moment());\n}",viewCode:"",cssCode:"",isCodeVisible:!1},he={beforeCodeTitle:"Datepicker uses Moment.js dates",htmlCode:'\n<mat-form-field>\n  <input matInput [matDatepicker]="dp" placeholder="Moment.js datepicker" [formControl]="date">\n  <mat-datepicker-toggle matSuffix [for]="dp"></mat-datepicker-toggle>\n  <mat-datepicker #dp></mat-datepicker>\n</mat-form-field>',tsCode:"\nimport {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {MAT_MOMENT_DATE_FORMATS, MomentDateAdapter} from '@angular/material-moment-adapter';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\n\n// Depending on whether rollup is used, moment needs to be imported differently.\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\n// the `default as` syntax.\nimport * as _moment from 'moment';\n// tslint:disable-next-line:no-duplicate-imports\nimport {default as _rollupMoment} from 'moment';\n\nconst moment = _rollupMoment || _moment;\n\n/** @title Datepicker that uses Moment.js dates */\n@Component({\n  selector: 'datepicker-moment-example',\n  templateUrl: 'datepicker-moment-example.html',\n  styleUrls: ['datepicker-moment-example.css'],\n  providers: [\n  // `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing\n  // `MatMomentDateModule` in your applications root module. We provide it at the component level\n  // here, due to limitations of our example generation script.\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\n  ],\n})\nexport class DatepickerMomentExample {\n  // Datepicker takes `Moment` objects instead of `Date` objects.\n  date = new FormControl(moment([2017, 0, 1]));\n}",cssCode:"",viewCode:"",isCodeVisible:!1},ge=Q,fe=((ne=function(){function e(){o(this,e),this.startDate=new Date(1990,0,1),this.date=new d.f(new Date),this.date10=new d.f(ge([2017,0,1])),this.serializedDate=new d.f((new Date).toISOString()),this.minDate=new Date(2011,0,1),this.maxDate=new Date(2018,11,1),this.events=[],this.myFilter=function(e){var t=e.day();return 0!==t&&6!==t}}return a(e,[{key:"ngOnInit",value:function(){this.exampleBasicDatepicker=ae,this.exampleDatepickerStartDate=ie,this.exampleDatepickerSelectedValue=oe,this.exampleDatepickerWithMinMaxValidation=le,this.exampleDatepickerWithFilterValidation=re,this.exampleDatepickerInputAndChangeEvents=se,this.exampleDisabledDatepicker=me,this.exampleDatepickerTouchUI=ce,this.exampleDatepickerOpenMethod=pe,this.exampleDatepickerWithDifferentLocale=de,this.exampleDatepickerThatUsesMomentJsDates=be,this.exampleDatepickerWithCustomFormats=ue,this.exampleUsesMomentJsDates=he}},{key:"addEvent",value:function(e,t){this.events.push("".concat(e,": ").concat(t.value))}}]),e}()).\u0275fac=function(e){return new(e||ne)},ne.\u0275cmp=c.Kb({type:ne,selectors:[["app-material-datepicker"]],features:[c.Bb([{provide:w.c,useClass:J.c,deps:[w.f]},{provide:w.e,useValue:J.b}])],decls:117,vars:48,consts:[[3,"svg"],["href","https://material.angular.io/components/datepicker/overview","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],["matInput","","placeholder","Choose a date",3,"matDatepicker"],["matSuffix","",3,"for"],["picker",""],["startView","year",3,"startAt"],["picker2",""],["matInput","","placeholder","Angular forms",3,"matDatepicker","formControl"],["picker1",""],["matInput","","placeholder","Angular forms (w/ deserialization)",3,"matDatepicker","formControl"],["picker3",""],["matInput","","placeholder","Value binding",3,"matDatepicker","value"],["picker4",""],[1,"example-full-width"],["matInput","","placeholder","Choose a date",3,"min","max","matDatepicker"],["picker5",""],["matInput","","placeholder","Choose a date",3,"matDatepickerFilter","matDatepicker"],["picker6",""],["matInput","","placeholder","Input & change events",3,"matDatepicker","dateInput","dateChange"],["picker7",""],["class","separator separator-dashed my-6",4,"ngIf"],["class","kt-demo",4,"ngIf"],["matInput","","placeholder","Completely disabled","disabled","",3,"matDatepicker"],["dp1",""],["matInput","","placeholder","Popup disabled",3,"matDatepicker"],["matSuffix","","disabled","",3,"for"],["dp2",""],["matInput","","placeholder","Input disabled","disabled","",3,"matDatepicker"],["disabled","false"],["dp3",""],["touchUi","true"],["picker8",""],["picker9",""],["mat-raised-button","",3,"click"],["matInput","","placeholder","Moment.js datepicker",3,"matDatepicker","formControl"],["dp10",""],[1,"kt-demo"],[1,"kt-demo__preview"],[4,"ngFor","ngForOf"]],template:function(e,t){if(1&e){var n=c.Xb();c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"span"),c.Nc(9," The datepicker allows users to enter a date either through text input, or by choosing a date from the calendar. It is made up of several components and directives that work together. "),c.Vb(),c.Rb(10,"div",6),c.Wb(11,"div"),c.Wb(12,"mat-form-field"),c.Rb(13,"input",7),c.Rb(14,"mat-datepicker-toggle",8),c.Rb(15,"mat-datepicker",null,9),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(17,"app-code-preview",4),c.Wb(18,"div",5),c.Wb(19,"div"),c.Wb(20,"mat-form-field"),c.Rb(21,"input",7),c.Rb(22,"mat-datepicker-toggle",8),c.Rb(23,"mat-datepicker",10,11),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(25,"app-code-preview",4),c.Wb(26,"div",5),c.Wb(27,"div"),c.Wb(28,"mat-form-field"),c.Rb(29,"input",12),c.Rb(30,"mat-datepicker-toggle",8),c.Rb(31,"mat-datepicker",null,13),c.Vb(),c.Rb(33,"div",6),c.Wb(34,"mat-form-field"),c.Rb(35,"input",14),c.Rb(36,"mat-datepicker-toggle",8),c.Rb(37,"mat-datepicker",null,15),c.Vb(),c.Rb(39,"div",6),c.Wb(40,"mat-form-field"),c.Rb(41,"input",16),c.Rb(42,"mat-datepicker-toggle",8),c.Rb(43,"mat-datepicker",null,17),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(45,"app-code-preview",4),c.Wb(46,"div",5),c.Wb(47,"div"),c.Wb(48,"mat-form-field",18),c.Rb(49,"input",19),c.Rb(50,"mat-datepicker-toggle",8),c.Rb(51,"mat-datepicker",null,20),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(53,"app-code-preview",4),c.Wb(54,"div",5),c.Wb(55,"div"),c.Wb(56,"mat-form-field",18),c.Rb(57,"input",21),c.Rb(58,"mat-datepicker-toggle",8),c.Rb(59,"mat-datepicker",null,22),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(61,"div",3),c.Wb(62,"app-code-preview",4),c.Wb(63,"div",5),c.Wb(64,"div"),c.Wb(65,"mat-form-field"),c.Wb(66,"input",23),c.gc("dateInput",function(e){return t.addEvent("input",e)})("dateChange",function(e){return t.addEvent("change",e)}),c.Vb(),c.Rb(67,"mat-datepicker-toggle",8),c.Rb(68,"mat-datepicker",null,24),c.Vb(),c.Lc(70,Z,1,0,"div",25),c.Lc(71,te,3,1,"div",26),c.Vb(),c.Vb(),c.Vb(),c.Wb(72,"app-code-preview",4),c.Wb(73,"div",5),c.Wb(74,"div"),c.Wb(75,"mat-form-field"),c.Rb(76,"input",27),c.Rb(77,"mat-datepicker-toggle",8),c.Rb(78,"mat-datepicker",null,28),c.Vb(),c.Rb(80,"div",6),c.Wb(81,"mat-form-field"),c.Rb(82,"input",29),c.Rb(83,"mat-datepicker-toggle",30),c.Rb(84,"mat-datepicker",null,31),c.Vb(),c.Rb(86,"div",6),c.Wb(87,"mat-form-field"),c.Rb(88,"input",32),c.Rb(89,"mat-datepicker-toggle",8),c.Rb(90,"mat-datepicker",33,34),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(92,"app-code-preview",4),c.Wb(93,"div",5),c.Wb(94,"div"),c.Wb(95,"mat-form-field",18),c.Rb(96,"input",7),c.Rb(97,"mat-datepicker-toggle",8),c.Rb(98,"mat-datepicker",35,36),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(100,"app-code-preview",4),c.Wb(101,"div",5),c.Wb(102,"div"),c.Wb(103,"mat-form-field",18),c.Rb(104,"input",7),c.Rb(105,"mat-datepicker",null,37),c.Vb(),c.Wb(107,"button",38),c.gc("click",function(){return c.Bc(n),c.yc(106).open()}),c.Nc(108,"Open"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(109,"app-code-preview",4),c.Wb(110,"div",5),c.Wb(111,"div"),c.Wb(112,"mat-form-field"),c.Rb(113,"input",39),c.Rb(114,"mat-datepicker-toggle",8),c.Rb(115,"mat-datepicker",null,40),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()}if(2&e){var a=c.yc(16),o=c.yc(24),i=c.yc(32),l=c.yc(38),r=c.yc(44),s=c.yc(52),m=c.yc(60),p=c.yc(69),d=c.yc(79),b=c.yc(85),u=c.yc(91),h=c.yc(99),g=c.yc(106),f=c.yc(116);c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleBasicDatepicker),c.Cb(7),c.qc("matDatepicker",a),c.Cb(1),c.qc("for",a),c.Cb(3),c.qc("viewItem",t.exampleDatepickerStartDate),c.Cb(4),c.qc("matDatepicker",o),c.Cb(1),c.qc("for",o),c.Cb(1),c.qc("startAt",t.startDate),c.Cb(2),c.qc("viewItem",t.exampleDatepickerSelectedValue),c.Cb(4),c.qc("matDatepicker",i)("formControl",t.date),c.Cb(1),c.qc("for",i),c.Cb(5),c.qc("matDatepicker",l)("formControl",t.serializedDate),c.Cb(1),c.qc("for",l),c.Cb(5),c.qc("matDatepicker",r)("value",t.date.value),c.Cb(1),c.qc("for",r),c.Cb(3),c.qc("viewItem",t.exampleDatepickerWithMinMaxValidation),c.Cb(4),c.qc("min",t.minDate)("max",t.maxDate)("matDatepicker",s),c.Cb(1),c.qc("for",s),c.Cb(3),c.qc("viewItem",t.exampleDatepickerWithFilterValidation),c.Cb(4),c.qc("matDatepickerFilter",t.myFilter)("matDatepicker",m),c.Cb(1),c.qc("for",m),c.Cb(4),c.qc("viewItem",t.exampleDatepickerInputAndChangeEvents),c.Cb(4),c.qc("matDatepicker",p),c.Cb(1),c.qc("for",p),c.Cb(3),c.qc("ngIf",t.events&&t.events.length>0),c.Cb(1),c.qc("ngIf",t.events&&t.events.length>0),c.Cb(1),c.qc("viewItem",t.exampleDisabledDatepicker),c.Cb(4),c.qc("matDatepicker",d),c.Cb(1),c.qc("for",d),c.Cb(5),c.qc("matDatepicker",b),c.Cb(1),c.qc("for",b),c.Cb(5),c.qc("matDatepicker",u),c.Cb(1),c.qc("for",u),c.Cb(3),c.qc("viewItem",t.exampleDatepickerTouchUI),c.Cb(4),c.qc("matDatepicker",h),c.Cb(1),c.qc("for",h),c.Cb(3),c.qc("viewItem",t.exampleDatepickerOpenMethod),c.Cb(4),c.qc("matDatepicker",g),c.Cb(5),c.qc("viewItem",t.exampleUsesMomentJsDates),c.Cb(4),c.qc("matDatepicker",f)("formControl",t.date10),c.Cb(1),c.qc("for",f)}},directives:[h.a,g.a,f.c,v.b,Y.b,Y.d,f.j,Y.a,d.d,d.o,d.g,s.n,X.b,s.m],styles:[".example-events[_ngcontent-%COMP%] {\n        width: 400px;\n        height: 200px;\n        border: 1px solid #555;\n        overflow: auto;\n      }"],changeDetection:0}),ne),ve=i("d3UM");function Ce(e,t){if(1&e&&(c.Wb(0,"mat-error"),c.Nc(1),c.Vb()),2&e){var n=c.kc();c.Cb(1),c.Oc(n.getErrorMessage())}}function xe(e,t){1&e&&(c.Wb(0,"mat-error"),c.Nc(1,"Min size: 10px"),c.Vb())}var we,Ve=function(e,t){return{"la-toggle-on":e,"la-toggle-off":t}},We={beforeCodeTitle:"Simple form field",htmlCode:'\n<div class="example-container">\n  <mat-form-field>\n     <input matInput placeholder="Input">\n  </mat-form-field>\n\n  <mat-form-field>\n    <textarea matInput placeholder="Textarea"></textarea>\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-select placeholder="Select">\n      <mat-option value="option">Option</mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>',tsCode:"\nimport {Component} from '@angular/core';\n\n/** @title Simple form field */\n=@Component({\n  selector: 'form-field-overview-example',\n  templateUrl: 'form-field-overview-example.html',\n  styleUrls: ['form-field-overview-example.css']\n})\nexport class FormFieldOverviewExample {}",cssCode:"\n.example-container {\n  display: flex;\n  flex-direction: column;\n}\n.example-container > * {\n  width: 100%;\n}",viewCode:"",isCodeVisible:!1},ye={beforeCodeTitle:"Form field appearance variants",htmlCode:'\n<p>\n  <mat-form-field appearance="legacy">\n    <mat-label>Legacy form field</mat-label>\n      <input matInput placeholder="Placeholder">\n      <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n      <mat-hint>Hint</mat-hint>\n  </mat-form-field>\n</p>\n<p>\n  <mat-form-field appearance="standard">\n    <mat-label>Standard form field</mat-label>\n    <input matInput placeholder="Placeholder">\n    <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n    <mat-hint>Hint</mat-hint>\n  </mat-form-field>\n</p>\n<p>\n  <mat-form-field appearance="fill">\n    <mat-label>Fill form field</mat-label>\n    <input matInput placeholder="Placeholder">\n    <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n     <mat-hint>Hint</mat-hint>\n  </mat-form-field>\n</p>\n<p>\n  <mat-form-field appearance="outline">\n    <mat-label>Outline form field</mat-label>\n    <input matInput placeholder="Placeholder">\n    <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n    <mat-hint>Hint</mat-hint>\n  </mat-form-field>\n</p>\n  ',tsCode:"\nimport {Component} from '@angular/core';\n\n\n/** @title Form field appearance variants */\n@Component({\n  selector: 'form-field-appearance-example',\n  templateUrl: 'form-field-appearance-example.html',\n  styleUrls: ['form-field-appearance-example.css'],\n})\nexport class FormFieldAppearanceExample {}",cssCode:"",viewCode:"",isCodeVisible:!1},Ne={beforeCodeTitle:"Form field with label",htmlCode:'\n<div class="example-container">\n  <form class="example-container" [formGroup]="options">\n    <mat-checkbox formControlName="hideRequired">Hide required marker</mat-checkbox>\n    <div>\n      <label>Float label: </label>\n      <mat-radio-group formControlName="floatLabel">\n        <mat-radio-button value="auto">Auto</mat-radio-button>\n        <mat-radio-button value="always">Always</mat-radio-button>\n        <mat-radio-button value="never">Never</mat-radio-button>\n      </mat-radio-group>\n    </div>\n  </form>\n  <mat-form-field\n    [hideRequiredMarker]="options.value.hideRequired"\n    [floatLabel]="options.value.floatLabel">\n    <input matInput placeholder="Simple placeholder" required>\n  </mat-form-field>\n  <mat-form-field [floatLabel]="options.value.floatLabel">\n    <mat-label>Both a label and a placeholder</mat-label>\n    <input matInput placeholder="Simple placeholder">\n  </mat-form-field>\n  <mat-form-field\n    [hideRequiredMarker]="options.value.hideRequired"\n    [floatLabel]="options.value.floatLabel">\n    <mat-select required>\n      <mat-option>-- None --</mat-option>\n      <mat-option value="option">Option</mat-option>\n    </mat-select>\n    <mat-placeholder><mat-icon>favorite</mat-icon> <b> Fancy</b> <i> placeholder</i></mat-placeholder>\n  </mat-form-field>\n</div>',tsCode:"\nimport {Component} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\n/** @title Form field with label */\n@Component({\n  selector: 'form-field-label-example',\n  templateUrl: 'form-field-label-example.html',\n  styleUrls: ['form-field-label-example.css']\n})\nexport class FormFieldLabelExample {\n  options: FormGroup;\n  constructor(fb: FormBuilder) {\n    this.options = fb.group({\n      hideRequired: false,\n      floatLabel: 'auto',\n    });\n  }\n}",viewCode:"",cssCode:"\n.example-container {\n  display: flex;\n  flex-direction: column;\n}\n.example-container > * {\n  width: 100%;\n}\n.example-container form {\n  margin-bottom: 20px;\n}\n.example-container form > * {\n  margin: 5px 0;\n}\n.example-container .mat-radio-button {\n  margin: 0 5px;\n}",isCodeVisible:!1},ke={beforeCodeTitle:"Form field with hints",htmlCode:'\n<div class="example-container">\n  <mat-form-field hintLabel="Max 10 characters">\n    <input matInput #input maxlength="10" placeholder="Enter some input">\n    <mat-hint align="end">{{input.value?.length || 0}}/10</mat-hint>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-select placeholder="Select me">\n      <mat-option value="option">Option</mat-option>\n    </mat-select>\n    <mat-hint align="end">Here\'s the dropdown arrow ^</mat-hint>\n  </mat-form-field>\n</div>',tsCode:"\nimport {Component} from '@angular/core';\n\n/** @title Form field with hints */\n@Component({\n  selector: 'form-field-hint-example',\n  templateUrl: 'form-field-hint-example.html',\n  styleUrls: ['form-field-hint-example.css']\n})\nexport class FormFieldHintExample {}",viewCode:"",cssCode:"\n.example-container {\n  display: flex;\n  flex-direction: column;\n}\n.example-container > * {\n  width: 100%;\n}",isCodeVisible:!1},Me={beforeCodeTitle:"Form field with error messages",htmlCode:'\n<div class="example-container">\n  <mat-form-field>\n    <input matInput placeholder="Enter your email" [formControl]="email" required>\n      <mat-error *ngIf="email.invalid">{{getErrorMessage()}}</mat-error>\n  </mat-form-field>\n</div>',tsCode:"\nimport {Component} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\n\n/** @title Form field with error messages */\n@Component({\n  selector: 'form-field-error-example',\n  templateUrl: 'form-field-error-example.html',\n  styleUrls: ['form-field-error-example.css']\n})\nexport class FormFieldErrorExample {\n  email = new FormControl('', [Validators.required, Validators.email]);\n\n  getErrorMessage() {\n    return this.email.hasError('required') ? 'You must enter a value' :\n      this.email.hasError('email') ? 'Not a valid email' :\n    '';\n  }\n}",viewCode:"",cssCode:"\n.example-container {\n  display: flex;\n  flex-direction: column;\n}\n.example-container > * {\n  width: 100%;\n}",isCodeVisible:!1},Se={beforeCodeTitle:"Form field with prefix & suffix",htmlCode:'\n<div class="example-container">\n  <mat-form-field>\n    <input matInput placeholder="Enter your password" [type]="hide ? \'password\' : \'text\'">\n    <mat-icon matSuffix (click)="hide = !hide">{{hide ? \'visibility\' : \'visibility_off\'}}</mat-icon>\n  </mat-form-field>\n  <mat-form-field>\n    <input matInput placeholder="Amount" type="number" class="example-right-align">\n    <span matPrefix>$&nbsp;</span>\n    <span matSuffix>.00</span>\n  </mat-form-field>\n</div>',tsCode:"\nimport {Component} from '@angular/core';\n\n/** @title Form field with prefix & suffix */\n@Component({\n  selector: 'form-field-prefix-suffix-example',\n  templateUrl: 'form-field-prefix-suffix-example.html',\n  styleUrls: ['form-field-prefix-suffix-example.css']\n})\nexport class FormFieldPrefixSuffixExample {\n  hide = true;\n}",viewCode:"",cssCode:"\n.example-container {\n  display: flex;\n  flex-direction: column;\n}\n.example-container > * {\n  width: 100%;\n}\n.example-right-align {\n  text-align: right;\n}\ninput.example-right-align::-webkit-outer-spin-button,\ninput.example-right-align::-webkit-inner-spin-button {\n  display: none;\n}\ninput.example-right-align {\n  -moz-appearance: textfield;\n}",isCodeVisible:!1},Te={beforeCodeTitle:"Form field theming",htmlCode:'\n<form class="example-container" [formGroup]="options" [style.fontSize.px]="getFontSize()">\n  <mat-form-field [color]="options.value.color">\n    <mat-select placeholder="Color" formControlName="color">\n      <mat-option value="primary">Primary</mat-option>\n      <mat-option value="accent">Accent</mat-option>\n      <mat-option value="warn">Warn</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field [color]="options.value.color">\n    <input matInput type="number" placeholder="Font size (px)" formControlName="fontSize" min="10">\n     <mat-error *ngIf="options.get(\'fontSize\')?.invalid">Min size: 10px</mat-error>\n  </mat-form-field>\n </form>',tsCode:"\nimport {Component} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n\n/** @title Form field theming */\n@Component({\n  selector: 'form-field-theming-example',\n  templateUrl: 'form-field-theming-example.html',\n  styleUrls: ['form-field-theming-example.css']\n})\nexport class FormFieldThemingExample {\n  options: FormGroup;\n\n  constructor(fb: FormBuilder) {\n    this.options = fb.group({\n      'color': 'primary',\n      'fontSize': [16, Validators.min(10)],\n    });\n  }\n  getFontSize() {\n    return Math.max(10, this.options.value.fontSize);\n  }\n}",viewCode:"",cssCode:"\n.example-container {\n  display: flex;\n  flex-direction: column;\n}\n.example-container > * {\n  width: 100%;\n}",isCodeVisible:!1},Ie={beforeCodeTitle:"Form field with custom telephone number input control.",htmlCode:'\n<div [formGroup]="parts">\n  <input class="area" formControlName="area" size="3">\n  <span>&ndash;</span>\n  <input class="exchange" formControlName="exchange" size="3">\n  <span>&ndash;</span>\n  <input class="subscriber" formControlName="subscriber" size="4">\n</div>',tsCode:"\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Component, ElementRef, Input, OnDestroy} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {MatFormFieldControl} from '@angular/material';\nimport {Subject} from 'rxjs/Subject';\n\n/** Data structure for holding telephone number. */\nexport class MyTel {\n  constructor(public area: string, public exchange: string, public subscriber: string) {}\n}\n/** Custom `MatFormFieldControl` for telephone number input. */\n@Component({\n  selector: 'my-tel-input',\n  templateUrl: 'form-field-custom-control-example.html',\n  styleUrls: ['form-field-custom-control-example.css'],\n  providers: [{provide: MatFormFieldControl, useExisting: MyTelInput}],\n  host: {\n    '[class.floating]': 'shouldLabelFloat',\n    '[id]': 'id',\n    '[attr.aria-describedby]': 'describedBy',\n  }\n})\nexport class MyTelInput implements MatFormFieldControl<MyTel>, OnDestroy {\n  static nextId = 0;\n  parts: FormGroup;\n  stateChanges = new Subject<void>();\n  focused = false;\n  ngControl = null;\n  errorState = false;\n  controlType = 'my-tel-input';\n  get empty() {\n    let n = this.parts.value;\n    return !n.area && !n.exchange && !n.subscriber;\n  }\n  get shouldLabelFloat() { return this.focused || !this.empty; }\n  id = `my-tel-input-${MyTelInput.nextId++}`;\n  describedBy = '';\n\n  @Input()\n  get placeholder() { return this._placeholder; }\n  set placeholder(plh) {\n    this._placeholder = plh;\n    this.stateChanges.next();\n  }\n\n  private _placeholder: string;\n  @Input()\n  get required() { return this._required; }\n  set required(req) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n\n  private _required = false;\n\n  @Input()\n  get disabled() { return this._disabled; }\n  set disabled(dis) {\n    this._disabled = coerceBooleanProperty(dis);\n    this.stateChanges.next();\n  }\n\n  private _disabled = false;\n\n  @Input()\n  get value(): MyTel | null {\n    let n = this.parts.value;\n    if (n.area.length == 3 && n.exchange.length == 3 && n.subscriber.length == 4) {\n      return new MyTel(n.area, n.exchange, n.subscriber);\n    }\n    return null;\n  }\n  set value(tel: MyTel | null) {\n    tel = tel || new MyTel('', '', '');\n    this.parts.setValue({area: tel.area, exchange: tel.exchange, subscriber: tel.subscriber});\n    this.stateChanges.next();\n  }\n\n  constructor(fb: FormBuilder, private fm: FocusMonitor, private elRef: ElementRef) {\n    this.parts = fb.group({\n      'area': '',\n      'exchange': '',\n     'subscriber': '',\n    });\n\n    fm.monitor(elRef.nativeElement, true).subscribe((origin) => {\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n  }\n\n  ngOnDestroy() {\n    this.stateChanges.complete();\n    this.fm.stopMonitoring(this.elRef.nativeElement);\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() != 'input') {\n      this.elRef.nativeElement.querySelector('input').focus();\n    }\n  }\n}\n\n\n/** @title Form field with custom telephone number input control. */\n@Component({\n  selector: 'form-field-custom-control-example',\n  template: `\n    <mat-form-field>\n      <my-tel-input placeholder=\"Phone number\" required></my-tel-input>\n      <mat-icon matSuffix>phone</mat-icon>\n      <mat-hint>Include area code</mat-hint>\n    </mat-form-field>\n  `\n})\nexport class FormFieldCustomControlExample {}",viewCode:"",cssCode:"\ndiv {\n  display: flex;\n}\n\ninput {\n  border: none;\n  background: none;\n  padding: 0;\n  outline: none;\n  font: inherit;\n  text-align: center;\n}\n\nspan {\n  opacity: 0;\n  transition: opacity 200ms;\n}\n\n:host.floating span {\n  opacity: 1;\n}",isCodeVisible:!1},De=((we=function(){function e(t){o(this,e),this.email=new d.f("",[d.x.required,d.x.email]),this.hide=!0,this.options=t.group({hideRequired:!1,floatLabel:"auto"}),this.options2=t.group({color:"primary",fontSize:[16,d.x.min(10)]})}return a(e,[{key:"getErrorMessage",value:function(){return this.email.hasError("required")?"You must enter a value":this.email.hasError("email")?"Not a valid email":""}},{key:"getFontSize",value:function(){return Math.max(10,this.options2.value.fontSize)}},{key:"ngOnInit",value:function(){this.exampleSimpleFormField=We,this.exampleFormFieldWithLabel=Ne,this.exampleFormFieldWithHints=ke,this.exampleFormFieldWithErrorMessages=Me,this.exampleFormFieldWithPrefixSuffix=Se,this.exampleFormFieldTheming=Te,this.exampleFormFieldWithCustomTelephoneNumberInputControl=Ie,this.exampleFormFieldAppearanceVariants=ye}}]),e}()).\u0275fac=function(e){return new(e||we)(c.Qb(d.e))},we.\u0275cmp=c.Kb({type:we,selectors:[["app-material-formfield"]],decls:178,vars:28,consts:[[3,"svg"],["href","https://material.angular.io/components/form-field/overview","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],[1,"example-container"],["matInput","","placeholder","Input"],["matInput","","placeholder","Textarea"],["placeholder","Select"],["value","option"],[1,"example-container",3,"formGroup"],["formControlName","hideRequired"],["formControlName","floatLabel"],["value","auto"],["value","always"],["value","never"],[3,"hideRequiredMarker","floatLabel"],["matInput","","placeholder","Simple placeholder","required",""],[3,"floatLabel"],["matInput","","placeholder","Simple placeholder"],["required",""],["hintLabel","Max 10 characters"],["matInput","","maxlength","10","placeholder","Enter some input"],["input",""],["align","end"],["placeholder","Select me"],["matInput","","placeholder","Enter your email","required","",3,"formControl"],[4,"ngIf"],["matInput","","placeholder","Enter your password",3,"type"],["matSuffix","",1,"la",3,"ngClass","click"],["matInput","","placeholder","Amount","type","number",1,"example-right-align"],["matPrefix",""],["matSuffix",""],[3,"color"],["placeholder","Color","formControlName","color"],["value","primary"],["value","accent"],["value","warn"],["matInput","","type","number","placeholder","Font size (px)","formControlName","fontSize","min","10"],["appearance","legacy"],["matInput","","placeholder","Placeholder"],["appearance","standard"],["appearance","fill"],["appearance","outline"]],template:function(e,t){if(1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"span"),c.Wb(9,"code"),c.Nc(10,"mat-form-field"),c.Vb(),c.Nc(11," is a component used to wrap several Angular Material components and apply common Text field styles such as the underline, floating label, and hint messages. "),c.Rb(12,"br"),c.Nc(13," The following Angular Material components are designed to work inside a "),c.Wb(14,"code"),c.Nc(15,"mat-form-field"),c.Vb(),c.Nc(16,": "),c.Wb(17,"ul"),c.Wb(18,"li"),c.Wb(19,"code"),c.Nc(20,"input matInput & textarea matInput"),c.Vb(),c.Vb(),c.Wb(21,"li"),c.Wb(22,"code"),c.Nc(23,"mat-select"),c.Vb(),c.Vb(),c.Wb(24,"li"),c.Wb(25,"code"),c.Nc(26,"mat-chip-list"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Rb(27,"div",6),c.Wb(28,"div",7),c.Wb(29,"mat-form-field"),c.Rb(30,"input",8),c.Vb(),c.Wb(31,"mat-form-field"),c.Rb(32,"textarea",9),c.Vb(),c.Wb(33,"mat-form-field"),c.Wb(34,"mat-select",10),c.Wb(35,"mat-option",11),c.Nc(36,"Alabama"),c.Vb(),c.Wb(37,"mat-option",11),c.Nc(38,"Alaska"),c.Vb(),c.Wb(39,"mat-option",11),c.Nc(40,"Florida"),c.Vb(),c.Wb(41,"mat-option",11),c.Nc(42,"Illinois"),c.Vb(),c.Wb(43,"mat-option",11),c.Nc(44,"Kansas"),c.Vb(),c.Wb(45,"mat-option",11),c.Nc(46,"Michigan"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(47,"app-code-preview",4),c.Wb(48,"div",5),c.Wb(49,"div",7),c.Wb(50,"form",12),c.Wb(51,"mat-checkbox",13),c.Nc(52,"Hide required marker"),c.Vb(),c.Wb(53,"div"),c.Wb(54,"label"),c.Nc(55,"Float label: "),c.Vb(),c.Wb(56,"mat-radio-group",14),c.Wb(57,"mat-radio-button",15),c.Nc(58,"Auto"),c.Vb(),c.Wb(59,"mat-radio-button",16),c.Nc(60,"Always"),c.Vb(),c.Wb(61,"mat-radio-button",17),c.Nc(62,"Never"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(63,"mat-form-field",18),c.Rb(64,"input",19),c.Vb(),c.Wb(65,"mat-form-field",20),c.Wb(66,"mat-label"),c.Nc(67,"Both a label and a placeholder"),c.Vb(),c.Rb(68,"input",21),c.Vb(),c.Wb(69,"mat-form-field",18),c.Wb(70,"mat-select",22),c.Wb(71,"mat-option"),c.Nc(72,"-- None --"),c.Vb(),c.Wb(73,"mat-option",11),c.Nc(74,"Alabama"),c.Vb(),c.Wb(75,"mat-option",11),c.Nc(76,"Alaska"),c.Vb(),c.Wb(77,"mat-option",11),c.Nc(78,"Florida"),c.Vb(),c.Wb(79,"mat-option",11),c.Nc(80,"Illinois"),c.Vb(),c.Wb(81,"mat-option",11),c.Nc(82,"Kansas"),c.Vb(),c.Wb(83,"mat-option",11),c.Nc(84,"Michigan"),c.Vb(),c.Vb(),c.Wb(85,"mat-placeholder"),c.Wb(86,"b"),c.Nc(87," Fancy"),c.Vb(),c.Wb(88,"i"),c.Nc(89," placeholder"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(90,"app-code-preview",4),c.Wb(91,"div",5),c.Wb(92,"div",7),c.Wb(93,"mat-form-field",23),c.Rb(94,"input",24,25),c.Wb(96,"mat-hint",26),c.Nc(97),c.Vb(),c.Vb(),c.Rb(98,"div",6),c.Wb(99,"mat-form-field"),c.Wb(100,"mat-select",27),c.Wb(101,"mat-option",11),c.Nc(102,"Option"),c.Vb(),c.Vb(),c.Wb(103,"mat-hint",26),c.Nc(104,"Here's the dropdown arrow ^"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(105,"div",3),c.Wb(106,"app-code-preview",4),c.Wb(107,"div",5),c.Wb(108,"div",7),c.Wb(109,"mat-form-field"),c.Rb(110,"input",28),c.Lc(111,Ce,2,1,"mat-error",29),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(112,"app-code-preview",4),c.Wb(113,"div",5),c.Wb(114,"div",7),c.Wb(115,"mat-form-field"),c.Rb(116,"input",30),c.Wb(117,"i",31),c.gc("click",function(){return t.hide=!t.hide}),c.Vb(),c.Vb(),c.Wb(118,"mat-form-field"),c.Rb(119,"input",32),c.Wb(120,"span",33),c.Nc(121,"$\xa0"),c.Vb(),c.Wb(122,"span",34),c.Nc(123,".00"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(124,"app-code-preview",4),c.Wb(125,"div",5),c.Wb(126,"div",7),c.Wb(127,"form",12),c.Wb(128,"mat-form-field",35),c.Wb(129,"mat-select",36),c.Wb(130,"mat-option",37),c.Nc(131,"Primary"),c.Vb(),c.Wb(132,"mat-option",38),c.Nc(133,"Accent"),c.Vb(),c.Wb(134,"mat-option",39),c.Nc(135,"Warn"),c.Vb(),c.Vb(),c.Vb(),c.Wb(136,"mat-form-field",35),c.Rb(137,"input",40),c.Lc(138,xe,2,0,"mat-error",29),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(139,"app-code-preview",4),c.Wb(140,"div",5),c.Wb(141,"div",7),c.Wb(142,"p"),c.Wb(143,"mat-form-field",41),c.Wb(144,"mat-label"),c.Nc(145,"Legacy form field"),c.Vb(),c.Rb(146,"input",42),c.Wb(147,"mat-icon",34),c.Nc(148,"sentiment_very_satisfied"),c.Vb(),c.Wb(149,"mat-hint"),c.Nc(150,"Hint"),c.Vb(),c.Vb(),c.Vb(),c.Wb(151,"p"),c.Wb(152,"mat-form-field",43),c.Wb(153,"mat-label"),c.Nc(154,"Standard form field"),c.Vb(),c.Rb(155,"input",42),c.Wb(156,"mat-icon",34),c.Nc(157,"sentiment_very_satisfied"),c.Vb(),c.Wb(158,"mat-hint"),c.Nc(159,"Hint"),c.Vb(),c.Vb(),c.Vb(),c.Wb(160,"p"),c.Wb(161,"mat-form-field",44),c.Wb(162,"mat-label"),c.Nc(163,"Fill form field"),c.Vb(),c.Rb(164,"input",42),c.Wb(165,"mat-icon",34),c.Nc(166,"sentiment_very_satisfied"),c.Vb(),c.Wb(167,"mat-hint"),c.Nc(168,"Hint"),c.Vb(),c.Vb(),c.Vb(),c.Wb(169,"p"),c.Wb(170,"mat-form-field",45),c.Wb(171,"mat-label"),c.Nc(172,"Outline form field"),c.Vb(),c.Rb(173,"input",42),c.Wb(174,"mat-icon",34),c.Nc(175,"sentiment_very_satisfied"),c.Vb(),c.Wb(176,"mat-hint"),c.Nc(177,"Hint"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e){var n,a=c.yc(95);c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleSimpleFormField),c.Cb(41),c.qc("viewItem",t.exampleFormFieldWithLabel),c.Cb(3),c.qc("formGroup",t.options),c.Cb(13),c.qc("hideRequiredMarker",t.options.value.hideRequired)("floatLabel",t.options.value.floatLabel),c.Cb(2),c.qc("floatLabel",t.options.value.floatLabel),c.Cb(4),c.qc("hideRequiredMarker",t.options.value.hideRequired)("floatLabel",t.options.value.floatLabel),c.Cb(21),c.qc("viewItem",t.exampleFormFieldWithHints),c.Cb(7),c.Pc("",(null==a.value?null:a.value.length)||0,"/10"),c.Cb(9),c.qc("viewItem",t.exampleFormFieldWithErrorMessages),c.Cb(4),c.qc("formControl",t.email),c.Cb(1),c.qc("ngIf",t.email.invalid),c.Cb(1),c.qc("viewItem",t.exampleFormFieldWithPrefixSuffix),c.Cb(4),c.qc("type",t.hide?"password":"text"),c.Cb(1),c.qc("ngClass",c.vc(25,Ve,!t.hide,t.hide)),c.Cb(7),c.qc("viewItem",t.exampleFormFieldTheming),c.Cb(3),c.Ic("font-size",t.getFontSize(),"px"),c.qc("formGroup",t.options2),c.Cb(1),c.qc("color",t.options2.value.color),c.Cb(8),c.qc("color",t.options2.value.color),c.Cb(2),c.qc("ngIf",null==(n=t.options2.get("fontSize"))?null:n.invalid),c.Cb(1),c.qc("viewItem",t.exampleFormFieldAppearanceVariants)}},directives:[h.a,g.a,f.c,v.b,ve.a,w.o,d.z,d.p,d.i,P.a,d.o,d.h,r.b,r.a,f.g,f.h,f.f,d.d,d.v,d.g,s.n,f.j,s.l,f.i,d.t,K.a,f.b],styles:[".example-container[_ngcontent-%COMP%] {\n        display: flex;\n        flex-direction: column;\n      }\n      .example-container[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%] {\n        width: 100%;\n      }\n\n      .example-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\n        margin-bottom: 20px;\n      }\n      .example-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%] {\n        margin: 5px 0;\n      }\n      .example-container[_ngcontent-%COMP%]   .mat-radio-button[_ngcontent-%COMP%] {\n        margin: 0 5px;\n      }\n      .example-right-align[_ngcontent-%COMP%] {\n        text-align: right;\n      }\n      input.example-right-align[_ngcontent-%COMP%]::-webkit-outer-spin-button, input.example-right-align[_ngcontent-%COMP%]::-webkit-inner-spin-button {\n        display: none;\n      }\n      input.example-right-align[_ngcontent-%COMP%] {\n        -moz-appearance: textfield;\n      }"],changeDetection:0}),we);function Fe(e,t){1&e&&(c.Wb(0,"mat-error"),c.Nc(1," Please enter a valid email address "),c.Vb())}function Ee(e,t){1&e&&(c.Wb(0,"mat-error"),c.Nc(1," Email is "),c.Wb(2,"strong"),c.Nc(3,"required"),c.Vb(),c.Vb())}function Oe(e,t){if(1&e){var n=c.Xb();c.Wb(0,"button",35),c.gc("click",function(){return c.Bc(n),c.kc().value=""}),c.Rb(1,"i",36),c.Vb()}}function qe(e,t){1&e&&(c.Wb(0,"mat-error"),c.Nc(1," Please enter a valid email address "),c.Vb())}function Le(e,t){1&e&&(c.Wb(0,"mat-error"),c.Nc(1," Email is "),c.Wb(2,"strong"),c.Nc(3,"required"),c.Vb(),c.Vb())}var Ae,Re={beforeCodeTitle:"Basic Inputs",htmlCode:'\n<form class="example-form">\n  <mat-form-field class="example-full-width">\n    <input matInput placeholder="Favorite food" value="Sushi">\n  </mat-form-field>\n  <mat-form-field class="example-full-width">\n    <textarea matInput placeholder="Leave a comment"></textarea>\n  </mat-form-field>\n</form>',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Basic Inputs\n*/\n@Component({\n  selector: 'input-overview-example',\n  styleUrls: ['input-overview-example.css'],\n  templateUrl: 'input-overview-example.html',\n})\nexport class InputOverviewExample {}",cssCode:"\n.example-form {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n.example-full-width {\n  width: 100%;\n}",viewCode:"",isCodeVisible:!1},Pe={beforeCodeTitle:"Input with a custom ErrorStateMatcher",htmlCode:'\n<form class="example-form">\n  <mat-form-field class="example-full-width">\n    <input matInput placeholder="Email" [formControl]="emailFormControl"\n      [errorStateMatcher]="matcher">\n    <mat-hint>Errors appear instantly!</mat-hint>\n    <mat-error *ngIf="emailFormControl.hasError(\'email\') && !emailFormControl.hasError(\'required\')">\n      Please enter a valid email address\n    </mat-error>\n    <mat-error *ngIf="emailFormControl.hasError(\'required\')">\n      Email is <strong>required</strong>\n    </mat-error>\n  </mat-form-field>\n</form>',tsCode:"\nimport {Component} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n  const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n/** @title Input with a custom ErrorStateMatcher */\n@Component({\n  selector: 'input-error-state-matcher-example',\n  templateUrl: './input-error-state-matcher-example.html',\n  styleUrls: ['./input-error-state-matcher-example.css'],\n})\nexport class InputErrorStateMatcherExample {\n  emailFormControl = new FormControl('', [\n  Validators.required,\n  Validators.email,\n]);\n  matcher = new MyErrorStateMatcher();\n}",viewCode:"",cssCode:"\n.example-form {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n.example-full-width {\n  width: 100%;\n}",isCodeVisible:!1},_e={beforeCodeTitle:"Auto-resizing textarea",htmlCode:'\n<mat-form-field>\n  <textarea matInput placeholder="Autosize textarea" matTextareaAutosize matAutosizeMinRows="2"\n    matAutosizeMaxRows="5"></textarea>\n</mat-form-field>',tsCode:"\nimport {Component} from '@angular/core';'n\n/** @title Auto-resizing textarea */\n@Component({\n  selector: 'input-autosize-textarea-example',\n  templateUrl: './input-autosize-textarea-example.html',\n  styleUrls: ['./input-autosize-textarea-example.css'],\n})\nexport class InputAutosizeTextareaExample {}",viewCode:"",cssCode:"",isCodeVisible:!1},Be={beforeCodeTitle:"Input with a clear button",htmlCode:'\n<mat-form-field class="example-form-field">\n  <input matInput type="text" placeholder="Clearable input" [(ngModel)]="value"/>\n  <button mat-button *ngIf="value" matSuffix mat-icon-button aria-label="Clear" (click)="value=\'\'">\n    <mat-icon>close</mat-icon>\n  </button>\n </mat-form-field>\n\t\t',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Input with a clear button\n*/\n@Component({\n  selector: 'input-clearable-example',\n  templateUrl: './input-clearable-example.html',\n  styleUrls: ['./input-clearable-example.css'],\n})\nexport class InputClearableExample {\n  value = 'Clear me';\n}",viewCode:"",cssCode:"\n.example-form-field {\n  width: 200px;\n}",isCodeVisible:!1},Ue={beforeCodeTitle:"Input with error messages",htmlCode:'\n<form class="example-form">\n  <mat-form-field class="example-full-width">\n    <input matInput placeholder="Email" [formControl]="emailFormControl">\n    <mat-error *ngIf="emailFormControl.hasError(\'email\') && !emailFormControl.hasError(\'required\')">\n      Please enter a valid email address\n    </mat-error>\n    <mat-error *ngIf="emailFormControl.hasError(\'required\')">\n      Email is <strong>required</strong>\n    </mat-error>\n  </mat-form-field>\n </form>',tsCode:"\nimport {Component} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\n\n/**\n* @title Input with error messages\n*/\n@Component({\n  selector: 'input-errors-example',\n  templateUrl: 'input-errors-example.html',\n  styleUrls: ['input-errors-example.css'],\n})\nexport class InputErrorsExample {\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n}",viewCode:"",cssCode:"\n.example-form {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n.example-full-width {\n  width: 100%;\n}",isCodeVisible:!1},ze={beforeCodeTitle:"Inputs in a form",htmlCode:'\n<form class="example-form">\n  <mat-form-field class="example-full-width">\n    <input matInput placeholder="Company (disabled)" disabled value="Google">\n  </mat-form-field>\n  <table class="example-full-width" cellspacing="0"><tr>\n    <td><mat-form-field class="example-full-width">\n      <input matInput placeholder="First name">\n    </mat-form-field></td>\n    <td><mat-form-field class="example-full-width">\n      <input matInput placeholder="Long Last Name That Will Be Truncated">\n    </mat-form-field></td>\n  </tr></table>\n  <p>\n    <mat-form-field class="example-full-width">\n      <textarea matInput placeholder="Address">1600 Amphitheatre Pkwy</textarea>\n    </mat-form-field>\n    <mat-form-field class="example-full-width">\n      <textarea matInput placeholder="Address 2"></textarea>\n    </mat-form-field>\n  </p>\n  <table class="example-full-width" cellspacing="0"><tr>\n    <td><mat-form-field class="example-full-width">\n      <input matInput placeholder="City">\n    </mat-form-field></td>\n    <td><mat-form-field class="example-full-width">\n      <input matInput placeholder="State">\n    </mat-form-field></td>\n    <td><mat-form-field class="example-full-width">\n      <input matInput #postalCode maxlength="5" placeholder="Postal Code" value="94043">\n      <mat-hint align="end">{{postalCode.value.length}} / 5</mat-hint>\n    </mat-form-field></td>\n  </tr></table>\n</form>',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Inputs in a form\n*/\n@Component({\n  selector: 'input-form-example',\n  templateUrl: 'input-form-example.html',\n  styleUrls: ['input-form-example.css'],\n})\nexport class InputFormExample {}",viewCode:"",cssCode:"\n.example-form {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n.example-full-width {\n  width: 100%;\n}",isCodeVisible:!1},je={beforeCodeTitle:"Input with hints",htmlCode:'\n<form class="example-form">\n  <mat-form-field class="example-full-width">\n    <input matInput #message maxlength="256" placeholder="Message">\n    <mat-hint align="start"><strong>Don\'t disclose personal info</strong> </mat-hint>\n    <mat-hint align="end">{{message.value.length}} / 256</mat-hint>\n  </mat-form-field>\n</form>',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Input with hints\n*/\n@Component({\n  selector: 'input-hint-example',\n  templateUrl: 'input-hint-example.html',\n  styleUrls: ['input-hint-example.css'],\n})\nexport class InputHintExample {}",viewCode:"",cssCode:"\n.example-form {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n.example-full-width {\n  width: 100%;\n}",isCodeVisible:!1},He={beforeCodeTitle:"Inputs with prefixes and suffixes",htmlCode:'\n<form class="example-form">\n  <mat-form-field class="example-full-width">\n    <span matPrefix>+1 &nbsp;</span>\n    <input type="tel" matInput placeholder="Telephone">\n    <mat-icon matSuffix>mode_edit</mat-icon>\n  </mat-form-field>\n</form>',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Inputs with prefixes and suffixes\n*/\n@Component({\n  selector: 'input-prefix-suffix-example',\n  templateUrl: 'input-prefix-suffix-example.html',\n styleUrls: ['input-prefix-suffix-example.css'],\n})\nexport class InputPrefixSuffixExample {}",viewCode:"",cssCode:"\n.example-form {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n.example-full-width {\n  width: 100%;\n}",isCodeVisible:!1},Ge=function(){function e(){o(this,e)}return a(e,[{key:"isErrorState",value:function(e,t){return!!(e&&e.invalid&&(e.dirty||e.touched||t&&t.submitted))}}]),e}(),$e=((Ae=function(){function e(){o(this,e),this.emailFormControl=new d.f("",[d.x.required,d.x.email]),this.emailFormControl2=new d.f("",[d.x.required,d.x.email]),this.matcher=new Ge,this.value="Clear me"}return a(e,[{key:"ngOnInit",value:function(){this.exampleBasicInputs=Re,this.exampleInputWithACustomErrorStateMatcher=Pe,this.exampleAutoResizingTextarea=_e,this.exampleInputWithAClearButton=Be,this.exampleInputWithErrorMessages=Ue,this.exampleInputsInAForm=ze,this.exampleInputWithHints=je,this.exampleInputsWithPrefixesAndSuffixes=He}}]),e}()).\u0275fac=function(e){return new(e||Ae)},Ae.\u0275cmp=c.Kb({type:Ae,selectors:[["app-material-input"]],decls:115,vars:20,consts:[[3,"svg"],["href","https://material.angular.io/components/input/overview","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],[1,"example-container"],[1,"example-full-width"],["matInput","","placeholder","Favorite food","value","Sushi"],["matInput","","placeholder","Leave a comment"],["matInput","","placeholder","Email",3,"formControl","errorStateMatcher"],[4,"ngIf"],["matInput","","placeholder","Autosize textarea","matTextareaAutosize","","matAutosizeMinRows","2","matAutosizeMaxRows","5"],[1,"example-form-field"],["matInput","","type","text","placeholder","Clearable input",3,"ngModel","ngModelChange"],["mat-button","","matSuffix","","mat-icon-button","","aria-label","Clear",3,"click",4,"ngIf"],["matInput","","placeholder","Email",3,"formControl"],["matInput","","placeholder","Company (disabled)","disabled","","value","Google"],["cellspacing","0",1,"example-full-width"],["matInput","","placeholder","First name"],["matInput","","placeholder","Long Last Name That Will Be Truncated"],["matInput","","placeholder","Address"],["matInput","","placeholder","Address 2"],["matInput","","placeholder","City"],["matInput","","placeholder","State"],["matInput","","maxlength","5","placeholder","Postal Code","value","94043"],["postalCode",""],["align","end"],["matInput","","maxlength","256","placeholder","Message"],["message",""],["align","start"],["matPrefix",""],["type","tel","matInput","","placeholder","Telephone"],["matSuffix","",1,"la","la-edit"],["mat-button","","matSuffix","","mat-icon-button","","aria-label","Clear",3,"click"],[1,"la","la-close"]],template:function(e,t){if(1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"span"),c.Nc(9," matInput is a directive that allows native "),c.Wb(10,"mark"),c.Nc(11,"input"),c.Vb(),c.Nc(12," and "),c.Wb(13,"mark"),c.Nc(14,"textarea"),c.Vb(),c.Nc(15," elements to work with "),c.Wb(16,"code"),c.Nc(17,"mat-form-field"),c.Vb(),c.Nc(18,". "),c.Vb(),c.Rb(19,"div",6),c.Wb(20,"div",7),c.Wb(21,"form",7),c.Wb(22,"mat-form-field",8),c.Rb(23,"input",9),c.Vb(),c.Rb(24,"div",6),c.Wb(25,"mat-form-field",8),c.Rb(26,"textarea",10),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(27,"app-code-preview",4),c.Wb(28,"div",5),c.Wb(29,"div",7),c.Wb(30,"form",7),c.Wb(31,"mat-form-field",8),c.Rb(32,"input",11),c.Wb(33,"mat-hint"),c.Nc(34,"Errors appear instantly!"),c.Vb(),c.Lc(35,Fe,2,0,"mat-error",12),c.Lc(36,Ee,4,0,"mat-error",12),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(37,"app-code-preview",4),c.Wb(38,"div",5),c.Wb(39,"div",7),c.Wb(40,"form",7),c.Wb(41,"mat-form-field"),c.Rb(42,"textarea",13),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(43,"app-code-preview",4),c.Wb(44,"div",5),c.Wb(45,"div",7),c.Wb(46,"mat-form-field",14),c.Wb(47,"input",15),c.gc("ngModelChange",function(e){return t.value=e}),c.Vb(),c.Lc(48,Oe,2,0,"button",16),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(49,"div",3),c.Wb(50,"app-code-preview",4),c.Wb(51,"div",5),c.Wb(52,"div",7),c.Wb(53,"form",7),c.Wb(54,"mat-form-field",8),c.Rb(55,"input",17),c.Lc(56,qe,2,0,"mat-error",12),c.Lc(57,Le,4,0,"mat-error",12),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(58,"app-code-preview",4),c.Wb(59,"div",5),c.Wb(60,"div",7),c.Wb(61,"form",7),c.Wb(62,"mat-form-field",8),c.Rb(63,"input",18),c.Vb(),c.Rb(64,"div",6),c.Wb(65,"table",19),c.Wb(66,"tr"),c.Wb(67,"td"),c.Wb(68,"mat-form-field",8),c.Rb(69,"input",20),c.Vb(),c.Vb(),c.Wb(70,"td"),c.Wb(71,"mat-form-field",8),c.Rb(72,"input",21),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Rb(73,"div",6),c.Wb(74,"mat-form-field",8),c.Wb(75,"textarea",22),c.Nc(76,"1600 Amphitheatre Pkwy"),c.Vb(),c.Vb(),c.Wb(77,"mat-form-field",8),c.Rb(78,"textarea",23),c.Vb(),c.Rb(79,"div",6),c.Wb(80,"table",19),c.Wb(81,"tr"),c.Wb(82,"td"),c.Wb(83,"mat-form-field",8),c.Rb(84,"input",24),c.Vb(),c.Vb(),c.Wb(85,"td"),c.Wb(86,"mat-form-field",8),c.Rb(87,"input",25),c.Vb(),c.Vb(),c.Wb(88,"td"),c.Wb(89,"mat-form-field",8),c.Rb(90,"input",26,27),c.Wb(92,"mat-hint",28),c.Nc(93),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(94,"app-code-preview",4),c.Wb(95,"div",5),c.Wb(96,"div",7),c.Wb(97,"form",7),c.Wb(98,"mat-form-field",8),c.Rb(99,"input",29,30),c.Wb(101,"mat-hint",31),c.Wb(102,"strong"),c.Nc(103,"Don't disclose personal info"),c.Vb(),c.Vb(),c.Wb(104,"mat-hint",28),c.Nc(105),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(106,"app-code-preview",4),c.Wb(107,"div",5),c.Wb(108,"div",7),c.Wb(109,"form",7),c.Wb(110,"mat-form-field",8),c.Wb(111,"span",32),c.Nc(112,"+1 \xa0"),c.Vb(),c.Rb(113,"input",33),c.Rb(114,"i",34),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e){var n=c.yc(91),a=c.yc(100);c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleBasicInputs),c.Cb(21),c.qc("viewItem",t.exampleInputWithACustomErrorStateMatcher),c.Cb(5),c.qc("formControl",t.emailFormControl)("errorStateMatcher",t.matcher),c.Cb(3),c.qc("ngIf",t.emailFormControl.hasError("email")&&!t.emailFormControl.hasError("required")),c.Cb(1),c.qc("ngIf",t.emailFormControl.hasError("required")),c.Cb(1),c.qc("viewItem",t.exampleAutoResizingTextarea),c.Cb(6),c.qc("viewItem",t.exampleInputWithAClearButton),c.Cb(4),c.qc("ngModel",t.value),c.Cb(1),c.qc("ngIf",t.value),c.Cb(2),c.qc("viewItem",t.exampleInputWithErrorMessages),c.Cb(5),c.qc("formControl",t.emailFormControl2),c.Cb(1),c.qc("ngIf",t.emailFormControl2.hasError("email")&&!t.emailFormControl2.hasError("required")),c.Cb(1),c.qc("ngIf",t.emailFormControl2.hasError("required")),c.Cb(1),c.qc("viewItem",t.exampleInputsInAForm),c.Cb(35),c.Pc("",n.value.length," / 5"),c.Cb(1),c.qc("viewItem",t.exampleInputWithHints),c.Cb(11),c.Pc("",a.value.length," / 256"),c.Cb(1),c.qc("viewItem",t.exampleInputsWithPrefixesAndSuffixes)}},directives:[h.a,g.a,d.z,d.p,d.q,f.c,v.b,d.d,d.o,d.g,f.f,s.n,v.d,d.r,f.i,f.j,f.b,X.b],styles:[".example-form[_ngcontent-%COMP%] {\n        min-width: 150px;\n        max-width: 500px;\n        width: 100%;\n      }\n      .example-full-width[_ngcontent-%COMP%] {\n        width: 100%;\n      }\n      .example-form-field[_ngcontent-%COMP%] {\n        width: 200px;\n      }"],changeDetection:0}),Ae);function Ke(e,t){if(1&e&&(c.Wb(0,"mat-radio-button",22),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.qc("value",n),c.Cb(1),c.Pc(" ",n," ")}}function Ye(e,t){if(1&e&&(c.Wb(0,"mark"),c.Nc(1),c.Vb()),2&e){var n=c.kc();c.Cb(1),c.Oc(n.favoriteSeason)}}function Je(e,t){1&e&&c.Rb(0,"div",6)}function Qe(e,t){if(1&e&&(c.Wb(0,"span"),c.Nc(1,"Welcome to "),c.Wb(2,"mark"),c.Nc(3),c.Vb(),c.Nc(4,"!"),c.Vb()),2&e){var n=c.kc();c.Cb(3),c.Oc(n.state)}}var Xe,Ze={beforeCodeTitle:"Basic radios",htmlCode:'\n<mat-radio-group>\n  <mat-radio-button value="1">Option 1</mat-radio-button>\n  <mat-radio-button value="2">Option 2</mat-radio-button>\n</mat-radio-group>\n\t\t',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Basic radios\n*/\n@Component({\n  selector: 'radio-overview-example',\n  templateUrl: 'radio-overview-example.html',\n styleUrls: ['radio-overview-example.css'],\n})\nexport class RadioOverviewExample {}",cssCode:"\n.mat-radio-button ~ .mat-radio-button {\n  padding-right: 16px;\n}",viewCode:"",isCodeVisible:!1},et={beforeCodeTitle:"Radios with ngModel",htmlCode:'\n<mat-radio-group class="example-radio-group" [(ngModel)]="favoriteSeason">\n  <mat-radio-button class="example-radio-button" *ngFor="let season of seasons" [value]="season">\n    {{season}}\n  </mat-radio-button>\n</mat-radio-group>\n<div class="example-selected-value">Your favorite season is: {{favoriteSeason}}</div>',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Radios with ngModel\n*/\n@Component({\n  selector: 'radio-ng-model-example',\n  templateUrl: 'radio-ng-model-example.html',\n  styleUrls: ['radio-ng-model-example.css'],\n})\nexport class RadioNgModelExample {\n  favoriteSeason: string;\n\n  seasons = [\n    'Winter',\n    'Spring',\n    'Summer',\n    'Autumn',\n  ];\n}",viewCode:"",cssCode:"\n.example-radio-group {\n  display: inline-flex;\n  flex-direction: column;\n}\n.example-radio-button {\n  margin: 5px;\n}\n.example-selected-value {\n  margin: 15px 0;\n}\n\t\t",isCodeVisible:!1},tt={beforeCodeTitle:"Disabled radios",htmlCode:'\n<mat-radio-group disabled="true">\n  <mat-radio-button  value="Alabama">Alabama</mat-radio-button>\n  <mat-radio-button  value="Alaska">Alaska</mat-radio-button>\n  <mat-radio-button  value="Florida">Florida</mat-radio-button>\n  <mat-radio-button  value="Illinois">Illinois</mat-radio-button>\n  <mat-radio-button  value="Kansas">Kansas</mat-radio-button>\n</mat-radio-group>',tsCode:"\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'radio-disabled-example',\n  templateUrl: 'radio-disabled-example.html',\n styleUrls: ['radio-disabled-example.css'],\n})\nexport class RadioDisabledExample {}",cssCode:"\n.mat-radio-button ~ .mat-radio-button {\n  padding-right: 16px;\n}",viewCode:"",isCodeVisible:!1},nt={beforeCodeTitle:"Label position",htmlCode:'\n<mat-radio-group [labelPosition]="labelPosition">\n  <mat-radio-button  value="Alabama">Alabama</mat-radio-button>\n  <mat-radio-button  value="Alaska">Alaska</mat-radio-button>\n  <mat-radio-button  value="Florida">Florida</mat-radio-button>\n  <mat-radio-button  value="Illinois">Illinois</mat-radio-button>\n  <mat-radio-button  value="Kansas">Kansas</mat-radio-button>\n</mat-radio-group>\n<div class="separator separator-dashed my-6"></div>\n<mat-slide-toggle (change)="changeLablesPositions()">Slide labels position</mat-slide-toggle>',tsCode:"\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'radio-label-position-example',\n  templateUrl: 'radio-lablel-position.html',\n styleUrls: ['radio-label-position-example.css'],\n})\nexport class RadioLabelPositionExample {\n  labelPosition: string = \"before\";\n\n  changeLablesPositions() {\n    this.labelPosition = this.labelPosition == \"before\" ? \"after\" : \"before\";\n  }\n}",cssCode:"\n.mat-radio-button ~ .mat-radio-button {\n  padding-right: 16px;\n}",viewCode:"",isCodeVisible:!1},at={beforeCodeTitle:"Change event binding",htmlCode:'\n<mat-radio-group (change)="changeState()" [(ngModel)]="selectedState">\n  <mat-radio-button  value="Alabama">Alabama</mat-radio-button>\n  <mat-radio-button  value="Alaska">Alaska</mat-radio-button>\n  <mat-radio-button  value="Florida">Florida</mat-radio-button>\n  <mat-radio-button  value="Illinois">Illinois</mat-radio-button>\n  <mat-radio-button  value="Kansas">Kansas</mat-radio-button>\n</mat-radio-group>\n<div class="separator separator-dashed my-6" *ngIf="state"></div>\n<span *ngIf="state">Welcome to <mark>{{ state }}</mark>!</span>',tsCode:"\nimport {Component} from '@angular/core';\n\n@Component({\nselector: 'radio-change-event-example',\ntemplateUrl: 'radio-change-event.html',\nstyleUrls: ['radio-change-event-example.css'],\n})\nexport class RadioChangeEventExample {\n  state: string = \"\";\n  selectedState: string = \"\";\n\n  changeState() {\n    this.state = this.selectedState;\n  }\n}",cssCode:"\n.mat-radio-button ~ .mat-radio-button {\n  padding-right: 16px;\n}",viewCode:"",isCodeVisible:!1},ot=((Xe=function(){function e(){o(this,e),this.seasons=["Winter","Spring","Summer","Autumn"],this.state="",this.selectedState="",this.labelPosition="before"}return a(e,[{key:"changeLablesPositions",value:function(){this.labelPosition="before"===this.labelPosition?"after":"before"}},{key:"ngOnInit",value:function(){this.exampleBasicRadios=Ze,this.exampleRadiosWithNgModel=et,this.exampleDisabledRadios=tt,this.exmapleLabelPosition=nt,this.exampleChangeEvent=at}},{key:"changeState",value:function(){this.state=this.selectedState}}]),e}()).\u0275fac=function(e){return new(e||Xe)},Xe.\u0275cmp=c.Kb({type:Xe,selectors:[["app-material-radiobutton"]],decls:103,vars:13,consts:[[3,"svg"],["href","https://material.angular.io/components/radio/overview","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],[1,"example-container"],["value","Alabama"],["value","Alaska"],["value","Florida"],["value","Illinois"],["value","Kansas"],["disabled","true"],[3,"labelPosition"],[3,"change"],[1,"example-radio-group",3,"ngModel","ngModelChange"],["class","example-radio-button",3,"value",4,"ngFor","ngForOf"],[1,"example-selected-value"],[4,"ngIf"],[3,"ngModel","change","ngModelChange"],["class","separator separator-dashed my-6",4,"ngIf"],[1,"example-radio-button",3,"value"]],template:function(e,t){1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"span"),c.Wb(9,"code"),c.Nc(10,"mat-radio"),c.Vb(),c.Nc(11," provides the same functionality as a native "),c.Wb(12,"code"),c.Nc(13,'<input type="radio">'),c.Vb(),c.Nc(14," enhanced with Material Design styling and animations. "),c.Vb(),c.Rb(15,"div",6),c.Wb(16,"div",7),c.Wb(17,"mat-radio-group"),c.Wb(18,"mat-radio-button",8),c.Nc(19,"Alabama"),c.Vb(),c.Wb(20,"mat-radio-button",9),c.Nc(21,"Alaska"),c.Vb(),c.Wb(22,"mat-radio-button",10),c.Nc(23,"Florida"),c.Vb(),c.Wb(24,"mat-radio-button",11),c.Nc(25,"Illinois"),c.Vb(),c.Wb(26,"mat-radio-button",12),c.Nc(27,"Kansas"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(28,"app-code-preview",4),c.Wb(29,"div",5),c.Wb(30,"span"),c.Wb(31,"code"),c.Nc(32,"@Input() disabled: boolean"),c.Vb(),c.Nc(33," Whether the radio group is disabled "),c.Vb(),c.Rb(34,"div",6),c.Wb(35,"div",7),c.Wb(36,"mat-radio-group",13),c.Wb(37,"mat-radio-button",8),c.Nc(38,"Alabama"),c.Vb(),c.Wb(39,"mat-radio-button",9),c.Nc(40,"Alaska"),c.Vb(),c.Wb(41,"mat-radio-button",10),c.Nc(42,"Florida"),c.Vb(),c.Wb(43,"mat-radio-button",11),c.Nc(44,"Illinois"),c.Vb(),c.Wb(45,"mat-radio-button",12),c.Nc(46,"Kansas"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(47,"app-code-preview",4),c.Wb(48,"div",5),c.Wb(49,"span"),c.Wb(50,"code"),c.Nc(51,"@Input() labelPosition: 'before' | 'after'"),c.Vb(),c.Nc(52," Whether the labels should appear after or before the radio-buttons. Defaults to 'after' "),c.Vb(),c.Rb(53,"div",6),c.Wb(54,"div",7),c.Wb(55,"mat-radio-group",14),c.Wb(56,"mat-radio-button",8),c.Nc(57,"Alabama"),c.Vb(),c.Wb(58,"mat-radio-button",9),c.Nc(59,"Alaska"),c.Vb(),c.Wb(60,"mat-radio-button",10),c.Nc(61,"Florida"),c.Vb(),c.Wb(62,"mat-radio-button",11),c.Nc(63,"Illinois"),c.Vb(),c.Wb(64,"mat-radio-button",12),c.Nc(65,"Kansas"),c.Vb(),c.Vb(),c.Rb(66,"div",6),c.Wb(67,"mat-slide-toggle",15),c.gc("change",function(){return t.changeLablesPositions()}),c.Nc(68,"Slide labels position"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(69,"div",3),c.Wb(70,"app-code-preview",4),c.Wb(71,"div",5),c.Wb(72,"div",7),c.Wb(73,"mat-radio-group",16),c.gc("ngModelChange",function(e){return t.favoriteSeason=e}),c.Lc(74,Ke,2,2,"mat-radio-button",17),c.Vb(),c.Rb(75,"div",6),c.Wb(76,"div",18),c.Nc(77," Your favorite season is: "),c.Lc(78,Ye,2,1,"mark",19),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(79,"app-code-preview",4),c.Wb(80,"div",5),c.Wb(81,"span"),c.Wb(82,"code"),c.Nc(83,"@Output() change: EventEmitter<MatRadioChange>"),c.Vb(),c.Nc(84," Event emitted when the group value changes. Change events are only emitted when the value changes due to user interaction with a radio button (the same behavior as "),c.Wb(85,"code"),c.Nc(86,'<input type-"radio">'),c.Vb(),c.Nc(87,"). "),c.Vb(),c.Rb(88,"div",6),c.Wb(89,"div",7),c.Wb(90,"mat-radio-group",20),c.gc("change",function(){return t.changeState()})("ngModelChange",function(e){return t.selectedState=e}),c.Wb(91,"mat-radio-button",8),c.Nc(92,"Alabama"),c.Vb(),c.Wb(93,"mat-radio-button",9),c.Nc(94,"Alaska"),c.Vb(),c.Wb(95,"mat-radio-button",10),c.Nc(96,"Florida"),c.Vb(),c.Wb(97,"mat-radio-button",11),c.Nc(98,"Illinois"),c.Vb(),c.Wb(99,"mat-radio-button",12),c.Nc(100,"Kansas"),c.Vb(),c.Vb(),c.Lc(101,Je,1,0,"div",21),c.Lc(102,Qe,5,1,"span",19),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e&&(c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleBasicRadios),c.Cb(22),c.qc("viewItem",t.exampleDisabledRadios),c.Cb(19),c.qc("viewItem",t.exmapleLabelPosition),c.Cb(8),c.qc("labelPosition",t.labelPosition),c.Cb(15),c.qc("viewItem",t.exampleRadiosWithNgModel),c.Cb(3),c.qc("ngModel",t.favoriteSeason),c.Cb(1),c.qc("ngForOf",t.seasons),c.Cb(4),c.qc("ngIf",t.favoriteSeason),c.Cb(1),c.qc("viewItem",t.exampleChangeEvent),c.Cb(11),c.qc("ngModel",t.selectedState),c.Cb(11),c.qc("ngIf",t.state),c.Cb(1),c.qc("ngIf",t.state))},directives:[h.a,g.a,r.b,r.a,x.a,d.o,d.r,s.m,s.n],styles:["mat-radio-button[_ngcontent-%COMP%] {\n        padding-right: 16px;\n      }\n      .example-radio-group[_ngcontent-%COMP%] {\n        display: inline-flex;\n        flex-direction: column;\n      }\n      .example-radio-button[_ngcontent-%COMP%] {\n        margin: 15px;\n      }\n      .example-selected-value[_ngcontent-%COMP%] {\n        margin: 15px 0;\n      }"],changeDetection:0}),Xe);function it(e,t){if(1&e&&(c.Wb(0,"mat-option",29),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.qc("value",n.value),c.Cb(1),c.Pc(" ",n.viewValue," ")}}function lt(e,t){if(1&e&&(c.Wb(0,"mark"),c.Nc(1),c.Vb()),2&e){var n=c.kc();c.Cb(1),c.Oc(n.selected)}}function rt(e,t){if(1&e&&(c.Wb(0,"mat-option",29),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.qc("value",n.value),c.Cb(1),c.Pc(" ",n.viewValue," ")}}function st(e,t){if(1&e&&(c.Wb(0,"mark"),c.Nc(1),c.Vb()),2&e){var n=c.kc();c.Cb(1),c.Oc(n.selectedValue)}}function mt(e,t){if(1&e&&(c.Wb(0,"mat-option",29),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.qc("value",n),c.Cb(1),c.Pc(" ",n.name," ")}}function ct(e,t){1&e&&(c.Wb(0,"mat-error"),c.Nc(1,"Please choose an animal"),c.Vb())}function pt(e,t){if(1&e&&(c.Wb(0,"mat-option",29),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.qc("value",n),c.Cb(1),c.Oc(n)}}function dt(e,t){if(1&e&&(c.Wb(0,"mat-option",29),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.qc("value",n.value),c.Cb(1),c.Pc(" ",n.viewValue," ")}}function bt(e,t){if(1&e&&(c.Wb(0,"mat-optgroup",30),c.Lc(1,dt,2,2,"mat-option",9),c.Vb()),2&e){var n=t.$implicit;c.qc("label",n.name)("disabled",n.disabled),c.Cb(1),c.qc("ngForOf",n.pokemon)}}function ut(e,t){if(1&e&&(c.Wb(0,"mat-option",29),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.qc("value",n),c.Cb(1),c.Oc(n)}}function ht(e,t){if(1&e&&(c.Wb(0,"span",31),c.Nc(1),c.Vb()),2&e){var n=c.kc();c.Cb(1),c.Pc(" (+",n.toppings2.value.length-1," others) ")}}function gt(e,t){if(1&e&&(c.Wb(0,"mat-option",29),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.qc("value",n),c.Cb(1),c.Oc(n)}}function ft(e,t){1&e&&(c.Wb(0,"mat-error"),c.Nc(1,"You must make a selection"),c.Vb())}function vt(e,t){1&e&&(c.Wb(0,"mat-error"),c.Nc(1," Your selection is invalid "),c.Vb())}var Ct,xt={beforeCodeTitle:"Basic select",htmlCode:'\n<mat-form-field>\n  <mat-select placeholder="Favorite food">\n    <mat-option *ngFor="let food of foods" [value]="food.value">\n      {{ food.viewValue }}\n    </mat-option>\n  </mat-select>\n</mat-form-field>\n\t\t',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Basic select\n*/\n@Component({\n  selector: 'select-overview-example',\n  templateUrl: 'select-overview-example.html',\n  styleUrls: ['select-overview-example.css'],\n})\nexport class SelectOverviewExample {\n  foods = [\n    {value: 'steak-0', viewValue: 'Steak'},\n    {value: 'pizza-1', viewValue: 'Pizza'},\n    {value: 'tacos-2', viewValue: 'Tacos'}\n  ];\n}",cssCode:"",viewCode:"",isCodeVisible:!1},wt={beforeCodeTitle:"Select with 2-way value binding",htmlCode:'\n<mat-form-field>\n  <mat-select [(value)]="selected">\n    <mat-option>None</mat-option>\n    <mat-option value="option1">Option 1</mat-option>\n    <mat-option value="option2">Option 2</mat-option>\n    <mat-option value="option3">Option 3</mat-option>\n  </mat-select>\n</mat-form-field>\n<p>You selected: {{selected}}</p>',tsCode:"\nimport {Component} from '@angular/core';\n\n/** @title Select with 2-way value binding */\n@Component({\n  selector: 'select-value-binding-example',\n  templateUrl: 'select-value-binding-example.html',\n  styleUrls: ['select-value-binding-example.css'],\n})\nexport class SelectValueBindingExample {\n  selected = 'option2';\n}",viewCode:"",cssCode:"",isCodeVisible:!1},Vt={beforeCodeTitle:"Select in a form",htmlCode:'\n<form>\n  <mat-form-field>\n    <mat-select placeholder="Favorite food" [(ngModel)]="selectedValue" name="food">\n      <mat-option *ngFor="let food of foods" [value]="food.value">\n        {{food.viewValue}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\t<p> Selected value: {{selectedValue}} </p>\n</form>',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Select in a form\n*/\n@Component({\n  selector: 'select-form-example',\n  templateUrl: 'select-form-example.html',\n  styleUrls: ['select-form-example.css'],\n})\nexport class SelectFormExample {\n selectedValue: string;\n  foods = [\n    {value: 'steak-0', viewValue: 'Steak'},\n    {value: 'pizza-1', viewValue: 'Pizza'},\n    {value: 'tacos-2', viewValue: 'Tacos'}\n  ];\n}",viewCode:"",cssCode:"",isCodeVisible:!1},Wt={beforeCodeTitle:"Select with form field features",htmlCode:'\n<mat-form-field>\n  <mat-select placeholder="Favorite animal" [formControl]="animalControl" required>\n    <mat-option>--</mat-option>\n    <mat-option *ngFor="let animal of animals" [value]="animal">\n      {{animal.name}}\n\t</mat-option>\n  </mat-select>\n  <mat-error *ngIf="animalControl.hasError(\'required\')">Please choose an animal</mat-error>\n  <mat-hint>{{animalControl.value?.sound}}</mat-hint>\n</mat-form-field>',tsCode:"\nimport {Component} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\n\n/** @title Select with form field features */\n@Component({\n  selector: 'select-hint-error-example',\n  templateUrl: 'select-hint-error-example.html',\n  styleUrls: ['select-hint-error-example.css'],\n})\nexport class SelectHintErrorExample {\n  animalControl = new FormControl('', [Validators.required]);\n  animals = [\n    {name: 'Dog', sound: 'Woof!'},\n    {name: 'Cat', sound: 'Meow!'},\n    {name: 'Cow', sound: 'Moo!'},\n    {name: 'Fox', sound: 'Wa-pa-pa-pa-pa-pa-pow!'},\n  ];\n}\n",viewCode:"",cssCode:"",isCodeVisible:!1},yt={beforeCodeTitle:"Select with reset option",htmlCode:'\n<mat-form-field>\n  <mat-select placeholder="State">\n    <mat-option>None</mat-option>\n    <mat-option *ngFor="let state of states" [value]="state">{{state}}</mat-option>\n  </mat-select>\n</mat-form-field>',tsCode:"\nimport {Component} from '@angular/core';\n\n/** @title Select with reset option */\n@Component({\n  selector: 'select-reset-example',\n  templateUrl: 'select-reset-example.html',\n  styleUrls: ['select-reset-example.css'],\n})\nexport class SelectResetExample {\n  states = [\n    'Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware',\n    'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky',\n    'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi',\n    'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico',\n    'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania',\n    'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont',\n    'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'\n  ];\n}\n",viewCode:"",cssCode:"",isCodeVisible:!1},Nt={beforeCodeTitle:"Select with option groups",htmlCode:'\n<mat-form-field>\n  <mat-select placeholder="Pokemon" [formControl]="pokemonControl">\n    <mat-option>-- None --</mat-option>\n    <mat-optgroup *ngFor="let group of pokemonGroups" [label]="group.name"\n      [disabled]="group.disabled">\n      <mat-option *ngFor="let pokemon of group.pokemon" [value]="pokemon.value">\n         {{ pokemon.viewValue }}\n        </mat-option>\n    </mat-optgroup>\n  </mat-select>\n</mat-form-field>',tsCode:"\nimport {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n/** @title Select with option groups */\n@Component({\n  selector: 'select-optgroup-example',\n  templateUrl: 'select-optgroup-example.html',\n  styleUrls: ['select-optgroup-example.css'],\n})\nexport class SelectOptgroupExample {\n  pokemonControl = new FormControl();\n  pokemonGroups = [\n  {\n    name: 'Grass',\n    pokemon: [\n    { value: 'bulbasaur-0', viewValue: 'Bulbasaur' },\n    { value: 'oddish-1', viewValue: 'Oddish' },\n    { value: 'bellsprout-2', viewValue: 'Bellsprout' }\n  ]\n  },\n  {\n    name: 'Water',\n    pokemon: [\n    { value: 'squirtle-3', viewValue: 'Squirtle' },\n    { value: 'psyduck-4', viewValue: 'Psyduck' },\n    { value: 'horsea-5', viewValue: 'Horsea' }\n  ]\n  },\n  {\n    name: 'Fire',\n    disabled: true,\n    pokemon: [\n    { value: 'charmander-6', viewValue: 'Charmander' },\n    { value: 'vulpix-7', viewValue: 'Vulpix' },\n    { value: 'flareon-8', viewValue: 'Flareon' }\n  ]\n  },\n  {\n    name: 'Psychic',\n    pokemon: [\n    { value: 'mew-9', viewValue: 'Mew' },\n    { value: 'mewtwo-10', viewValue: 'Mewtwo' },\n  ]\n  }\n  ];\n}",viewCode:"",cssCode:"",isCodeVisible:!1},kt={beforeCodeTitle:"Select with multiple selection",htmlCode:'\n<mat-form-field>\n  <mat-select placeholder="Toppings" [formControl]="toppings" multiple>\n    <mat-option *ngFor="let topping of toppingList" [value]="topping">{{topping}}</mat-option>\n  </mat-select>\n</mat-form-field>',tsCode:"\nimport {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n/** @title Select with multiple selection */\n@Component({\n  selector: 'select-multiple-example',\n  templateUrl: 'select-multiple-example.html',\n  styleUrls: ['select-multiple-example.css'],\n})\nexport class SelectMultipleExample {\n  toppings = new FormControl();\n  toppingList = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\n}\n\t\t",viewCode:"",cssCode:"",isCodeVisible:!1},Mt={beforeCodeTitle:"Select with custom trigger text",changeDetection:c.h.OnPush,htmlCode:'\n<mat-form-field>\n  <mat-select placeholder="Toppings" [formControl]="toppings" multiple>\n    <mat-select-trigger>\n      {{toppings.value ? toppings.value[0] : \'\'}}\n      <span *ngIf="toppings.value?.length > 1" class="example-additional-selection">\n        (+{{toppings.value.length - 1}} others)\n       </span>\n    </mat-select-trigger>\n    <mat-option *ngFor="let topping of toppingList" [value]="topping">{{topping}}</mat-option>\n  </mat-select>\n</mat-form-field>',tsCode:"\nimport {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n/** @title Select with custom trigger text */\n@Component({\n  selector: 'select-custom-trigger-example',\n  templateUrl: 'select-custom-trigger-example.html',\n  styleUrls: ['select-custom-trigger-example.css'],\n})\nexport class SelectCustomTriggerExample {\n  toppings = new FormControl();\n  toppingList = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\n}",viewCode:"",cssCode:"\n.example-additional-selection {\n  opacity: 0.75;\n  font-size: 0.75em;\n}",isCodeVisible:!1},St={beforeCodeTitle:"Select with custom panel styling",htmlCode:'\n<mat-form-field>\n  <mat-select placeholder="Panel color" [formControl]="panelColor"\n    panelClass="example-panel-{{panelColor.value}}">\n    <mat-option value="red">Red</mat-option>\n    <mat-option value="green">Green</mat-option>\n    <mat-option value="blue">Blue</mat-option>\n  </mat-select>\n</mat-form-field>',tsCode:"\nimport {Component, ViewEncapsulation} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n/**\n* @title Select with custom panel styling\n*/\n@Component({\n  selector: 'select-panel-class-example',\n  templateUrl: 'select-panel-class-example.html',\n  styleUrls: ['select-panel-class-example.css'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SelectPanelClassExample {\n  panelColor = new FormControl('red');\n}",viewCode:"",cssCode:"\n.example-panel-red .mat-select-content {\n  background: rgba(255, 0, 0, 0.5);\n}\n.example-panel-green .mat-select-content {\n  background: rgba(0, 255, 0, 0.5);\n}\n.example-panel-blue .mat-select-content {\n  background: rgba(0, 0, 255, 0.5);\n}",isCodeVisible:!1},Tt={beforeCodeTitle:"Select with a custom ErrorStateMatcher",htmlCode:'\n<mat-form-field>\n  <mat-select placeholder="Choose one" [formControl]="selected" [errorStateMatcher]="matcher">\n    <mat-option>Clear</mat-option>\n    <mat-option value="valid">Valid option</mat-option>\n    <mat-option value="invalid">Invalid option</mat-option>\n  </mat-select>\n  <mat-hint>Errors appear instantly!</mat-hint>\n  <mat-error *ngIf="selected.hasError(\'required\')">You must make a selection</mat-error>\n  <mat-error *ngIf="selected.hasError(\'pattern\') && !selected.hasError(\'required\')">\n    Your selection is invalid\n  </mat-error>\n</mat-form-field>\n\t  \t',tsCode:"\nimport {Component} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n/** @title Select with a custom ErrorStateMatcher */\n@Component({\n  selector: 'select-error-state-matcher-example',\n  templateUrl: 'select-error-state-matcher-example.html',\n  styleUrls: ['select-error-state-matcher-example.css'],\n})\nexport class SelectErrorStateMatcherExample {\n  selected = new FormControl('valid', [\n    Validators.required,\n    Validators.pattern('valid'),\n  ]);\n\n  matcher = new MyErrorStateMatcher();\n}",viewCode:"",cssCode:"\n\t\t",isCodeVisible:!1},It=function(){function e(){o(this,e)}return a(e,[{key:"isErrorState",value:function(e,t){return!!(e&&e.invalid&&(e.dirty||e.touched||t&&t.submitted))}}]),e}(),Dt=((Ct=function(){function e(){o(this,e),this.toppings=new d.f,this.toppings2=new d.f,this.panelColor=new d.f("red"),this.toppingList2=["Extra cheese","Mushroom","Onion","Pepperoni","Sausage","Tomato"],this.toppingList=["Extra cheese","Mushroom","Onion","Pepperoni","Sausage","Tomato"],this.foods=[{value:"steak-0",viewValue:"Steak"},{value:"pizza-1",viewValue:"Pizza"},{value:"tacos-2",viewValue:"Tacos"}],this.states=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"],this.selected="option2",this.pokemonControl=new d.f,this.pokemonGroups=[{name:"Grass",pokemon:[{value:"bulbasaur-0",viewValue:"Bulbasaur"},{value:"oddish-1",viewValue:"Oddish"},{value:"bellsprout-2",viewValue:"Bellsprout"}]},{name:"Water",pokemon:[{value:"squirtle-3",viewValue:"Squirtle"},{value:"psyduck-4",viewValue:"Psyduck"},{value:"horsea-5",viewValue:"Horsea"}]},{name:"Fire",disabled:!0,pokemon:[{value:"charmander-6",viewValue:"Charmander"},{value:"vulpix-7",viewValue:"Vulpix"},{value:"flareon-8",viewValue:"Flareon"}]},{name:"Psychic",pokemon:[{value:"mew-9",viewValue:"Mew"},{value:"mewtwo-10",viewValue:"Mewtwo"}]}],this.animalControl=new d.f("",[d.x.required]),this.animals=[{name:"Dog",sound:"Woof!"},{name:"Cat",sound:"Meow!"},{name:"Cow",sound:"Moo!"},{name:"Fox",sound:"Wa-pa-pa-pa-pa-pa-pow!"}],this.selected2=new d.f("valid",[d.x.required,d.x.pattern("valid")]),this.matcher=new It}return a(e,[{key:"ngOnInit",value:function(){this.exampleBasicSelect=xt,this.exampleSelectWith2WayValueBinding=wt,this.exampleSelectInAForm=Vt,this.exampleSelectWithFormFieldFeature=Wt,this.exampleSelectWithResetOption=yt,this.exampleSelectWithOptionGroups=Nt,this.exampleSelectWithMultipleSelection=kt,this.exampleSelectWithCustomTriggerText=Mt,this.exampleSelectWithCustomPanelStyling=St,this.exampleSelectWithACustomErrorStateMatcher=Tt}}]),e}()).\u0275fac=function(e){return new(e||Ct)},Ct.\u0275cmp=c.Kb({type:Ct,selectors:[["app-material-select"]],decls:118,vars:36,consts:[[3,"svg"],["href","https://material.angular.io/components/select/overview","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],[1,"example-container"],["placeholder","Favorite food"],[3,"value",4,"ngFor","ngForOf"],[3,"value","valueChange"],["value","option1"],["value","option2"],["value","option3"],[4,"ngIf"],["placeholder","Favorite food","name","food",3,"ngModel","ngModelChange"],["placeholder","Favorite animal","required","",3,"formControl"],["placeholder","State"],["placeholder","Pokemon",3,"formControl"],[3,"label","disabled",4,"ngFor","ngForOf"],["placeholder","Toppings","multiple","",3,"formControl"],["class","example-additional-selection",4,"ngIf"],["placeholder","Panel color",3,"formControl","panelClass"],["value","red"],["value","green"],["value","blue"],["placeholder","Choose one",3,"formControl","errorStateMatcher"],["value","valid"],["value","invalid"],[3,"value"],[3,"label","disabled"],[1,"example-additional-selection"]],template:function(e,t){1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"span"),c.Wb(9,"code"),c.Nc(10,"mat-select"),c.Vb(),c.Nc(11," is a form control for selecting a value from a set of options, similar to the native "),c.Wb(12,"code"),c.Nc(13,"<select>"),c.Vb(),c.Nc(14," element. You can read more about selects in the Material Design spec. It is designed to work inside of a "),c.Wb(15,"code"),c.Nc(16,"mat-form-field"),c.Vb(),c.Nc(17," element. "),c.Vb(),c.Rb(18,"div",6),c.Wb(19,"div",7),c.Wb(20,"mat-form-field"),c.Wb(21,"mat-select",8),c.Lc(22,it,2,2,"mat-option",9),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(23,"app-code-preview",4),c.Wb(24,"div",5),c.Wb(25,"div",7),c.Wb(26,"mat-form-field"),c.Wb(27,"mat-select",10),c.gc("valueChange",function(e){return t.selected=e}),c.Wb(28,"mat-option"),c.Nc(29,"None"),c.Vb(),c.Wb(30,"mat-option",11),c.Nc(31,"Option 1"),c.Vb(),c.Wb(32,"mat-option",12),c.Nc(33,"Option 2"),c.Vb(),c.Wb(34,"mat-option",13),c.Nc(35,"Option 3"),c.Vb(),c.Vb(),c.Vb(),c.Rb(36,"div",6),c.Nc(37," You selected: "),c.Lc(38,lt,2,1,"mark",14),c.Vb(),c.Vb(),c.Vb(),c.Wb(39,"app-code-preview",4),c.Wb(40,"div",5),c.Wb(41,"div",7),c.Wb(42,"form",7),c.Wb(43,"mat-form-field"),c.Wb(44,"mat-select",15),c.gc("ngModelChange",function(e){return t.selectedValue=e}),c.Lc(45,rt,2,2,"mat-option",9),c.Vb(),c.Vb(),c.Rb(46,"div",6),c.Nc(47," Selected value: "),c.Lc(48,st,2,1,"mark",14),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(49,"app-code-preview",4),c.Wb(50,"div",5),c.Wb(51,"div",7),c.Wb(52,"mat-form-field"),c.Wb(53,"mat-select",16),c.Wb(54,"mat-option"),c.Nc(55,"--"),c.Vb(),c.Lc(56,mt,2,2,"mat-option",9),c.Vb(),c.Lc(57,ct,2,0,"mat-error",14),c.Wb(58,"mat-hint"),c.Nc(59),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(60,"app-code-preview",4),c.Wb(61,"div",5),c.Wb(62,"div",7),c.Wb(63,"mat-form-field"),c.Wb(64,"mat-select",17),c.Wb(65,"mat-option"),c.Nc(66,"None"),c.Vb(),c.Lc(67,pt,2,2,"mat-option",9),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(68,"div",3),c.Wb(69,"app-code-preview",4),c.Wb(70,"div",5),c.Wb(71,"div",7),c.Wb(72,"mat-form-field"),c.Wb(73,"mat-select",18),c.Wb(74,"mat-option"),c.Nc(75,"-- None --"),c.Vb(),c.Lc(76,bt,2,3,"mat-optgroup",19),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(77,"app-code-preview",4),c.Wb(78,"div",5),c.Wb(79,"div",7),c.Wb(80,"mat-form-field"),c.Wb(81,"mat-select",20),c.Lc(82,ut,2,2,"mat-option",9),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(83,"app-code-preview",4),c.Wb(84,"div",5),c.Wb(85,"div",7),c.Wb(86,"mat-form-field"),c.Wb(87,"mat-select",20),c.Wb(88,"mat-select-trigger"),c.Nc(89),c.Lc(90,ht,2,1,"span",21),c.Vb(),c.Lc(91,gt,2,2,"mat-option",9),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(92,"app-code-preview",4),c.Wb(93,"div",5),c.Wb(94,"div",7),c.Wb(95,"mat-form-field"),c.Wb(96,"mat-select",22),c.Wb(97,"mat-option",23),c.Nc(98,"Red"),c.Vb(),c.Wb(99,"mat-option",24),c.Nc(100,"Green"),c.Vb(),c.Wb(101,"mat-option",25),c.Nc(102,"Blue"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(103,"app-code-preview",4),c.Wb(104,"div",5),c.Wb(105,"div",7),c.Wb(106,"mat-form-field"),c.Wb(107,"mat-select",26),c.Wb(108,"mat-option"),c.Nc(109,"Clear"),c.Vb(),c.Wb(110,"mat-option",27),c.Nc(111,"Valid option"),c.Vb(),c.Wb(112,"mat-option",28),c.Nc(113,"Invalid option"),c.Vb(),c.Vb(),c.Wb(114,"mat-hint"),c.Nc(115,"Errors appear instantly!"),c.Vb(),c.Lc(116,ft,2,0,"mat-error",14),c.Lc(117,vt,2,0,"mat-error",14),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e&&(c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleBasicSelect),c.Cb(16),c.qc("ngForOf",t.foods),c.Cb(1),c.qc("viewItem",t.exampleSelectWith2WayValueBinding),c.Cb(4),c.qc("value",t.selected),c.Cb(11),c.qc("ngIf",t.selected),c.Cb(1),c.qc("viewItem",t.exampleSelectInAForm),c.Cb(5),c.qc("ngModel",t.selectedValue),c.Cb(1),c.qc("ngForOf",t.foods),c.Cb(3),c.qc("ngIf",t.selectedValue),c.Cb(1),c.qc("viewItem",t.exampleSelectWithFormFieldFeature),c.Cb(4),c.qc("formControl",t.animalControl),c.Cb(3),c.qc("ngForOf",t.animals),c.Cb(1),c.qc("ngIf",t.animalControl.hasError("required")),c.Cb(2),c.Oc(null==t.animalControl.value?null:t.animalControl.value.sound),c.Cb(1),c.qc("viewItem",t.exampleSelectWithResetOption),c.Cb(7),c.qc("ngForOf",t.states),c.Cb(2),c.qc("viewItem",t.exampleSelectWithOptionGroups),c.Cb(4),c.qc("formControl",t.pokemonControl),c.Cb(3),c.qc("ngForOf",t.pokemonGroups),c.Cb(1),c.qc("viewItem",t.exampleSelectWithMultipleSelection),c.Cb(4),c.qc("formControl",t.toppings),c.Cb(1),c.qc("ngForOf",t.toppingList),c.Cb(1),c.qc("viewItem",t.exampleSelectWithCustomTriggerText),c.Cb(4),c.qc("formControl",t.toppings2),c.Cb(2),c.Pc(" ",t.toppings2.value?t.toppings2.value[0]:""," "),c.Cb(1),c.qc("ngIf",(null==t.toppings2.value?null:t.toppings2.value.length)>1),c.Cb(1),c.qc("ngForOf",t.toppingList2),c.Cb(1),c.qc("viewItem",t.exampleSelectWithCustomPanelStyling),c.Cb(4),c.sc("panelClass","example-panel-",t.panelColor.value,""),c.qc("formControl",t.panelColor),c.Cb(7),c.qc("viewItem",t.exampleSelectWithACustomErrorStateMatcher),c.Cb(4),c.qc("formControl",t.selected2)("errorStateMatcher",t.matcher),c.Cb(9),c.qc("ngIf",t.selected2.hasError("required")),c.Cb(1),c.qc("ngIf",t.selected2.hasError("pattern")&&!t.selected2.hasError("required")))},directives:[h.a,g.a,f.c,ve.a,s.m,w.o,s.n,d.z,d.p,d.q,d.o,d.r,d.v,d.g,f.f,ve.c,f.b,w.n],styles:[".example-additional-selection[_ngcontent-%COMP%] {\n        opacity: 0.75;\n        font-size: 0.75em;\n      }\n      .example-panel-red[_ngcontent-%COMP%]   .mat-select-content[_ngcontent-%COMP%] {\n        background: rgba(255, 0, 0, 0.5);\n      }\n      .example-panel-green[_ngcontent-%COMP%]   .mat-select-content[_ngcontent-%COMP%] {\n        background: rgba(0, 255, 0, 0.5);\n      }\n      .example-panel-blue[_ngcontent-%COMP%]   .mat-select-content[_ngcontent-%COMP%] {\n        background: rgba(0, 0, 255, 0.5);\n      }"]}),Ct),Ft=i("5RNC");function Et(e,t){1&e&&c.Rb(0,"div",6)}function Ot(e,t){if(1&e&&(c.Wb(0,"span"),c.Nc(1,"Selected: "),c.Wb(2,"mark"),c.Nc(3),c.Vb(),c.Nc(4,"%"),c.Vb()),2&e){var n=c.kc();c.Cb(3),c.Oc(n.myValue)}}function qt(e,t){if(1&e){var n=c.Xb();c.Wb(0,"mat-checkbox",17),c.gc("ngModelChange",function(e){return c.Bc(n),c.kc().autoTicks=e}),c.Nc(1," Auto ticks "),c.Vb()}if(2&e){var a=c.kc();c.qc("ngModel",a.autoTicks)}}function Lt(e,t){if(1&e){var n=c.Xb();c.Wb(0,"mat-form-field",12),c.Wb(1,"input",21),c.gc("ngModelChange",function(e){return c.Bc(n),c.kc().tickInterval=e}),c.Vb(),c.Vb()}if(2&e){var a=c.kc();c.Cb(1),c.qc("ngModel",a.tickInterval)}}var At,Rt,Pt,_t={beforeCodeTitle:"Basic slider",htmlCode:"<mat-slider></mat-slider>",tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n * @title Basic slider\n */\n@Component({\n  selector: 'slider-overview-example',\n  templateUrl: 'slider-overview-example.html',\n  styleUrls: ['slider-overview-example.css'],\n})\nexport class SliderOverviewExample {}\n\t\t",cssCode:"\n/** No CSS for this example */\n.mat-slider {\n  width: 300px;\n}",viewCode:"",isCodeVisible:!1},Bt={beforeCodeTitle:"Configurable slider",htmlCode:'\n<mat-card>\n  <mat-card-content>\n    <h2 class="example-h2">Slider configuration</h2>\n    <section class="example-section">\n      <mat-form-field class="example-margin">\n        <input matInput type="number" placeholder="Value" [(ngModel)]="value">\n      </mat-form-field>\n      <mat-form-field class="example-margin">\n        <input matInput type="number" placeholder="Min value" [(ngModel)]="min">\n      </mat-form-field>\n      <mat-form-field class="example-margin">\n        <input matInput type="number" placeholder="Max value" [(ngModel)]="max">\n      </mat-form-field>\n      <mat-form-field class="example-margin">\n        <input matInput type="number" placeholder="Step size" [(ngModel)]="step">\n      </mat-form-field>\n    </section>\n    <section class="example-section">\n      <mat-checkbox class="example-margin" [(ngModel)]="showTicks">Show ticks</mat-checkbox>\n      <mat-checkbox class="example-margin" [(ngModel)]="autoTicks" *ngIf="showTicks">\n        Auto ticks\n      </mat-checkbox>\n      <mat-form-field class="example-margin" *ngIf="showTicks && !autoTicks">\n        <input matInput type="number" placeholder="Tick interval" [(ngModel)]="tickInterval">\n      </mat-form-field>\n     </section>\n    <section class="example-section">\n      <mat-checkbox class="example-margin" [(ngModel)]="thumbLabel">Show thumb label</mat-checkbox>\n    </section>\n    <section class="example-section">\n      <mat-checkbox class="example-margin" [(ngModel)]="vertical">Vertical</mat-checkbox>\n      <mat-checkbox class="example-margin" [(ngModel)]="invert">Inverted</mat-checkbox>\n    </section>\n    <section class="example-section">\n      <mat-checkbox class="example-margin" [(ngModel)]="disabled">Disabled</mat-checkbox>\n    </section>\n  </mat-card-content>\n</mat-card>\n<mat-card class="result">\n  <mat-card-content>\n    <h2 class="example-h2">Result</h2>\n    <mat-slider\n      class="example-margin"\n      [disabled]="disabled"\n      [invert]="invert"\n      [max]="max"\n      [min]="min"\n      [step]="step"\n      [thumb-label]="thumbLabel"\n      [tick-interval]="tickInterval"\n      [(ngModel)]="value"\n      [vertical]="vertical">\n    </mat-slider>\n  </mat-card-content>\n</mat-card>',tsCode:"\nimport {Component, ViewEncapsulation} from '@angular/core';\n\n/**\n* @title Configurable slider\n*/\n@Component({\n  selector: 'slider-configurable-example',\n  templateUrl: 'slider-configurable-example.html',\n  styleUrls: ['slider-configurable-example.css'],\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n})\nexport class SliderConfigurableExample {\n  autoTicks = false;\n  disabled = false;\n  invert = false;\n  max = 100;\n  min = 0;\n  showTicks = false;\n  step = 1;\n  thumbLabel = false;\n  value = 0;\n  vertical = false;\n\n  get tickInterval(): number | 'auto' {\n    return this.showTicks ? (this.autoTicks ? 'auto' : this._tickInterval) : 0;\n  }\n  set tickInterval(v) {\n    this._tickInterval = Number(v);\n  }\n  private _tickInterval = 1;\n}",viewCode:"",cssCode:"\n.example-h2 {\n  margin: 10px;\n}\n.example-section {\n  display: flex;\n  align-content: center;\n  align-items: center;\n  height: 60px;\n}\n.example-margin {\n  margin: 10px;\n}\n.mat-slider-horizontal {\n  width: 300px;\n}\n.mat-slider-vertical {\n  height: 300px;\n}",isCodeVisible:!1},Ut={beforeCodeTitle:"Change event binding",htmlCode:'\n<mat-slider (change)="changeSlider()" [(ngModel)]="myValue" min="0" max="100" step="1"></mat-slider>\n<div class="separator separator-dashed my-6" *ngIf="myValue"></div>\n<span *ngIf="myValue">Selected: <mark>{{ myValue }}</mark>%</span>\n',tsCode:"\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'slider-change-event-example',\n  templateUrl: 'slider-change-event-example.html',\n  styleUrls: ['slider-change-event-example.css'],\n})\nexport class SliderChangeEventExample {\n\n  myValue = 50;\n  changeSlider() {\n    console.log('myValue:', this.myValue);\n  }\n}",cssCode:"\n.mat-slider {\n  width: 300px;\n}",viewCode:"",isCodeVisible:!1},zt=((At=function(){function e(){o(this,e),this.autoTicks=!1,this.disabled=!1,this.invert=!1,this.max=100,this.min=0,this.showTicks=!1,this.step=1,this.thumbLabel=!1,this.value=0,this.vertical=!1,this._tickInterval=1,this.myValue=50}return a(e,[{key:"ngOnInit",value:function(){this.exampleBasicSlider=_t,this.exampleConfigurableSlider=Bt,this.exampleChangeEvent=Ut}},{key:"changeSlider",value:function(){console.log("myValue",this.myValue)}},{key:"tickInterval",get:function(){return this.showTicks?this.autoTicks?"auto":this._tickInterval:0},set:function(e){this._tickInterval=Number(e)}}]),e}()).\u0275fac=function(e){return new(e||At)},At.\u0275cmp=c.Kb({type:At,selectors:[["app-material-slider"]],decls:66,vars:27,consts:[[3,"svg"],["href","https://material.angular.io/components/slider/overview","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],[1,"example-container"],["min","0","max","100","step","1",3,"ngModel","change","ngModelChange"],["class","separator separator-dashed my-6",4,"ngIf"],[4,"ngIf"],[1,"example-section"],[1,"example-margin"],["matInput","","type","number","placeholder","Value",3,"ngModel","ngModelChange"],["matInput","","type","number","placeholder","Min value",3,"ngModel","ngModelChange"],["matInput","","type","number","placeholder","Max value",3,"ngModel","ngModelChange"],["matInput","","type","number","placeholder","Step size",3,"ngModel","ngModelChange"],[1,"example-margin",3,"ngModel","ngModelChange"],["class","example-margin",3,"ngModel","ngModelChange",4,"ngIf"],["class","example-margin",4,"ngIf"],[1,"example-margin",3,"disabled","invert","max","min","step","thumbLabel","tickInterval","ngModel","vertical","ngModelChange"],["matInput","","type","number","placeholder","Tick interval",3,"ngModel","ngModelChange"]],template:function(e,t){1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"span"),c.Wb(9,"code"),c.Nc(10,"mat-slider"),c.Vb(),c.Nc(11," allows for the selection of a value from a range via mouse, touch, or keyboard, similar to "),c.Wb(12,"code"),c.Nc(13,'<input type="range">'),c.Vb(),c.Nc(14,". "),c.Vb(),c.Rb(15,"div",6),c.Wb(16,"div",7),c.Rb(17,"mat-slider"),c.Vb(),c.Vb(),c.Vb(),c.Wb(18,"app-code-preview",4),c.Wb(19,"div",5),c.Wb(20,"span"),c.Wb(21,"code"),c.Nc(22,"@Output() change: EventEmitter<MatSliderChange>"),c.Vb(),c.Nc(23," Event emitted when the slider value has changed. "),c.Vb(),c.Rb(24,"div",6),c.Wb(25,"div",7),c.Wb(26,"mat-slider",8),c.gc("change",function(){return t.changeSlider()})("ngModelChange",function(e){return t.myValue=e}),c.Vb(),c.Lc(27,Et,1,0,"div",9),c.Lc(28,Ot,5,1,"span",10),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(29,"div",3),c.Wb(30,"app-code-preview",4),c.Wb(31,"div",5),c.Wb(32,"div",7),c.Wb(33,"section",11),c.Wb(34,"mat-form-field",12),c.Wb(35,"input",13),c.gc("ngModelChange",function(e){return t.value=e}),c.Vb(),c.Vb(),c.Wb(36,"mat-form-field",12),c.Wb(37,"input",14),c.gc("ngModelChange",function(e){return t.min=e}),c.Vb(),c.Vb(),c.Wb(38,"mat-form-field",12),c.Wb(39,"input",15),c.gc("ngModelChange",function(e){return t.max=e}),c.Vb(),c.Vb(),c.Wb(40,"mat-form-field",12),c.Wb(41,"input",16),c.gc("ngModelChange",function(e){return t.step=e}),c.Vb(),c.Vb(),c.Vb(),c.Rb(42,"div",6),c.Wb(43,"section",11),c.Wb(44,"mat-checkbox",17),c.gc("ngModelChange",function(e){return t.showTicks=e}),c.Nc(45,"Show ticks"),c.Vb(),c.Lc(46,qt,2,1,"mat-checkbox",18),c.Lc(47,Lt,2,1,"mat-form-field",19),c.Vb(),c.Rb(48,"div",6),c.Wb(49,"section",11),c.Wb(50,"mat-checkbox",17),c.gc("ngModelChange",function(e){return t.thumbLabel=e}),c.Nc(51,"Show thumb label"),c.Vb(),c.Vb(),c.Rb(52,"div",6),c.Wb(53,"section",11),c.Wb(54,"mat-checkbox",17),c.gc("ngModelChange",function(e){return t.vertical=e}),c.Nc(55,"Vertical"),c.Vb(),c.Wb(56,"mat-checkbox",17),c.gc("ngModelChange",function(e){return t.invert=e}),c.Nc(57,"Inverted"),c.Vb(),c.Vb(),c.Rb(58,"div",6),c.Wb(59,"section",11),c.Wb(60,"mat-checkbox",17),c.gc("ngModelChange",function(e){return t.disabled=e}),c.Nc(61,"Disabled"),c.Vb(),c.Vb(),c.Rb(62,"div",6),c.Wb(63,"h5"),c.Nc(64,"Result"),c.Vb(),c.Wb(65,"mat-slider",20),c.gc("ngModelChange",function(e){return t.value=e}),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e&&(c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleBasicSlider),c.Cb(12),c.qc("viewItem",t.exampleChangeEvent),c.Cb(8),c.qc("ngModel",t.myValue),c.Cb(1),c.qc("ngIf",t.myValue),c.Cb(1),c.qc("ngIf",t.myValue),c.Cb(2),c.qc("viewItem",t.exampleConfigurableSlider),c.Cb(5),c.qc("ngModel",t.value),c.Cb(2),c.qc("ngModel",t.min),c.Cb(2),c.qc("ngModel",t.max),c.Cb(2),c.qc("ngModel",t.step),c.Cb(3),c.qc("ngModel",t.showTicks),c.Cb(2),c.qc("ngIf",t.showTicks),c.Cb(1),c.qc("ngIf",t.showTicks&&!t.autoTicks),c.Cb(3),c.qc("ngModel",t.thumbLabel),c.Cb(4),c.qc("ngModel",t.vertical),c.Cb(2),c.qc("ngModel",t.invert),c.Cb(4),c.qc("ngModel",t.disabled),c.Cb(5),c.qc("disabled",t.disabled)("invert",t.invert)("max",t.max)("min",t.min)("step",t.step)("thumbLabel",t.thumbLabel)("tickInterval",t.tickInterval)("ngModel",t.value)("vertical",t.vertical))},directives:[h.a,g.a,Ft.a,d.o,d.r,s.n,f.c,v.b,d.t,d.d,P.a],styles:["\n      .mat-slider {\n        width: 300px;\n      }\n      .example-margin {\n        margin: 15px;\n      }\n    "],encapsulation:2,changeDetection:0}),At),jt={beforeCodeTitle:"Basic slide-toggles",htmlCode:"<mat-slide-toggle>Slide me!</mat-slide-toggle>",tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Basic slide-toggles\n*/\n@Component({\n  selector: 'slide-toggle-overview-example',\n  templateUrl: 'slide-toggle-overview-example.html',\n  styleUrls: ['slide-toggle-overview-example.css'],\n})\nexport class SlideToggleOverviewExample {}",cssCode:"",viewCode:"",isCodeVisible:!1},Ht={beforeCodeTitle:"Configurable slide-toggle",htmlCode:'\n<mat-card>\n  <mat-card-content>\n    <h2 class="example-h2">Slider configuration</h2>\n    <section class="example-section">\n      <label class="example-margin">Color:</label>\n      <mat-radio-group [(ngModel)]="color">\n        <mat-radio-button class="example-margin" value="primary">\n          Primary\n        </mat-radio-button>\n        <mat-radio-button class="example-margin" value="accent">\n          Accent\n        </mat-radio-button>\n        <mat-radio-button class="example-margin" value="warn">\n          Warn\n        </mat-radio-button>\n      </mat-radio-group>\n    </section>\n    <section class="example-section">\n      <mat-checkbox class="example-margin" [(ngModel)]="checked">Checked</mat-checkbox>\n    </section>\n    <section class="example-section">\n      <mat-checkbox class="example-margin" [(ngModel)]="disabled">Disabled</mat-checkbox>\n    </section>\n  </mat-card-content>\n</mat-card>\n<mat-card class="result">\n  <mat-card-content>\n    <h2 class="example-h2">Result</h2>\n    <section class="example-section">\n      <mat-slide-toggle\n        class="example-margin"\n        [color]="color"\n        [checked]="checked"\n        [disabled]="disabled">\n        Slide me!\n      </mat-slide-toggle>\n    </section>\n  </mat-card-content>\n</mat-card>',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Configurable slide-toggle\n*/\n@Component({\n  selector: 'slide-toggle-configurable-example',\n  templateUrl: 'slide-toggle-configurable-example.html',\n  styleUrls: ['slide-toggle-configurable-example.css'],\n})\nexport class SlideToggleConfigurableExample {\n  color = 'accent';\n  checked = false;\n  disabled = false;\n}\n\t\t",viewCode:"",cssCode:"\n.example-h2 {\n  margin: 10px;\n}\n.example-section {\n  display: flex;\n  align-content: center;\n  align-items: center;\n  height: 60px;\n}\n.example-margin {\n  margin: 10px;\n}\n\t\t",isCodeVisible:!1},Gt={beforeCodeTitle:'Label positions and "Change" event binding examples',htmlCode:'\n<mat-slide-toggle [labelPosition]="labelPosition">Slide me!</mat-slide-toggle>\n<div class="separator separator-dashed my-6"></div>\n<mat-slide-toggle (change)="changeLablesPositions()">Slide labels position</mat-slide-toggle>',tsCode:"\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'slide-toggle-label-positions-example',\n  templateUrl: 'slide-toggle-lable-positions-example.html',\n  styleUrls: ['slide-toggle-label-positions--example.css'],\n})\nexport class SlideToggleLabelPositionsExample {\n\n  labelPosition: string = \"before\";\n\n  changeLablesPositions() {\n    this.labelPosition = this.labelPosition == \"before\" ? \"after\" : \"before\";\n  }\n}",cssCode:"",viewCode:"",isCodeVisible:!1},$t=((Rt=function(){function e(){o(this,e),this.color="accent",this.checked=!1,this.disabled=!1,this.labelPosition="before"}return a(e,[{key:"ngOnInit",value:function(){this.exampleBasicSlideToggles=jt,this.exampleConfigurableSlideToggle=Ht,this.exampleLabelPositions=Gt}},{key:"changeLablesPositions",value:function(){this.labelPosition="before"===this.labelPosition?"after":"before"}}]),e}()).\u0275fac=function(e){return new(e||Rt)},Rt.\u0275cmp=c.Kb({type:Rt,selectors:[["app-material-slidertoggle"]],decls:64,vars:11,consts:[[3,"svg"],["href","https://material.angular.io/components/slide-toggle/overview","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],[1,"example-container"],[3,"labelPosition"],[3,"change"],[1,"example-section"],[1,"example-margin"],[3,"ngModel","ngModelChange"],["value","primary",1,"example-margin"],["value","accent",1,"example-margin"],["value","warn",1,"example-margin"],[1,"example-margin",3,"ngModel","ngModelChange"],[1,"example-h2"],[1,"example-margin",3,"color","checked","disabled"]],template:function(e,t){1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"span"),c.Wb(9,"code"),c.Nc(10,"mat-slide-toggle"),c.Vb(),c.Nc(11," is an "),c.Wb(12,"mark"),c.Nc(13,"on/off"),c.Vb(),c.Nc(14," control that can be toggled via clicking or dragging. "),c.Vb(),c.Rb(15,"div",6),c.Wb(16,"div",7),c.Wb(17,"mat-slide-toggle"),c.Nc(18,"Slide me!"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(19,"app-code-preview",4),c.Wb(20,"div",5),c.Wb(21,"p"),c.Wb(22,"code"),c.Nc(23,"@Input() labelPosition: 'before' | 'after'"),c.Vb(),c.Nc(24," Whether the label should appear after or before the slide-toggle. Defaults to 'after' "),c.Vb(),c.Wb(25,"p"),c.Wb(26,"code"),c.Nc(27,"@Output() change: EventEmitter<MatSlideToggleChange>"),c.Vb(),c.Nc(28," An event will be dispatched each time the slide-toggle changes its value. "),c.Vb(),c.Rb(29,"div",6),c.Wb(30,"div",7),c.Wb(31,"mat-slide-toggle",8),c.Nc(32,"Slide me!"),c.Vb(),c.Rb(33,"div",6),c.Wb(34,"mat-slide-toggle",9),c.gc("change",function(){return t.changeLablesPositions()}),c.Nc(35,"Slide labels position"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(36,"div",3),c.Wb(37,"app-code-preview",4),c.Wb(38,"div",5),c.Wb(39,"div",7),c.Wb(40,"section",10),c.Wb(41,"label",11),c.Nc(42,"Color:"),c.Vb(),c.Wb(43,"mat-radio-group",12),c.gc("ngModelChange",function(e){return t.color=e}),c.Wb(44,"mat-radio-button",13),c.Nc(45," Primary "),c.Vb(),c.Wb(46,"mat-radio-button",14),c.Nc(47," Accent "),c.Vb(),c.Wb(48,"mat-radio-button",15),c.Nc(49," Warn "),c.Vb(),c.Vb(),c.Vb(),c.Rb(50,"div",6),c.Wb(51,"section",10),c.Wb(52,"mat-checkbox",16),c.gc("ngModelChange",function(e){return t.checked=e}),c.Nc(53,"Checked"),c.Vb(),c.Vb(),c.Rb(54,"div",6),c.Wb(55,"section",10),c.Wb(56,"mat-checkbox",16),c.gc("ngModelChange",function(e){return t.disabled=e}),c.Nc(57,"Disabled"),c.Vb(),c.Vb(),c.Rb(58,"div",6),c.Wb(59,"h5",17),c.Nc(60,"Result"),c.Vb(),c.Wb(61,"section",10),c.Wb(62,"mat-slide-toggle",18),c.Nc(63," Slide me! "),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e&&(c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleBasicSlideToggles),c.Cb(13),c.qc("viewItem",t.exampleLabelPositions),c.Cb(12),c.qc("labelPosition",t.labelPosition),c.Cb(6),c.qc("viewItem",t.exampleConfigurableSlideToggle),c.Cb(6),c.qc("ngModel",t.color),c.Cb(9),c.qc("ngModel",t.checked),c.Cb(4),c.qc("ngModel",t.disabled),c.Cb(6),c.qc("color",t.color)("checked",t.checked)("disabled",t.disabled))},directives:[h.a,g.a,x.a,r.b,d.o,d.r,r.a,P.a],styles:[".example-h2[_ngcontent-%COMP%] {\n        margin: 10px;\n      }\n      .example-section[_ngcontent-%COMP%] {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        height: 60px;\n      }\n      .example-margin[_ngcontent-%COMP%] {\n        margin: 10px;\n      }"],changeDetection:0}),Rt),Kt=i("STbY"),Yt={beforeCodeTitle:"Basic menu",htmlCode:'\n<button mat-button [matMenuTriggerFor]="menu">Menu</button>\n<mat-menu #menu="matMenu">\n  <button mat-menu-item>Item 1</button>\n  <button mat-menu-item>Item 2</button>\n</mat-menu>\n',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Basic menu\n */\n@Component({\n  selector: 'menu-overview-example',\n  templateUrl: 'menu-overview-example.html',\n  styleUrls: ['menu-overview-example.css'],\n})\nexport class MenuOverviewExample {}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},Jt={beforeCodeTitle:"Nested menu",htmlCode:'\n<button mat-button [matMenuTriggerFor]="animals">Animal index</button>\n<mat-menu #animals="matMenu">\n  <button mat-menu-item [matMenuTriggerFor]="vertebrates">Vertebrates</button>\n  <button mat-menu-item [matMenuTriggerFor]="invertebrates">Invertebrates</button>\n</mat-menu>\n<mat-menu #vertebrates="matMenu">\n  <button mat-menu-item [matMenuTriggerFor]="fish">Fishes</button>\n  <button mat-menu-item [matMenuTriggerFor]="amphibians">Amphibians</button>\n  <button mat-menu-item [matMenuTriggerFor]="reptiles">Reptiles</button>\n  <button mat-menu-item>Birds</button>\n  <button mat-menu-item>Mammals</button>\n</mat-menu>\n<mat-menu #invertebrates="matMenu">\n  <button mat-menu-item>Insects</button>\n  <button mat-menu-item>Molluscs</button>\n  <button mat-menu-item>Crustaceans</button>\n  <button mat-menu-item>Corals</button>\n  <button mat-menu-item>Arachnids</button>\n  <button mat-menu-item>Velvet worms</button>\n  <button mat-menu-item>Horseshoe crabs</button>\n</mat-menu>\n<mat-menu #fish="matMenu">\n  <button mat-menu-item>Baikal oilfish</button>\n  <button mat-menu-item>Bala shark</button>\n  <button mat-menu-item>Ballan wrasse</button>\n  <button mat-menu-item>Bamboo shark</button>\n  <button mat-menu-item>Banded killifish</button>\n</mat-menu>\n<mat-menu #amphibians="matMenu">\n  <button mat-menu-item>Sonoran desert toad</button>\n  <button mat-menu-item>Western toad</button>\n  <button mat-menu-item>Arroyo toad</button>\n  <button mat-menu-item>Yosemite toad</button>\n</mat-menu>\n<mat-menu #reptiles="matMenu">\n  <button mat-menu-item>Banded Day Gecko</button>\n  <button mat-menu-item>Banded Gila Monster</button>\n  <button mat-menu-item>Black Tree Monitor</button>\n  <button mat-menu-item>Blue Spiny Lizard</button>\n  <button mat-menu-item disabled>Velociraptor</button>\n</mat-menu>\n',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Nested menu\n*/\n@Component({\n  selector: 'nested-menu-example',\n  templateUrl: 'nested-menu-example.html',\n  styleUrls: ['nested-menu-example.css']\n})\nexport class NestedMenuExample {}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},Qt={beforeCodeTitle:"Menu with icons",htmlCode:'\n<button mat-icon-button [matMenuTriggerFor]="menu">\n  <mat-icon>more_vert</mat-icon>\n</button>\n<mat-menu #menu="matMenu">\n  <button mat-menu-item>\n    <mat-icon>dialpad</mat-icon>\n    <span>Redial</span>\n  </button>\n  <button mat-menu-item disabled>\n    <mat-icon>voicemail</mat-icon>\n    <span>Check voicemail</span>\n  </button>\n  <button mat-menu-item>\n    <mat-icon>notifications_off</mat-icon>\n    <span>Disable alerts</span>\n  </button>\n</mat-menu>\n',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Menu with icons\n*/\n@Component({\n  selector: 'menu-icons-example',\n  templateUrl: 'menu-icons-example.html',\n  styleUrls: ['menu-icons-example.css'],\n})\nexport class MenuIconsExample {}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},Xt={beforeCodeTitle:"Customizing menu position",htmlCode:'\n<mat-menu #appMenu="matMenu" yPosition="above">\n  <button mat-menu-item>Settings</button>\n  <button mat-menu-item>Help</button>\n</mat-menu>\n<button mat-icon-button [matMenuTriggerFor]="appMenu">\n  <mat-icon>more_vert</mat-icon>\n</button>\n',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @Customizing menu position\n */\n@Component({\n  selector: 'menu-customizing-example',\n  templateUrl: 'menu-customizing-example.html',\n  styleUrls: ['menu-customizing-example.css'],\n})\nexport class MenuCustomizingExample {}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},Zt=((Pt=function(){function e(){o(this,e)}return a(e,[{key:"ngOnInit",value:function(){this.exampleBasicMenu=Yt,this.exampleNestedMenu=Jt,this.exampleMenuWithIcons=Qt,this.exampleToggling=Xt}}]),e}()).\u0275fac=function(e){return new(e||Pt)},Pt.\u0275cmp=c.Kb({type:Pt,selectors:[["app-material-menu"]],decls:167,vars:14,consts:[[3,"svg"],["href","https://material.angular.io/components/menu/overview","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],["mat-button","",3,"matMenuTriggerFor"],["menu10","matMenu"],["mat-menu-item",""],["mat-icon-button","",3,"matMenuTriggerFor"],["menu32","matMenu"],["mat-menu-item","","disabled",""],["animals","matMenu"],["mat-menu-item","",3,"matMenuTriggerFor"],["vertebrates","matMenu"],["invertebrates","matMenu"],["fish","matMenu"],["amphibians","matMenu"],["reptiles","matMenu"],["yPosition","above"],["appMenu","matMenu"]],template:function(e,t){if(1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"p"),c.Wb(9,"code"),c.Nc(10,"<mat-menu>"),c.Vb(),c.Nc(11," is a floating panel containing list of options. "),c.Vb(),c.Rb(12,"div",6),c.Wb(13,"div"),c.Wb(14,"button",7),c.Nc(15,"Menu"),c.Vb(),c.Wb(16,"mat-menu",null,8),c.Wb(18,"button",9),c.Nc(19,"Item 1"),c.Vb(),c.Wb(20,"button",9),c.Nc(21,"Item 2"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(22,"app-code-preview",4),c.Wb(23,"div",5),c.Wb(24,"p"),c.Nc(25," Menus support displaying "),c.Wb(26,"code"),c.Nc(27,"&ltmat-icon>"),c.Vb(),c.Nc(28," elements before the menu item text. "),c.Vb(),c.Rb(29,"div",6),c.Wb(30,"div"),c.Wb(31,"button",10),c.Wb(32,"mat-icon"),c.Nc(33,"more_vert"),c.Vb(),c.Vb(),c.Wb(34,"mat-menu",null,11),c.Wb(36,"button",9),c.Wb(37,"mat-icon"),c.Nc(38,"dialpad"),c.Vb(),c.Wb(39,"span"),c.Nc(40,"Redial"),c.Vb(),c.Vb(),c.Wb(41,"button",12),c.Wb(42,"mat-icon"),c.Nc(43,"voicemail"),c.Vb(),c.Wb(44,"span"),c.Nc(45,"Check voicemail"),c.Vb(),c.Vb(),c.Wb(46,"button",9),c.Wb(47,"mat-icon"),c.Nc(48,"notifications_off"),c.Vb(),c.Wb(49,"span"),c.Nc(50,"Disable alerts"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(51,"div",3),c.Wb(52,"app-code-preview",4),c.Wb(53,"div",5),c.Wb(54,"p"),c.Nc(55," Material supports the ability for an "),c.Wb(56,"mark"),c.Nc(57,"mat-menu-item"),c.Vb(),c.Nc(58," to open a "),c.Wb(59,"mark"),c.Nc(60,"sub-menu"),c.Vb(),c.Nc(61,". To do so, you have to define your root menu and sub-menus, in addition to setting the "),c.Wb(62,"mark"),c.Nc(63,"[matMenuTriggerFor]"),c.Vb(),c.Nc(64," on the mat-menu-item that should trigger the sub-menu "),c.Vb(),c.Rb(65,"div",6),c.Wb(66,"div"),c.Wb(67,"button",7),c.Nc(68,"Animal index"),c.Vb(),c.Wb(69,"mat-menu",null,13),c.Wb(71,"button",14),c.Nc(72," Vertebrates "),c.Vb(),c.Wb(73,"button",14),c.Nc(74," Invertebrates "),c.Vb(),c.Vb(),c.Wb(75,"mat-menu",null,15),c.Wb(77,"button",14),c.Nc(78,"Fishes"),c.Vb(),c.Wb(79,"button",14),c.Nc(80," Amphibians "),c.Vb(),c.Wb(81,"button",14),c.Nc(82," Reptiles "),c.Vb(),c.Wb(83,"button",9),c.Nc(84,"Birds"),c.Vb(),c.Wb(85,"button",9),c.Nc(86,"Mammals"),c.Vb(),c.Vb(),c.Wb(87,"mat-menu",null,16),c.Wb(89,"button",9),c.Nc(90,"Insects"),c.Vb(),c.Wb(91,"button",9),c.Nc(92,"Molluscs"),c.Vb(),c.Wb(93,"button",9),c.Nc(94,"Crustaceans"),c.Vb(),c.Wb(95,"button",9),c.Nc(96,"Corals"),c.Vb(),c.Wb(97,"button",9),c.Nc(98,"Arachnids"),c.Vb(),c.Wb(99,"button",9),c.Nc(100,"Velvet worms"),c.Vb(),c.Wb(101,"button",9),c.Nc(102,"Horseshoe crabs"),c.Vb(),c.Vb(),c.Wb(103,"mat-menu",null,17),c.Wb(105,"button",9),c.Nc(106,"Baikal oilfish"),c.Vb(),c.Wb(107,"button",9),c.Nc(108,"Bala shark"),c.Vb(),c.Wb(109,"button",9),c.Nc(110,"Ballan wrasse"),c.Vb(),c.Wb(111,"button",9),c.Nc(112,"Bamboo shark"),c.Vb(),c.Wb(113,"button",9),c.Nc(114,"Banded killifish"),c.Vb(),c.Vb(),c.Wb(115,"mat-menu",null,18),c.Wb(117,"button",9),c.Nc(118,"Sonoran desert toad"),c.Vb(),c.Wb(119,"button",9),c.Nc(120,"Western toad"),c.Vb(),c.Wb(121,"button",9),c.Nc(122,"Arroyo toad"),c.Vb(),c.Wb(123,"button",9),c.Nc(124,"Yosemite toad"),c.Vb(),c.Vb(),c.Wb(125,"mat-menu",null,19),c.Wb(127,"button",9),c.Nc(128,"Banded Day Gecko"),c.Vb(),c.Wb(129,"button",9),c.Nc(130,"Banded Gila Monster"),c.Vb(),c.Wb(131,"button",9),c.Nc(132,"Black Tree Monitor"),c.Vb(),c.Wb(133,"button",9),c.Nc(134,"Blue Spiny Lizard"),c.Vb(),c.Wb(135,"button",12),c.Nc(136,"Velociraptor"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(137,"app-code-preview",4),c.Wb(138,"div",5),c.Wb(139,"span"),c.Nc(140," By default, the menu will display below (y-axis), after (x-axis), and overlapping its trigger. The position can be changed using the "),c.Wb(141,"mark"),c.Nc(142,"xPosition"),c.Vb(),c.Nc(143," ( "),c.Wb(144,"mark"),c.Nc(145,"before | after"),c.Vb(),c.Nc(146,") and "),c.Wb(147,"mark"),c.Nc(148,"yPosition"),c.Vb(),c.Nc(149," ( "),c.Wb(150,"mark"),c.Nc(151,"above | below"),c.Vb(),c.Nc(152,") attributes. The menu can be be forced to not overlap the trigger using "),c.Wb(153,"code"),c.Nc(154,'[overlapTrigger]="false"'),c.Vb(),c.Nc(155," attribute. "),c.Vb(),c.Rb(156,"div",6),c.Wb(157,"div"),c.Wb(158,"mat-menu",20,21),c.Wb(160,"button",9),c.Nc(161,"Settings"),c.Vb(),c.Wb(162,"button",9),c.Nc(163,"Help"),c.Vb(),c.Vb(),c.Wb(164,"button",10),c.Wb(165,"mat-icon"),c.Nc(166,"more_vert"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e){var n=c.yc(17),a=c.yc(35),o=c.yc(70),i=c.yc(76),l=c.yc(88),r=c.yc(104),s=c.yc(116),m=c.yc(126),p=c.yc(159);c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleBasicMenu),c.Cb(8),c.qc("matMenuTriggerFor",n),c.Cb(8),c.qc("viewItem",t.exampleMenuWithIcons),c.Cb(9),c.qc("matMenuTriggerFor",a),c.Cb(21),c.qc("viewItem",t.exampleNestedMenu),c.Cb(15),c.qc("matMenuTriggerFor",o),c.Cb(4),c.qc("matMenuTriggerFor",i),c.Cb(2),c.qc("matMenuTriggerFor",l),c.Cb(4),c.qc("matMenuTriggerFor",r),c.Cb(2),c.qc("matMenuTriggerFor",s),c.Cb(2),c.qc("matMenuTriggerFor",m),c.Cb(56),c.qc("viewItem",t.exampleToggling),c.Cb(27),c.qc("matMenuTriggerFor",p)}},directives:[h.a,g.a,X.b,Kt.d,Kt.a,Kt.b,K.a],encapsulation:2}),Pt),en=i("XhcP");function tn(e,t){1&e&&(c.Wb(0,"mat-sidenav-container",16),c.Wb(1,"mat-sidenav",18),c.Nc(2,"Sidenav content"),c.Vb(),c.Wb(3,"mat-sidenav-content"),c.Nc(4,"Main content"),c.Vb(),c.Vb())}function nn(e,t){1&e&&(c.Wb(0,"p"),c.Nc(1,"Lorem, ipsum dolor sit amet consectetur."),c.Vb())}var an,on,ln,rn={beforeCodeTitle:"Basic sidenav",htmlCode:'\n<mat-sidenav-container class="example-container" *ngIf="shouldRun">\n  <mat-sidenav mode="side" opened>Sidenav content</mat-sidenav>\n  <mat-sidenav-content>Main content</mat-sidenav-content>\n</mat-sidenav-container>\n<div *ngIf="!shouldRun">Please open on Stackblitz to see result</div>',tsCode:"\nimport {Component} from '@angular/core';\n\n/** @title Basic sidenav */\n@Component({\n  selector: 'sidenav-overview-example',\n  templateUrl: 'sidenav-overview-example.html',\n  styleUrls: ['sidenav-overview-example.css'],\n})\nexport class SidenavOverviewExample {\n  shouldRun = [/(^|.)plnkr.co$/, /(^|.)stackblitz.io$/].some(h => h.test(window.location.host));\n}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},sn={beforeCodeTitle:"Basic drawer",htmlCode:'\n<mat-drawer-container class="example-container">\n  <mat-drawer mode="side" opened="true">Drawer content</mat-drawer>\n  <mat-drawer-content>Main content</mat-drawer-content>\n</mat-drawer-container>\n',tsCode:"\nimport {Component} from '@angular/core';\n\n/** @title Basic drawer */\n@Component({\n  selector: 'sidenav-drawer-overview-example',\n  templateUrl: 'sidenav-drawer-overview-example.html',\n  styleUrls: ['sidenav-drawer-overview-example.css'],\n})\nexport class SidenavDrawerOverviewExample {}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},mn={beforeCodeTitle:"Autosize sidenav",htmlCode:'\n<mat-drawer-container class="example-container" autosize>\n  <mat-drawer #drawer class="example-sidenav" mode="side">\n    <p>Auto-resizing sidenav</p>\n    <p *ngIf="showFiller">Lorem, ipsum dolor sit amet consectetur.</p>\n    <button (click)="showFiller = !showFiller" mat-raised-button>\n      Toggle extra text\n    </button>\n  </mat-drawer>\n\n  <div class="example-sidenav-content">\n    <button type="button" mat-button (click)="drawer.toggle()">\n      Toggle sidenav\n    </button>\n  </div>\n</mat-drawer-container>\n',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Autosize sidenav\n*/\n@Component({\n  selector: 'sidenav-autosize-example',\n  templateUrl: 'sidenav-autosize-example.html',\n  styleUrls: ['sidenav-autosize-example.css'],\n})\nexport class SidenavAutosizeExample {\n  showFiller = false;\n}\n",cssCode:"\n.example-container {\n  width: 500px;\n  height: 300px;\n  border: 1px solid rgba(0, 0, 0, 0.5);\n}\n.example-sidenav-content {\n  display: flex;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n}\n.example-sidenav {\n  padding: 20px;\n}\n\t\t\t",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},cn=((an=function(){function e(){o(this,e),this.shouldRun=[/(^|\.)plnkr\.co$/,/(^|\.)stackblitz\.io$/].some(function(e){return e.test(window.location.host)}),this.showFiller=!1}return a(e,[{key:"ngOnInit",value:function(){this.exampleBasicSidenav=rn,this.exampleBasicDrawer=sn,this.exampleAutosizeSidenav=mn}}]),e}()).\u0275fac=function(e){return new(e||an)},an.\u0275cmp=c.Kb({type:an,selectors:[["app-material-sidenav"]],decls:71,vars:6,consts:[[3,"svg"],["href","https://material.angular.io/components/sidenav/overview","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],["class","example-container",4,"ngIf"],["href","https://stackblitz.com/angular/vqvkrekvgga","target","_blank"],["autosize","",1,"example-container"],["mode","side",1,"example-sidenav"],["drawer",""],[4,"ngIf"],["mat-raised-button","",3,"click"],[1,"example-sidenav-content"],["type","button","mat-button","",3,"click"],[1,"example-container"],["mode","side","opened","true"],["mode","side","opened",""]],template:function(e,t){if(1&e){var n=c.Xb();c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"p"),c.Nc(9," Angular Material provides two sets of components designed to add collapsible side content (often navigation, though it can be any content) alongside some primary content. These are the sidenav and drawer components. "),c.Vb(),c.Wb(10,"p"),c.Nc(11," The sidenav components are designed to add side content to a fullscreen app. To set up a sidenav we use three components: "),c.Wb(12,"code"),c.Nc(13,"<mat-sidenav-container>"),c.Vb(),c.Nc(14," which acts as a structural container for our content and sidenav, "),c.Wb(15,"code"),c.Nc(16,"<mat-sidenav-content>"),c.Vb(),c.Nc(17," which represents the main content, and "),c.Wb(18,"code"),c.Nc(19,"<mat-sidenav>"),c.Vb(),c.Nc(20," which represents the added side content. "),c.Vb(),c.Rb(21,"div",6),c.Wb(22,"div"),c.Lc(23,tn,5,0,"mat-sidenav-container",7),c.Wb(24,"div"),c.Wb(25,"a",8),c.Nc(26," Please open on Stackblitz to see result "),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(27,"app-code-preview",4),c.Wb(28,"div",5),c.Wb(29,"p"),c.Nc(30," By default, Material will only measure and resize the drawer container in a few key moments (on open, on window resize, on mode change) in order to avoid layout thrashing, however there are cases where this can be problematic. If your app requires for a drawer to change its width while it is open, you can use the "),c.Wb(31,"mark"),c.Nc(32,"autosize"),c.Vb(),c.Nc(33," option to tell Material to continue measuring it. Note that you should use this option "),c.Wb(34,"b"),c.Nc(35,"at your own risk"),c.Vb(),c.Nc(36,", because it could cause performance issues. "),c.Vb(),c.Rb(37,"div",6),c.Wb(38,"div"),c.Wb(39,"mat-drawer-container",9),c.Wb(40,"mat-drawer",10,11),c.Wb(42,"p"),c.Nc(43,"Auto-resizing sidenav"),c.Vb(),c.Lc(44,nn,2,0,"p",12),c.Wb(45,"button",13),c.gc("click",function(){return t.showFiller=!t.showFiller}),c.Nc(46," Toggle extra text "),c.Vb(),c.Vb(),c.Wb(47,"div",14),c.Wb(48,"button",15),c.gc("click",function(){return c.Bc(n),c.yc(41).toggle()}),c.Nc(49," Toggle sidenav "),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(50,"div",3),c.Wb(51,"app-code-preview",4),c.Wb(52,"div",5),c.Wb(53,"p"),c.Nc(54," The drawer component is designed to add side content to a small section of your app. This is accomplished using the "),c.Wb(55,"code"),c.Nc(56,"<mat-drawer-container>"),c.Vb(),c.Nc(57,", "),c.Wb(58,"code"),c.Nc(59,"<mat-drawer-content>"),c.Vb(),c.Nc(60,", and "),c.Wb(61,"code"),c.Nc(62,"<mat-drawer>"),c.Vb(),c.Nc(63," components, which are analogous to their sidenav equivalents. Rather than adding side content to the app as a whole, these are designed to add side content to a small section of your app. They support almost all of the same features, but do not support fixed positioning. "),c.Vb(),c.Rb(64,"div",6),c.Wb(65,"div"),c.Wb(66,"mat-drawer-container",16),c.Wb(67,"mat-drawer",17),c.Nc(68,"Drawer content"),c.Vb(),c.Wb(69,"mat-drawer-content"),c.Nc(70,"Main content"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()}2&e&&(c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleBasicSidenav),c.Cb(17),c.qc("ngIf",t.shouldRun),c.Cb(4),c.qc("viewItem",t.exampleAutosizeSidenav),c.Cb(17),c.qc("ngIf",t.showFiller),c.Cb(7),c.qc("viewItem",t.exampleBasicDrawer))},directives:[h.a,g.a,s.n,en.b,en.a,X.b,en.c,en.e,en.d,en.f],styles:[".example-container[_ngcontent-%COMP%] {\n        width: 400px;\n        height: 200px;\n        margin: 10px;\n        border: 1px solid #555;\n      }\n      .example-container[_ngcontent-%COMP%] {\n        width: 500px;\n        height: 300px;\n        border: 1px solid rgba(0, 0, 0, 0.5);\n      }\n      .example-sidenav-content[_ngcontent-%COMP%] {\n        display: flex;\n        height: 100%;\n        align-items: center;\n        justify-content: center;\n      }\n      .example-sidenav[_ngcontent-%COMP%] {\n        padding: 20px;\n      }"],changeDetection:0}),an),pn=i("/t3+"),dn={beforeCodeTitle:"Single row",htmlCode:"\n<mat-toolbar>\n  <span>My Application</span>\n</mat-toolbar>\n",tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Basic toolbar : single row\n*/\n@Component({\n  selector: 'toolbar-overview-example',\n  templateUrl: 'toolbar-overview-example.html',\n  styleUrls: ['toolbar-overview-example.css'],\n})\nexport class ToolbarOverviewExample {}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},bn={beforeCodeTitle:"Multiple rows",htmlCode:"\n<mat-toolbar>\n  <mat-toolbar-row>\n    <span>First Row</span>\n  </mat-toolbar-row>\n  <mat-toolbar-row>\n    <span>Second Row</span>\n  </mat-toolbar-row>\n</mat-toolbar>\n",tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Basic toolbar : multiple rows\n*/\n@Component({\nselector: 'toolbar-multi-example',\ntemplateUrl: 'toolbar-multi-example.html',\nstyleUrls: ['toolbar-multi-example.css'],\n})\nexport class ToolbarMultiExample {}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},un={beforeCodeTitle:"Multi-row toolbar",htmlCode:'\n<mat-toolbar color="primary">\n  <mat-toolbar-row>\n    <span>Custom Toolbar</span>\n  </mat-toolbar-row>\n  <mat-toolbar-row>\n    <span>Second Line</span>\n    <span class="example-spacer"></span>\n    <mat-icon class="example-icon">verified_user</mat-icon>\n  </mat-toolbar-row>\n  <mat-toolbar-row>\n    <span>Third Line</span>\n    <span class="example-spacer"></span>\n    <mat-icon class="example-icon">favorite</mat-icon>\n    <mat-icon class="example-icon">delete</mat-icon>\n  </mat-toolbar-row>\n</mat-toolbar>\n',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Basic toolbar : Multi-row toolbar\n*/\n@Component({\nselector: 'toolbar-multi-example',\ntemplateUrl: 'toolbar-multi-example.html',\nstyleUrls: ['toolbar-multi-example.css'],\n})\nexport class ToolbarMultiExample {}\n",cssCode:"\n.example-icon {\n  padding: 0 14px;\n}\n.example-spacer {\n  flex: 1 1 auto;\n}",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},hn=((on=function(){function e(){o(this,e)}return a(e,[{key:"ngOnInit",value:function(){this.exampleSingleRow=dn,this.examplMultipleRows=bn,this.examplMultipleRows2=un}}]),e}()).\u0275fac=function(e){return new(e||on)},on.\u0275cmp=c.Kb({type:on,selectors:[["app-material-toolbar"]],decls:70,vars:4,consts:[[3,"svg"],["href","https://material.angular.io/components/toolbar/overview","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],["color","primary"],[1,"example-spacer"],[1,"example-icon"]],template:function(e,t){1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"p"),c.Wb(9,"code"),c.Nc(10,"<mat-toolbar>"),c.Vb(),c.Nc(11," is a container for headers, titles, or actions. "),c.Vb(),c.Wb(12,"p"),c.Wb(13,"b"),c.Nc(14,"Single row:"),c.Vb(),c.Nc(15," In the most situations, a toolbar will be placed at the top of your application and will only have a single row that includes the title of your application. "),c.Vb(),c.Rb(16,"div",6),c.Wb(17,"div"),c.Wb(18,"mat-toolbar"),c.Wb(19,"span"),c.Nc(20,"My Application"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(21,"app-code-preview",4),c.Wb(22,"div",5),c.Wb(23,"span"),c.Nc(24," The Material Design specifications describe that toolbars can also have multiple rows. Creating toolbars with multiple rows in Angular Material can be done by placing "),c.Wb(25,"code"),c.Nc(26,"<mat-toolbar-row>"),c.Vb(),c.Nc(27," elements inside of a "),c.Wb(28,"code"),c.Nc(29,"<mat-toolbar>"),c.Vb(),c.Nc(30,". "),c.Vb(),c.Rb(31,"div",6),c.Wb(32,"div"),c.Wb(33,"mat-toolbar"),c.Wb(34,"mat-toolbar-row"),c.Wb(35,"span"),c.Nc(36,"First Row"),c.Vb(),c.Vb(),c.Wb(37,"mat-toolbar-row"),c.Wb(38,"span"),c.Nc(39,"Second Row"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(40,"div",3),c.Wb(41,"app-code-preview",4),c.Wb(42,"div",5),c.Wb(43,"span"),c.Wb(44,"b"),c.Nc(45,"Note:"),c.Vb(),c.Nc(46," Placing content outside of a "),c.Wb(47,"code"),c.Nc(48,"<mat-toolbar-row>"),c.Vb(),c.Nc(49," when multiple rows are specified is not supported. "),c.Vb(),c.Rb(50,"div",6),c.Wb(51,"div"),c.Wb(52,"mat-toolbar",7),c.Wb(53,"mat-toolbar-row"),c.Wb(54,"span"),c.Nc(55,"Custom Toolbar"),c.Vb(),c.Vb(),c.Wb(56,"mat-toolbar-row"),c.Wb(57,"span"),c.Nc(58,"Second Line"),c.Vb(),c.Rb(59,"span",8),c.Wb(60,"mat-icon",9),c.Nc(61,"verified_user"),c.Vb(),c.Vb(),c.Wb(62,"mat-toolbar-row"),c.Wb(63,"span"),c.Nc(64,"Third Line"),c.Vb(),c.Rb(65,"span",8),c.Wb(66,"mat-icon",9),c.Nc(67,"favorite"),c.Vb(),c.Wb(68,"mat-icon",9),c.Nc(69,"delete"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e&&(c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleSingleRow),c.Cb(15),c.qc("viewItem",t.examplMultipleRows),c.Cb(20),c.qc("viewItem",t.examplMultipleRows2))},directives:[h.a,g.a,pn.a,pn.c,K.a],styles:[".example-icon[_ngcontent-%COMP%] {\n        padding: 0 14px;\n      }\n      .example-spacer[_ngcontent-%COMP%] {\n        flex: 1 1 auto;\n      }"]}),on),gn=i("Wp6s"),fn={beforeCodeTitle:"Basic cards",htmlCode:"<mat-card>Simple card</mat-card>",tsCode:"\nimport {Component} from '@angular/core';\n/**\n* @title Basic cards\n*/\n@Component({\n  selector: 'card-overview-example',\n  templateUrl: 'card-overview-example.html',\n  styleUrls: ['card-overview-example.css'],\n})\nexport class CardOvserviewExample {}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},vn={beforeCodeTitle:"Card header",htmlCode:"\n<mat-toolbar>\n  <mat-toolbar-row>\n    <span>First Row</span>\n  </mat-toolbar-row>\n  <mat-toolbar-row>\n    <span>Second Row</span>\n  </mat-toolbar-row>\n</mat-toolbar>\n",tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Card with title\n*/\n@Component({\nselector: 'card-title-example',\ntemplateUrl: 'card-title-example.html',\nstyleUrls: ['card-title-example.css'],\n})\nexport class CardTitleExample {}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},Cn={beforeCodeTitle:"Example with image",htmlCode:'\n<mat-card class="example-card">\n  <mat-card-header>\n    <div mat-card-avatar class="example-header-image"></div>\n    <mat-card-title>Shiba Inu</mat-card-title>\n    <mat-card-subtitle>Dog Breed</mat-card-subtitle>\n  </mat-card-header>\n  <img mat-card-image src="https://material.angular.io/assets/img/examples/shiba2.jpg" alt="Photo of a Shiba Inu">\n  <mat-card-content>\n    <p>\n      The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n      bred for hunting.\n  </p>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-button>LIKE</button>\n    <button mat-button>SHARE</button>\n  </mat-card-actions>\n</mat-card>\n',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Card with iamge\n*/\n@Component({\nselector: 'card-image-example',\ntemplateUrl: 'card-image-example.html',\nstyleUrls: ['card-image-example.css'],\n})\nexport class CardImageExample {}\n",cssCode:"\n.example-card {\n  max-width: 400px;\n}\n.example-header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},xn=((ln=function(){function e(){o(this,e)}return a(e,[{key:"ngOnInit",value:function(){this.exampleBasicCards=fn,this.exampleCardWithTitle=vn,this.examplBigExample=Cn}}]),e}()).\u0275fac=function(e){return new(e||ln)},ln.\u0275cmp=c.Kb({type:ln,selectors:[["app-material-card"]],decls:54,vars:4,consts:[[3,"svg"],["href","https://material.angular.io/components/card/overview","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],["mat-card-avatar","",1,"example-header-image"],[1,"example-card"],["mat-card-image","","src","https://material.angular.io/assets/img/examples/shiba2.jpg","alt","Photo of a Shiba Inu"],["mat-button",""]],template:function(e,t){1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"span"),c.Wb(9,"code"),c.Nc(10,"<mat-card>"),c.Vb(),c.Nc(11," is a content container for text, photos, and actions in the context of a single subject. "),c.Vb(),c.Rb(12,"div",6),c.Wb(13,"div"),c.Wb(14,"mat-card"),c.Nc(15,"Simple card"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(16,"app-code-preview",4),c.Wb(17,"div",5),c.Wb(18,"span"),c.Nc(19," In addition to the aforementioned sections, "),c.Wb(20,"code"),c.Nc(21,"<mat-card-header>"),c.Vb(),c.Nc(22," gives the ability to add a rich header to a card. "),c.Vb(),c.Rb(23,"div",6),c.Wb(24,"div"),c.Wb(25,"mat-card"),c.Wb(26,"mat-card-header"),c.Rb(27,"div",7),c.Wb(28,"mat-card-title"),c.Nc(29,"Shiba Inu"),c.Vb(),c.Wb(30,"mat-card-subtitle"),c.Nc(31,"Dog Breed"),c.Vb(),c.Vb(),c.Wb(32,"mat-card-content"),c.Nc(33,"Simple card"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(34,"div",3),c.Wb(35,"app-code-preview",4),c.Wb(36,"div",5),c.Wb(37,"div"),c.Wb(38,"mat-card",8),c.Wb(39,"mat-card-header"),c.Rb(40,"div",7),c.Wb(41,"mat-card-title"),c.Nc(42,"Shiba Inu"),c.Vb(),c.Wb(43,"mat-card-subtitle"),c.Nc(44,"Dog Breed"),c.Vb(),c.Vb(),c.Rb(45,"img",9),c.Wb(46,"mat-card-content"),c.Wb(47,"p"),c.Nc(48," The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan. A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally bred for hunting. "),c.Vb(),c.Vb(),c.Wb(49,"mat-card-actions"),c.Wb(50,"button",10),c.Nc(51,"LIKE"),c.Vb(),c.Wb(52,"button",10),c.Nc(53,"SHARE"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e&&(c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleBasicCards),c.Cb(10),c.qc("viewItem",t.exampleCardWithTitle),c.Cb(19),c.qc("viewItem",t.examplBigExample))},directives:[h.a,g.a,gn.a,gn.e,gn.c,gn.i,gn.h,gn.d,gn.f,gn.b,X.b],styles:[".example-card[_ngcontent-%COMP%] {\n        max-width: 400px;\n      }\n      .example-header-image[_ngcontent-%COMP%] {\n        background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n        background-size: cover;\n      }"],changeDetection:0}),ln),wn=i("MutI"),Vn=i("f0Cb");function Wn(e,t){if(1&e&&(c.Wb(0,"mat-list-item"),c.Wb(1,"mat-icon",10),c.Nc(2,"folder"),c.Vb(),c.Wb(3,"h4",11),c.Nc(4),c.Vb(),c.Wb(5,"p",11),c.Nc(6),c.lc(7,"date"),c.Vb(),c.Vb()),2&e){var n=t.$implicit;c.Cb(4),c.Oc(n.name),c.Cb(2),c.Oc(c.mc(7,2,n.updated))}}function yn(e,t){if(1&e&&(c.Wb(0,"mat-list-item"),c.Wb(1,"mat-icon",10),c.Nc(2,"note"),c.Vb(),c.Wb(3,"h4",11),c.Nc(4),c.Vb(),c.Wb(5,"p",11),c.Nc(6),c.lc(7,"date"),c.Vb(),c.Vb()),2&e){var n=t.$implicit;c.Cb(4),c.Oc(n.name),c.Cb(2),c.Oc(c.mc(7,2,n.updated))}}var Nn,kn,Mn={beforeCodeTitle:"Basic divider",htmlCode:"\n\t\t<mat-list>\n\t\t<mat-list-item>Item 1</mat-list-item>\n\t\t<mat-divider></mat-divider>\n\t\t<mat-list-item>Item 2</mat-list-item>\n\t\t<mat-divider></mat-divider>\n\t\t<mat-list-item>Item 3</mat-list-item>\n\t  </mat-list>\n",tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Basic divider\n*/\n@Component({\n  selector: 'divider-overview-example',\n  templateUrl: 'divider-overview-example.html',\n  styleUrls: ['divider-overview-example.css'],\n})\nexport class DividerOverviewExample {}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},Sn={beforeCodeTitle:"Vertical divider",htmlCode:'\n<mat-divider [vertical]="true"></mat-divider>\n',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title vertical divider\n*/\n@Component({\n  selector: 'divider-vertical-example',\n  templateUrl: 'divider-vertical-example.html',\n  styleUrls: ['divider-vertical-example.css'],\n})\nexport class DividerVerticalExample {}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},Tn={beforeCodeTitle:"Lists with inset dividers",htmlCode:'\n<mat-list>\n  <h3 mat-subheader>Folders</h3>\n  <mat-list-item *ngFor="let folder of folders; last as last">\n    <mat-icon mat-list-icon>folder</mat-icon>\n    <h4 mat-line>{{folder.name}}</h4>\n    <p mat-line class="demo-2"> {{folder.updated}} </p>\n    <mat-divider [inset]="true" *ngIf="!last"></mat-divider>\n  </mat-list-item>\n  <mat-divider></mat-divider>\n  <h3 md-subheader>Notes</h3>\n  <mat-list-item *ngFor="let note of notes">\n    <mat-icon md-list-icon>note</mat-icon>\n    <h4 md-line>{{note.name}}</h4>\n    <p md-line class="demo-2"> {{note.updated}} </p>\n  </mat-list-item>\n</mat-list>\n',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title list divider\n*/\n@Component({\n  selector: 'divider-list-example',\n  templateUrl: 'divider-list-example.html',\n  styleUrls: ['divider-list-example.css'],\n})\nexport class DividerListExample {}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},In=((Nn=function(){function e(){o(this,e),this.folders=[{name:"Photos",updated:new Date("1/1/16")},{name:"Recipes",updated:new Date("1/17/16")},{name:"Work",updated:new Date("1/28/16")}],this.notes=[{name:"Vacation Itinerary",updated:new Date("2/20/16")},{name:"Kitchen Remodel",updated:new Date("1/18/16")}]}return a(e,[{key:"ngOnInit",value:function(){this.exampleBasicDivider=Mn,this.exampleVertical=Sn,this.exampleList=Tn}}]),e}()).\u0275fac=function(e){return new(e||Nn)},Nn.\u0275cmp=c.Kb({type:Nn,selectors:[["app-material-divider"]],decls:73,vars:8,consts:[[3,"svg"],["href","https://material.angular.io/components/divider","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],[3,"vertical"],["mat-subheader",""],[4,"ngFor","ngForOf"],["mat-list-icon",""],["mat-line",""]],template:function(e,t){1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"span"),c.Wb(9,"code"),c.Nc(10,"<mat-divider>"),c.Vb(),c.Nc(11," is a component that allows for Material styling of a line separator with various orientation options. "),c.Vb(),c.Rb(12,"div",6),c.Wb(13,"div"),c.Wb(14,"mat-list"),c.Wb(15,"mat-list-item"),c.Nc(16,"Alabama"),c.Vb(),c.Rb(17,"mat-divider"),c.Wb(18,"mat-list-item"),c.Nc(19,"Alaska"),c.Vb(),c.Rb(20,"mat-divider"),c.Wb(21,"mat-list-item"),c.Nc(22,"Arizona"),c.Vb(),c.Rb(23,"mat-divider"),c.Wb(24,"mat-list-item"),c.Nc(25,"Arizona"),c.Vb(),c.Rb(26,"mat-divider"),c.Wb(27,"mat-list-item"),c.Nc(28,"California"),c.Vb(),c.Rb(29,"mat-divider"),c.Wb(30,"mat-list-item"),c.Nc(31,"Colorado"),c.Vb(),c.Rb(32,"mat-divider"),c.Wb(33,"mat-list-item"),c.Nc(34,"Connecticut"),c.Vb(),c.Rb(35,"mat-divider"),c.Wb(36,"mat-list-item"),c.Nc(37,"Delaware"),c.Vb(),c.Rb(38,"mat-divider"),c.Wb(39,"mat-list-item"),c.Nc(40,"Florida"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(41,"app-code-preview",4),c.Wb(42,"div",5),c.Wb(43,"span"),c.Nc(44," Add the "),c.Wb(45,"mark"),c.Nc(46,"vertical"),c.Vb(),c.Nc(47," attribute in order to set whether or not the divider is vertically-oriented. "),c.Vb(),c.Rb(48,"div",6),c.Wb(49,"div"),c.Wb(50,"mat-list"),c.Wb(51,"mat-list-item"),c.Nc(52,"Item 1"),c.Vb(),c.Rb(53,"mat-divider",7),c.Wb(54,"mat-list-item"),c.Nc(55,"Item 2"),c.Vb(),c.Rb(56,"mat-divider",7),c.Wb(57,"mat-list-item"),c.Nc(58,"Item 3"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(59,"div",3),c.Wb(60,"app-code-preview",4),c.Wb(61,"div",5),c.Wb(62,"span"),c.Nc(63," Dividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider. "),c.Vb(),c.Wb(64,"div"),c.Wb(65,"mat-list"),c.Wb(66,"h3",8),c.Nc(67,"Folders"),c.Vb(),c.Lc(68,Wn,8,4,"mat-list-item",9),c.Rb(69,"mat-divider"),c.Wb(70,"h3",8),c.Nc(71,"Notes"),c.Vb(),c.Lc(72,yn,8,4,"mat-list-item",9),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e&&(c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleBasicDivider),c.Cb(35),c.qc("viewItem",t.exampleVertical),c.Cb(12),c.qc("vertical",!0),c.Cb(3),c.qc("vertical",!0),c.Cb(4),c.qc("viewItem",t.exampleList),c.Cb(8),c.qc("ngForOf",t.folders),c.Cb(4),c.qc("ngForOf",t.notes))},directives:[h.a,g.a,wn.a,wn.c,Vn.a,wn.f,s.m,K.a,wn.b,w.k],pipes:[s.e],styles:[".mat-list-icon[_ngcontent-%COMP%] {\n        color: rgba(0, 0, 0, 0.54);\n      }\n      .mat-toolbar[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%]    + .mat-divider-vertical[_ngcontent-%COMP%] {\n        margin-right: 16px;\n      }\n      .mat-toolbar[_ngcontent-%COMP%]    > .mat-divider-vertical[_ngcontent-%COMP%]    + *[_ngcontent-%COMP%] {\n        margin-right: 24px;\n        margin-left: -1px;\n      }"],changeDetection:0}),Nn),Dn=i("7EHt"),Fn={beforeCodeTitle:"Basic expansion panel",htmlCode:'\n<mat-accordion>\n  <mat-expansion-panel>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Personal data\n      </mat-panel-title>\n\t  <mat-panel-description>\n        Type your name and age\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n    <mat-form-field>\n      <input matInput placeholder="First name">\n    </mat-form-field>\n    <mat-form-field>\n      <input matInput placeholder="Age">\n    </mat-form-field>\n  </mat-expansion-panel>\n  <mat-expansion-panel (opened)="panelOpenState = true"\n    (closed)="panelOpenState = false">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Self aware panel\n      </mat-panel-title>\n      <mat-panel-description>\n        Currently I am {{panelOpenState ? \'open\' : \'closed\'}}\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n    <p>I\'m visible because I am open</p>\n  </mat-expansion-panel>\n</mat-accordion>\n',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Basic expansion panel\n*/\n@Component({\n  selector: 'expansion-overview-example',\n  templateUrl: 'expansion-overview-example.html',\n  styleUrls: ['expansion-overview-example.css'],\n})\nexport class ExpansionOverviewExample {\n  panelOpenState: boolean = false;\n}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},En={beforeCodeTitle:"Disabling a panel",htmlCode:'\n<mat-expansion-panel [disabled]="isDisabled">\n  <mat-expansion-panel-header>\n\tThis is the expansion title\n  </mat-expansion-panel-header>\n  <mat-panel-description>\n    This is a summary of the content\n  </mat-panel-description>\n</mat-expansion-panel>\n',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Disabled expansion panel\n*/\n@Component({\n  selector: 'expansion-disabled-example',\n  templateUrl: 'expansion-disabled-example.html',\n  styleUrls: ['expansion-disabled-example.css'],\n})\nexport class ExpansionDisabledExample {\n  isDisabled: boolean = true;\n}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},On={beforeCodeTitle:"Expansion panel as accordion",htmlCode:'\n<mat-accordion class="example-headers-align">\n  <mat-expansion-panel [expanded]="step === 0" (opened)="setStep(0)" hideToggle="true">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Personal data\n      </mat-panel-title>\n\t  <mat-panel-description>\n\t\tType your name and age\n        <mat-icon>account_circle</mat-icon>\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n    <mat-form-field>\n      <input matInput placeholder="First name">\n    </mat-form-field>\n    <mat-form-field>\n      <input matInput type="number" min="1" placeholder="Age">\n    </mat-form-field>\n    <mat-action-row>\n      <button mat-button color="primary" (click)="nextStep()">Next</button>\n    </mat-action-row>\n  </mat-expansion-panel>\n  <mat-expansion-panel [expanded]="step === 1" (opened)="setStep(1)" hideToggle="true">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Destination\n      </mat-panel-title>\n      <mat-panel-description>\n        Type the country name\n        <mat-icon>map</mat-icon>\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n    <mat-form-field>\n      <input matInput placeholder="Country">\n    </mat-form-field>\n    <mat-action-row>\n      <button mat-button color="warn" (click)="prevStep()">Previous</button>\n      <button mat-button color="primary" (click)="nextStep()">Next</button>\n    </mat-action-row>\n   </mat-expansion-panel>\n  <mat-expansion-panel [expanded]="step === 2" (opened)="setStep(2)" hideToggle="true">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Day of the trip\n\t  </mat-panel-title>\n      <mat-panel-description>\n        Inform the date you wish to travel\n        <mat-icon>date_range</mat-icon>\n      </mat-panel-description>\n     </mat-expansion-panel-header>\n    <mat-form-field>\n      <input matInput placeholder="Date" [matDatepicker]="picker" (focus)="picker.open()" readonly>\n    </mat-form-field>\n    <mat-datepicker #picker></mat-datepicker>\n    <mat-action-row>\n      <button mat-button color="warn" (click)="prevStep()">Previous</button>\n      <button mat-button color="primary" (click)="nextStep()">End</button>\n    </mat-action-row>\n  </mat-expansion-panel>\n</mat-accordion>\n',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Expansion panel as accordion\n*/\n@Component({\n  selector: 'expansion-steps-example',\n  templateUrl: 'expansion-steps-example.html',\n  styleUrls: ['expansion-steps-example.css']\n})\nexport class ExpansionStepsExample {\n  step = 0;\n\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.step++;\n   }\n\n  prevStep() {\n    this.step--;\n  }\n}\n",cssCode:"\n.example-headers-align .mat-expansion-panel-header-title,\n.example-headers-align .mat-expansion-panel-header-description {\n  flex-basis: 0;\n}\n\n.example-headers-align .mat-expansion-panel-header-description {\n  justify-content: space-between;\n  align-items: center;\n}\n",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},qn=((kn=function(){function e(){o(this,e),this.panelOpenState=!1,this.isDisabled=!0,this.step=0}return a(e,[{key:"ngOnInit",value:function(){this.exampleBasicPanel=Fn,this.exampleDisabledPanel=En,this.exampleAccordion=On}},{key:"setStep",value:function(e){this.step=e}},{key:"nextStep",value:function(){this.step++}},{key:"prevStep",value:function(){this.step--}}]),e}()).\u0275fac=function(e){return new(e||kn)},kn.\u0275cmp=c.Kb({type:kn,selectors:[["app-material-expansion-panel"]],decls:99,vars:10,consts:[[3,"svg"],["href","https://material.angular.io/components/expansion/overview","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],["matInput","","placeholder","First name"],["matInput","","placeholder","Age"],[3,"opened","closed"],[3,"disabled"],[1,"example-headers-align"],["hideToggle","true",3,"expanded","opened"],["matInput","","type","number","min","1","placeholder","Age"],["mat-button","","color","primary",3,"click"],["matInput","","placeholder","Country"],["mat-button","","color","warn",3,"click"],["matInput","","placeholder","Date","readonly","",3,"matDatepicker","focus"],["picker",""]],template:function(e,t){if(1&e){var n=c.Xb();c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"span"),c.Wb(9,"code"),c.Nc(10,"<mat-expansion-panel>"),c.Vb(),c.Nc(11," provides an expandable details-summary view.is a component that allows for Material styling of a line separator with various orientation options. "),c.Vb(),c.Rb(12,"div",6),c.Wb(13,"div"),c.Wb(14,"mat-accordion"),c.Wb(15,"mat-expansion-panel"),c.Wb(16,"mat-expansion-panel-header"),c.Wb(17,"mat-panel-title"),c.Nc(18," Personal data "),c.Vb(),c.Wb(19,"mat-panel-description"),c.Nc(20," Type your name and age "),c.Vb(),c.Vb(),c.Wb(21,"mat-form-field"),c.Rb(22,"input",7),c.Vb(),c.Wb(23,"mat-form-field"),c.Rb(24,"input",8),c.Vb(),c.Vb(),c.Wb(25,"mat-expansion-panel",9),c.gc("opened",function(){return t.panelOpenState=!0})("closed",function(){return t.panelOpenState=!1}),c.Wb(26,"mat-expansion-panel-header"),c.Wb(27,"mat-panel-title"),c.Nc(28," Self aware panel "),c.Vb(),c.Wb(29,"mat-panel-description"),c.Nc(30),c.Vb(),c.Vb(),c.Wb(31,"p"),c.Nc(32,"I'm visible because I am open"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(33,"app-code-preview",4),c.Wb(34,"div",5),c.Wb(35,"span"),c.Nc(36," Expansion panels can be "),c.Wb(37,"mark"),c.Nc(38,"disabled"),c.Vb(),c.Nc(39," using the disabled attribute. A disabled expansion panel can't be toggled by the user, but can still be manipulated programmatically. "),c.Vb(),c.Rb(40,"div",6),c.Wb(41,"div"),c.Wb(42,"mat-expansion-panel",10),c.Wb(43,"mat-expansion-panel-header"),c.Nc(44," This is the expansion title "),c.Vb(),c.Wb(45,"mat-panel-description"),c.Nc(46," This is a summary of the content "),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(47,"div",3),c.Wb(48,"app-code-preview",4),c.Wb(49,"div",5),c.Wb(50,"div"),c.Wb(51,"mat-accordion",11),c.Wb(52,"mat-expansion-panel",12),c.gc("opened",function(){return t.setStep(0)}),c.Wb(53,"mat-expansion-panel-header"),c.Wb(54,"mat-panel-title"),c.Nc(55," Personal data "),c.Vb(),c.Wb(56,"mat-panel-description"),c.Nc(57," Type your name and age "),c.Wb(58,"mat-icon"),c.Nc(59,"account_circle"),c.Vb(),c.Vb(),c.Vb(),c.Wb(60,"mat-form-field"),c.Rb(61,"input",7),c.Vb(),c.Wb(62,"mat-form-field"),c.Rb(63,"input",13),c.Vb(),c.Wb(64,"mat-action-row"),c.Wb(65,"button",14),c.gc("click",function(){return t.nextStep()}),c.Nc(66," Next "),c.Vb(),c.Vb(),c.Vb(),c.Wb(67,"mat-expansion-panel",12),c.gc("opened",function(){return t.setStep(1)}),c.Wb(68,"mat-expansion-panel-header"),c.Wb(69,"mat-panel-title"),c.Nc(70," Destination "),c.Vb(),c.Wb(71,"mat-panel-description"),c.Nc(72," Type the country name "),c.Wb(73,"mat-icon"),c.Nc(74,"map"),c.Vb(),c.Vb(),c.Vb(),c.Wb(75,"mat-form-field"),c.Rb(76,"input",15),c.Vb(),c.Wb(77,"mat-action-row"),c.Wb(78,"button",16),c.gc("click",function(){return t.prevStep()}),c.Nc(79," Previous "),c.Vb(),c.Wb(80,"button",14),c.gc("click",function(){return t.nextStep()}),c.Nc(81," Next "),c.Vb(),c.Vb(),c.Vb(),c.Wb(82,"mat-expansion-panel",12),c.gc("opened",function(){return t.setStep(2)}),c.Wb(83,"mat-expansion-panel-header"),c.Wb(84,"mat-panel-title"),c.Nc(85," Day of the trip "),c.Vb(),c.Wb(86,"mat-panel-description"),c.Nc(87," Inform the date you wish to travel "),c.Wb(88,"mat-icon"),c.Nc(89,"date_range"),c.Vb(),c.Vb(),c.Vb(),c.Wb(90,"mat-form-field"),c.Wb(91,"input",17),c.gc("focus",function(){return c.Bc(n),c.yc(93).open()}),c.Vb(),c.Vb(),c.Rb(92,"mat-datepicker",null,18),c.Wb(94,"mat-action-row"),c.Wb(95,"button",16),c.gc("click",function(){return t.prevStep()}),c.Nc(96," Previous "),c.Vb(),c.Wb(97,"button",14),c.gc("click",function(){return t.nextStep()}),c.Nc(98," End "),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()}if(2&e){var a=c.yc(93);c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleBasicPanel),c.Cb(24),c.Pc(" Currently I am ",t.panelOpenState?"open":"closed"," "),c.Cb(3),c.qc("viewItem",t.exampleDisabledPanel),c.Cb(9),c.qc("disabled",t.isDisabled),c.Cb(6),c.qc("viewItem",t.exampleAccordion),c.Cb(4),c.qc("expanded",0===t.step),c.Cb(15),c.qc("expanded",1===t.step),c.Cb(15),c.qc("expanded",2===t.step),c.Cb(9),c.qc("matDatepicker",a)}},directives:[h.a,g.a,Dn.a,Dn.c,Dn.f,Dn.g,Dn.e,f.c,v.b,K.a,Dn.d,X.b,Y.b,Y.a],styles:[".example-headers-align[_ngcontent-%COMP%]   .mat-expansion-panel-header-title[_ngcontent-%COMP%], .example-headers-align[_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%] {\n        flex-basis: 0;\n      }\n      .example-headers-align[_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%] {\n        justify-content: space-between;\n        align-items: center;\n      }"],changeDetection:0}),kn),Ln=i("zkoq");function An(e,t){if(1&e&&(c.Wb(0,"mat-grid-tile",8),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Ic("background",n.color),c.qc("colspan",n.cols)("rowspan",n.rows),c.Cb(1),c.Pc(" ",n.text," ")}}var Rn,Pn={beforeCodeTitle:"Dynamic grid-list",htmlCode:'\n<mat-grid-list cols="4" rowHeight="100px">\n<mat-grid-tile\n*ngFor="let tile of tiles"\n[colspan]="tile.cols"\n[rowspan]="tile.rows"\n[style.background]="tile.color">\n{{tile.text}}\n</mat-grid-tile>s\n</mat-grid-list>\n',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Dynamic grid-list\n*/\n@Component({\nselector: 'grid-list-dynamic-example',\ntemplateUrl: 'grid-list-dynamic-example.html',\nstyleUrls: ['grid-list-dynamic-example.css'],\n})\nexport class GridListDynamicExample {\ntiles = [\n{text: 'One', cols: 3, rows: 1, color: 'lightblue'},\n{text: 'Two', cols: 1, rows: 2, color: 'lightgreen'},\n{text: 'Three', cols: 1, rows: 1, color: 'lightpink'},\n{text: 'Four', cols: 2, rows: 1, color: '#DDBDF1'},\n];\n}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},_n={beforeCodeTitle:"Basic grid-list",htmlCode:'\n<mat-grid-list cols="2" rowHeight="2:1">\n<mat-grid-tile>1</mat-grid-tile>\n<mat-grid-tile>2</mat-grid-tile>\n<mat-grid-tile>3</mat-grid-tile>\n<mat-grid-tile>4</mat-grid-tile>\n</mat-grid-list>\n',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Basic grid-list\n*/\n@Component({\nselector: 'grid-list-overview-example',\nstyleUrls: ['grid-list-overview-example.css'],\ntemplateUrl: 'grid-list-overview-example.html',\n})\nexport class GridListOverviewExample {}\n",cssCode:"\nmat-grid-tile {\nbackground: lightblue;\n}\n\t",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},Bn=((Rn=function(){function e(){o(this,e),this.tiles=[{text:"One",cols:3,rows:1,color:"lightblue"},{text:"Two",cols:1,rows:2,color:"lightgreen"},{text:"Three",cols:1,rows:1,color:"lightpink"},{text:"Four",cols:2,rows:1,color:"#DDBDF1"}]}return a(e,[{key:"ngOnInit",value:function(){this.exampleBasicGrid=_n,this.exampleDynamicGrid=Pn}}]),e}()).\u0275fac=function(e){return new(e||Rn)},Rn.\u0275cmp=c.Kb({type:Rn,selectors:[["app-material-grid-list"]],decls:26,vars:4,consts:[[3,"svg"],["href","https://material.angular.io/components/grid-list","target","_blank",1,"font-weight-bold"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],["cols","2","rowHeight","2:1"],["cols","4","rowHeight","100px"],[3,"colspan","rowspan","background",4,"ngFor","ngForOf"],[3,"colspan","rowspan"]],template:function(e,t){1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"app-code-preview",2),c.Wb(5,"div",3),c.Wb(6,"span"),c.Wb(7,"code"),c.Nc(8,"<mat-grid-list>"),c.Vb(),c.Nc(9," is a two-dimensional list view that arranges cells into grid-based layout. See Material Design spec here. "),c.Vb(),c.Rb(10,"div",4),c.Wb(11,"div"),c.Wb(12,"mat-grid-list",5),c.Wb(13,"mat-grid-tile"),c.Nc(14,"1"),c.Vb(),c.Wb(15,"mat-grid-tile"),c.Nc(16,"2"),c.Vb(),c.Wb(17,"mat-grid-tile"),c.Nc(18,"3"),c.Vb(),c.Wb(19,"mat-grid-tile"),c.Nc(20,"4"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(21,"app-code-preview",2),c.Wb(22,"div",3),c.Wb(23,"div"),c.Wb(24,"mat-grid-list",6),c.Lc(25,An,2,5,"mat-grid-tile",7),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e&&(c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(4),c.qc("viewItem",t.exampleBasicGrid),c.Cb(17),c.qc("viewItem",t.exampleDynamicGrid),c.Cb(4),c.qc("ngForOf",t.tiles))},directives:[h.a,g.a,Ln.a,Ln.c,s.m],styles:["mat-grid-tile[_ngcontent-%COMP%] {\n        background: lightblue;\n      }"],changeDetection:0}),Rn);function Un(e,t){if(1&e&&(c.Wb(0,"mat-list-option"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n," ")}}function zn(e,t){if(1&e&&(c.Wb(0,"mat-list-item"),c.Wb(1,"mat-icon",12),c.Nc(2,"folder"),c.Vb(),c.Wb(3,"h4",13),c.Nc(4),c.Vb(),c.Wb(5,"p",13),c.Nc(6),c.lc(7,"date"),c.Vb(),c.Vb()),2&e){var n=t.$implicit;c.Cb(4),c.Oc(n.name),c.Cb(2),c.Oc(c.mc(7,2,n.updated))}}function jn(e,t){if(1&e&&(c.Wb(0,"mat-list-item"),c.Wb(1,"mat-icon",12),c.Nc(2,"note"),c.Vb(),c.Wb(3,"h4",13),c.Nc(4),c.Vb(),c.Wb(5,"p",13),c.Nc(6),c.lc(7,"date"),c.Vb(),c.Vb()),2&e){var n=t.$implicit;c.Cb(4),c.Oc(n.name),c.Cb(2),c.Oc(c.mc(7,2,n.updated))}}var Hn,Gn={beforeCodeTitle:"Basic list",htmlCode:'\n<mat-list role="list">\n  <mat-list-item role="listitem">Item 1</mat-list-item>\n  <mat-list-item role="listitem">Item 2</mat-list-item>\n  <mat-list-item role="listitem">Item 3</mat-list-item>\n</mat-list>\n',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Basic list\n*/\n@Component({\n  selector: 'list-overview-example',\n  templateUrl: 'list-overview-example.html',\n  styleUrls: ['list-overview-example.css'],\n})\nexport class ListOverviewExample {}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},$n={beforeCodeTitle:"List with selection",htmlCode:'\n<mat-selection-list #shoes>\n  <mat-list-option *ngFor="let shoe of typesOfShoes">\n    {{shoe}}\n  </mat-list-option>\n</mat-selection-list>\n<p>\n  Options selected: {{shoes.selectedOptions.selected.length}}\n</p>\n',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title List with selection\n*/\n@Component({\n  selector: 'list-selection-example',\n  styleUrls: ['list-selection-example.css'],\n  templateUrl: 'list-selection-example.html',\n})\nexport class ListSelectionExample {\n  typesOfShoes = ['Boots', 'Clogs', 'Loafers', 'Moccasins', 'Sneakers'];\n}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},Kn={beforeCodeTitle:"List with sections",htmlCode:'\n<mat-list>\n  <h3 mat-subheader>Folders</h3>\n  <mat-list-item *ngFor="let folder of folders">\n    <mat-icon mat-list-icon>folder</mat-icon>\n\t<h4 mat-line>{{folder.name}}</h4>\n    <p mat-line> {{folder.updated | date}} </p>\n  </mat-list-item>\n  <mat-divider></mat-divider>\n  <h3 mat-subheader>Notes</h3>\n  <mat-list-item *ngFor="let note of notes">\n    <mat-icon mat-list-icon>note</mat-icon>\n    <h4 mat-line>{{note.name}}</h4>\n    <p mat-line> {{note.updated | date}} </p>\n  </mat-list-item>\n</mat-list>\n',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title List with sections\n*/\n@Component({\n  selector: 'list-sections-example',\n  styleUrls: ['list-sections-example.css'],\ntemplateUrl: 'list-sections-example.html',\n})\nexport class ListSectionsExample {\n  folders = [\n  {\n    name: 'Photos',\n    updated: new Date('1/1/16'),\n  },\n  {\n    name: 'Recipes',\n    updated: new Date('1/17/16'),\n  },\n  {\n    name: 'Work',\n    updated: new Date('1/28/16'),\n  }\n  ];\n  notes = [\n  {\n    name: 'Vacation Itinerary',\n    updated: new Date('2/20/16'),\n  },\n  {\n    name: 'Kitchen Remodel',\n    updated: new Date('1/18/16'),\n  }\n  ];\n}\n",cssCode:"\n.mat-list-icon {\n  color: rgba(0, 0, 0, 0.54);\n}\n",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},Yn=((Hn=function(){function e(){o(this,e),this.folders=[{name:"Photos",updated:new Date("1/1/16")},{name:"Recipes",updated:new Date("1/17/16")},{name:"Work",updated:new Date("1/28/16")}],this.notes=[{name:"Vacation Itinerary",updated:new Date("2/20/16")},{name:"Kitchen Remodel",updated:new Date("1/18/16")}],this.typesOfShoes=["Boots","Clogs","Loafers","Moccasins","Sneakers"]}return a(e,[{key:"ngOnInit",value:function(){this.exampleBasicList=Gn,this.exampleListWithSelection=$n,this.exampleListWithSection=Kn}}]),e}()).\u0275fac=function(e){return new(e||Hn)},Hn.\u0275cmp=c.Kb({type:Hn,selectors:[["app-material-list"]],decls:47,vars:8,consts:[[3,"svg"],["href","https://material.angular.io/components/list/overview","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],["role","list"],["role","listitem"],["shoes",""],[4,"ngFor","ngForOf"],["mat-subheader",""],["mat-list-icon",""],["mat-line",""]],template:function(e,t){if(1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"span"),c.Wb(9,"code"),c.Nc(10,"<mat-list>"),c.Vb(),c.Nc(11," is a container component that wraps and formats a series of line items. As the base list component, it provides Material Design styling, but no behavior of its own. "),c.Vb(),c.Rb(12,"div",6),c.Wb(13,"div"),c.Wb(14,"mat-list",7),c.Wb(15,"mat-list-item",8),c.Nc(16,"Item 1"),c.Vb(),c.Wb(17,"mat-list-item",8),c.Nc(18,"Item 2"),c.Vb(),c.Wb(19,"mat-list-item",8),c.Nc(20,"Item 3"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(21,"app-code-preview",4),c.Wb(22,"div",5),c.Wb(23,"span"),c.Nc(24," A selection list provides an interface for selecting values, where each list item is an option. "),c.Vb(),c.Rb(25,"div",6),c.Wb(26,"div"),c.Wb(27,"mat-selection-list",null,9),c.Lc(29,Un,2,1,"mat-list-option",10),c.Vb(),c.Rb(30,"div",6),c.Wb(31,"div"),c.Nc(32," Options selected: "),c.Wb(33,"mark"),c.Nc(34),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(35,"div",3),c.Wb(36,"app-code-preview",4),c.Wb(37,"div",5),c.Wb(38,"div"),c.Wb(39,"mat-list"),c.Wb(40,"h3",11),c.Nc(41,"Folders"),c.Vb(),c.Lc(42,zn,8,4,"mat-list-item",10),c.Rb(43,"mat-divider"),c.Wb(44,"h3",11),c.Nc(45,"Notes"),c.Vb(),c.Lc(46,jn,8,4,"mat-list-item",10),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e){var n=c.yc(28);c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleBasicList),c.Cb(15),c.qc("viewItem",t.exampleListWithSelection),c.Cb(8),c.qc("ngForOf",t.typesOfShoes),c.Cb(5),c.Oc(n.selectedOptions.selected.length),c.Cb(2),c.qc("viewItem",t.exampleListWithSection),c.Cb(6),c.qc("ngForOf",t.folders),c.Cb(4),c.qc("ngForOf",t.notes)}},directives:[h.a,g.a,wn.a,wn.c,wn.h,s.m,wn.f,Vn.a,wn.e,K.a,wn.b,w.k],pipes:[s.e],styles:[".mat-list-icon[_ngcontent-%COMP%] {\n        color: rgba(0, 0, 0, 0.54);\n      }"],changeDetection:0}),Hn),Jn=i("wZkO");function Qn(e,t){1&e&&(c.Wb(0,"mat-icon"),c.Nc(1,"security"),c.Vb())}function Xn(e,t){1&e&&(c.Wb(0,"mat-icon"),c.Nc(1,"attach_file"),c.Vb())}function Zn(e,t){1&e&&(c.Wb(0,"mat-icon"),c.Nc(1,"block"),c.Vb())}function ea(e,t){1&e&&(c.Wb(0,"mat-icon"),c.Nc(1,"loop"),c.Vb())}function ta(e,t){1&e&&(c.Wb(0,"mat-icon"),c.Nc(1,"build"),c.Vb())}function na(e,t){1&e&&(c.Wb(0,"mat-icon"),c.Nc(1,"thumb_down"),c.Vb())}var aa,oa={beforeCodeTitle:"Basic tabs",htmlCode:'\n<mat-tab-group>\n  <mat-tab label="Tab 1">Content 1</mat-tab>\n  <mat-tab label="Tab 2">Content 2</mat-tab>\n</mat-tab-group>\n',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Basic tabs\n*/\n@Component({\n  selector: 'tabs-overview-example',\n  templateUrl: 'tabs-overview-example.html',\n  styleUrls: ['tabs-overview-example.css'],\n})\nexport class TabsOverviewExample {}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},ia={beforeCodeTitle:"Complex Example",htmlCode:'\n<mat-card>\n  <mat-card-content>\n    <h2 class="example-h2">Tabs with text labels</h2>\n    <mat-tab-group class="demo-tab-group">\n      <mat-tab label="Tab 1">\n        <div class="demo-tab-content">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue.\n          Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus.\n          In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec,\n          feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor,\n          orci enim rutrum enim, vel tempor sapien arcu a tellus.\n        </div>\n      </mat-tab>\n      <mat-tab label="Tab 2">\n        <div class="demo-tab-content">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue.\n          Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus.\n          In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec,\n          feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor,\n          orci enim rutrum enim, vel tempor sapien arcu a tellus.\n        </div>\n      </mat-tab>\n      <mat-tab label="Tab 3" disabled>\n        No content\n      </mat-tab>\n      <mat-tab label="Tab 4">\n        <div class="demo-tab-content">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue.\n          Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus.\n          In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec,\n          feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor,\n          orci enim rutrum enim, vel tempor sapien arcu a tellus.\n          <br />\n          <br />\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue.\n          Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus.\n          In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec,\n          feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor,\n          orci enim rutrum enim, vel tempor sapien arcu a tellus.\n        </div>\n      </mat-tab>\n      <mat-tab label="Tab 5">\n        No content\n      </mat-tab>\n      <mat-tab label="Tab 6">\n        No content\n      </mat-tab>\n    </mat-tab-group>\n  </mat-card-content>\n</mat-card>\n<mat-card>\n  <mat-card-content>\n    <h2 class="example-h2">Tabs with icon labels</h2>\n    <mat-tab-group class="demo-tab-group">\n      <mat-tab label="Tab 1">\n        <ng-template mat-tab-label>\n          <mat-icon>security</mat-icon>\n        </ng-template>\n        <div class="demo-tab-content">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue.\n          Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus.\n\t\t  In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec,\n          feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor,\n          orci enim rutrum enim, vel tempor sapien arcu a tellus.\n        </div>\n      </mat-tab>\n      <mat-tab label="Tab 2">\n        <ng-template mat-tab-label>\n          <mat-icon>attach_file</mat-icon>\n        </ng-template>\n        <div class="demo-tab-content">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue.\n          Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus.\n          In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec,\n          feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor,\n          orci enim rutrum enim, vel tempor sapien arcu a tellus.\n        </div>\n      </mat-tab>\n      <mat-tab label="Tab 3" disabled>\n        <ng-template mat-tab-label>\n          <mat-icon>block</mat-icon>\n        </ng-template>\n        No content\n      </mat-tab>\n      <mat-tab label="Tab 4">\n        <ng-template mat-tab-label>\n          <mat-icon>loop</mat-icon>\n        </ng-template>\n        <div class="demo-tab-content">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue.\n          Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus.\n          In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec,\n          feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor,\n          orci enim rutrum enim, vel tempor sapien arcu a tellus.\n          <br />\n          <br />\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue.\n          Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus.\n          In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec,\n          feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor,\n          orci enim rutrum enim, vel tempor sapien arcu a tellus.\n\t\t</div>\n      </mat-tab>\n      <mat-tab label="Tab 5">\n        <ng-template mat-tab-label>\n          <mat-icon>build</mat-icon>\n        </ng-template>\n        No content\n      </mat-tab>\n\t  <mat-tab label="Tab 6">\n        <ng-template mat-tab-label>\n          <mat-icon>thumb_down</mat-icon>\n        </ng-template>\n        No content\n\t  </mat-tab>\n\t</mat-tab-group>\n  </mat-card-content>\n</mat-card>\n',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Complex Example\n*/\n@Component({\n  selector: 'tabs-template-label-example',\n  templateUrl: 'tabs-template-label-example.html',\n  styleUrls: ['./tabs-template-label-example.css']\n  })\nexport class TabsTemplateLabelExample {}\n",cssCode:"\n.demo-tab-group {\n  border: 1px solid #e8e8e8;\n}\n.demo-tab-content {\n  padding: 16px;\n}\n\t\t",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},la=((aa=function(){function e(){o(this,e)}return a(e,[{key:"ngOnInit",value:function(){this.exampleBasicTabs=oa,this.exampleComplex=ia}}]),e}()).\u0275fac=function(e){return new(e||aa)},aa.\u0275cmp=c.Kb({type:aa,selectors:[["app-material-tabs"]],decls:73,vars:3,consts:[[3,"svg"],["href","https://material.angular.io/components/tabs/examples","target","_blank",1,"font-weight-bold"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],["label","Tab 1"],["label","Tab 2"],[1,"example-h2"],[1,"demo-tab-group"],[1,"demo-tab-content"],["label","Tab 3","disabled",""],["label","Tab 4"],["label","Tab 5"],["label","Tab 6"],["mat-tab-label",""]],template:function(e,t){1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"app-code-preview",2),c.Wb(5,"div",3),c.Wb(6,"span"),c.Nc(7," Angular Material "),c.Wb(8,"mark"),c.Nc(9,"tabs"),c.Vb(),c.Nc(10," organize content into separate views where only one view can be visible at a time. Each tab's label is shown in the tab header and the active tab's label is designated with the animated ink bar. When the list of tab labels exceeds the width of the header, pagination controls appear to let the user scroll left and right across the labels. "),c.Vb(),c.Rb(11,"div",4),c.Wb(12,"div"),c.Wb(13,"mat-tab-group"),c.Wb(14,"mat-tab",5),c.Nc(15,"Content 1"),c.Vb(),c.Wb(16,"mat-tab",6),c.Nc(17,"Content 2"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(18,"app-code-preview",2),c.Wb(19,"div",3),c.Wb(20,"div"),c.Wb(21,"mat-card"),c.Wb(22,"mat-card-content"),c.Wb(23,"h5",7),c.Nc(24,"Tabs with text labels"),c.Vb(),c.Wb(25,"mat-tab-group",8),c.Wb(26,"mat-tab",5),c.Wb(27,"div",9),c.Nc(28," Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue. Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus. In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec, feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor, orci enim rutrum enim, vel tempor sapien arcu a tellus. "),c.Vb(),c.Vb(),c.Wb(29,"mat-tab",6),c.Wb(30,"div",9),c.Nc(31," Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue. Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus. In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec, feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor, orci enim rutrum enim, vel tempor sapien arcu a tellus. "),c.Vb(),c.Vb(),c.Wb(32,"mat-tab",10),c.Nc(33," No content "),c.Vb(),c.Wb(34,"mat-tab",11),c.Wb(35,"div",9),c.Nc(36," Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue. Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus. In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec, feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor, orci enim rutrum enim, vel tempor sapien arcu a tellus. "),c.Rb(37,"br"),c.Rb(38,"br"),c.Nc(39," Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue. Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus. In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec, feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor, orci enim rutrum enim, vel tempor sapien arcu a tellus. "),c.Vb(),c.Vb(),c.Wb(40,"mat-tab",12),c.Nc(41," No content "),c.Vb(),c.Wb(42,"mat-tab",13),c.Nc(43," No content "),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(44,"mat-card"),c.Wb(45,"mat-card-content"),c.Wb(46,"h5",7),c.Nc(47,"Tabs with icon labels"),c.Vb(),c.Wb(48,"mat-tab-group",8),c.Wb(49,"mat-tab",5),c.Lc(50,Qn,2,0,"ng-template",14),c.Wb(51,"div",9),c.Nc(52," Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue. Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus. In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec, feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor, orci enim rutrum enim, vel tempor sapien arcu a tellus. "),c.Vb(),c.Vb(),c.Wb(53,"mat-tab",6),c.Lc(54,Xn,2,0,"ng-template",14),c.Wb(55,"div",9),c.Nc(56," Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue. Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus. In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec, feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor, orci enim rutrum enim, vel tempor sapien arcu a tellus. "),c.Vb(),c.Vb(),c.Wb(57,"mat-tab",10),c.Lc(58,Zn,2,0,"ng-template",14),c.Nc(59," No content "),c.Vb(),c.Wb(60,"mat-tab",11),c.Lc(61,ea,2,0,"ng-template",14),c.Wb(62,"div",9),c.Nc(63," Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue. Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus. In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec, feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor, orci enim rutrum enim, vel tempor sapien arcu a tellus. "),c.Rb(64,"br"),c.Rb(65,"br"),c.Nc(66," Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue. Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus. In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec, feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor, orci enim rutrum enim, vel tempor sapien arcu a tellus. "),c.Vb(),c.Vb(),c.Wb(67,"mat-tab",12),c.Lc(68,ta,2,0,"ng-template",14),c.Nc(69," No content "),c.Vb(),c.Wb(70,"mat-tab",13),c.Lc(71,na,2,0,"ng-template",14),c.Nc(72," No content "),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e&&(c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(4),c.qc("viewItem",t.exampleBasicTabs),c.Cb(14),c.qc("viewItem",t.exampleComplex))},directives:[h.a,g.a,Jn.b,Jn.a,gn.a,gn.d,Jn.c,K.a],styles:[".demo-tab-group[_ngcontent-%COMP%] {\n        border: 1px solid #e8e8e8;\n      }\n      .demo-tab-content[_ngcontent-%COMP%] {\n        padding: 16px;\n      }"],changeDetection:0}),aa),ra=i("xHqg");function sa(e,t){1&e&&c.Nc(0,"Fill out your name")}function ma(e,t){1&e&&c.Nc(0,"Fill out your address")}function ca(e,t){1&e&&c.Nc(0,"Done")}var pa,da={beforeCodeTitle:"Basic stepper",htmlCode:'\n<button mat-raised-button (click)="isLinear = true" id="toggle-linear">Enable linear mode</button>\n<mat-horizontal-stepper [linear]="isLinear" #stepper="matHorizontalStepper">\n  <mat-step [stepControl]="firstFormGroup">\n    <form [formGroup]="firstFormGroup">\n      <ng-template matStepLabel>Fill out your name</ng-template>\n      <mat-form-field>\n        <input matInput placeholder="Last name, First name" formControlName="firstCtrl" required>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step [stepControl]="secondFormGroup">\n    <form [formGroup]="secondFormGroup">\n      <ng-template matStepLabel>Fill out your address</ng-template>\n      <mat-form-field>\n        <input matInput placeholder="Address" formControlName="secondCtrl" required>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperPrevious>Back</button>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step>\n    <ng-template matStepLabel>Done</ng-template>\n    You are now done.\n     <div>\n      <button mat-button matStepperPrevious>Back</button>\n      <button mat-button (click)="stepper.reset()">Reset</button>\n    </div>\n  </mat-step>\n</mat-horizontal-stepper>\n',tsCode:"\nimport {Component} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n/**\n* @title Stepper overview\n*/\n@Component({\n  selector: 'stepper-overview-example',\n  templateUrl: 'stepper-overview-example.html',\n  styleUrls: ['stepper-overview-example.css']\n})\nexport class StepperOverviewExample {\n  isLinear = false;\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  constructor(private _formBuilder: FormBuilder) { }\n  ngOnInit() {\n    this.firstFormGroup = this._formBuilder.group({\n      firstCtrl: ['', Validators.required]\n    });\n    this.secondFormGroup = this._formBuilder.group({\n      secondCtrl: ['', Validators.required]\n    });\n  }\n}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},ba={beforeCodeTitle:"Horizontal stepper",htmlCode:'\n<mat-horizontal-stepper>\n  <mat-step label="Step 1">\n    Content 1\n  </mat-step>\n  <mat-step label="Step 1">\n    Content 2\n  </mat-step>\n</mat-horizontal-stepper>\n',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Horizontal stepper\n*/\n@Component({\n  selector: 'stepper-horizontal-example',\n  styleUrls: ['stepper-horizontal-example.css'],\n  templateUrl: 'stepper-horizontal-example.html',\n})\nexport class StepperHorizontalExample {}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},ua={beforeCodeTitle:"Stepper overview",htmlCode:'\n<mat-list>\n  <h3 mat-subheader>Folders</h3>\n  <mat-list-item *ngFor="let folder of folders">\n    <mat-icon mat-list-icon>folder</mat-icon>\n\t<h4 mat-line>{{folder.name}}</h4>\n    <p mat-line> {{folder.updated | date}} </p>\n  </mat-list-item>\n  <mat-divider></mat-divider>\n  <h3 mat-subheader>Notes</h3>\n  <mat-list-item *ngFor="let note of notes">\n    <mat-icon mat-list-icon>note</mat-icon>\n    <h4 mat-line>{{note.name}}</h4>\n    <p mat-line> {{note.updated | date}} </p>\n  </mat-list-item>\n</mat-list>\n',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title List with sections\n*/\n@Component({\n  selector: 'list-sections-example',\n  styleUrls: ['list-sections-example.css'],\ntemplateUrl: 'list-sections-example.html',\n})\nexport class ListSectionsExample {\n  folders = [\n  {\n    name: 'Photos',\n    updated: new Date('1/1/16'),\n  },\n  {\n    name: 'Recipes',\n    updated: new Date('1/17/16'),\n  },\n  {\n    name: 'Work',\n    updated: new Date('1/28/16'),\n  }\n  ];\n  notes = [\n  {\n    name: 'Vacation Itinerary',\n    updated: new Date('2/20/16'),\n  },\n  {\n    name: 'Kitchen Remodel',\n    updated: new Date('1/18/16'),\n  }\n  ];\n}\n",cssCode:"\n.mat-list-icon {\n  color: rgba(0, 0, 0, 0.54);\n}\n",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},ha=((pa=function(){function e(t){o(this,e),this._formBuilder=t,this.isLinear=!1}return a(e,[{key:"ngOnInit",value:function(){this.exampleBasicStepper=da,this.exampleHorizontalStepper=ba,this.exampleStepperOverview=ua,this.firstFormGroup=this._formBuilder.group({firstCtrl:["",d.x.required]}),this.secondFormGroup=this._formBuilder.group({secondCtrl:["",d.x.required]})}}]),e}()).\u0275fac=function(e){return new(e||pa)(c.Qb(d.e))},pa.\u0275cmp=c.Kb({type:pa,selectors:[["app-material-stepper"]],decls:65,vars:9,consts:[[3,"svg"],["href","https://material.angular.io/components/list/overview","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],["label","Step 1"],["mat-raised-button","","id","toggle-linear",3,"click"],[3,"linear"],["stepper","matHorizontalStepper"],[3,"stepControl"],[3,"formGroup"],["matStepLabel",""],["matInput","","placeholder","Last name, First name","formControlName","firstCtrl","required",""],["mat-button","","matStepperNext",""],["matInput","","placeholder","Address","formControlName","secondCtrl","required",""],["mat-button","","matStepperPrevious",""],["mat-button","",3,"click"]],template:function(e,t){if(1&e){var n=c.Xb();c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"span"),c.Nc(9," Angular Material's stepper provides a wizard-like workflow by dividing content into logical steps. "),c.Vb(),c.Rb(10,"div",6),c.Wb(11,"div"),c.Wb(12,"mat-vertical-stepper"),c.Wb(13,"mat-step",7),c.Nc(14," Content 1 "),c.Vb(),c.Wb(15,"mat-step",7),c.Nc(16," Content 2 "),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(17,"app-code-preview",4),c.Wb(18,"div",5),c.Wb(19,"span"),c.Nc(20," The only difference is the orientation of stepper. "),c.Wb(21,"code"),c.Nc(22,"<mat-horizontal-steppert>"),c.Vb(),c.Nc(23," selector can be used to create a horizontal stepper "),c.Vb(),c.Rb(24,"div",6),c.Wb(25,"div"),c.Wb(26,"mat-horizontal-stepper"),c.Wb(27,"mat-step",7),c.Nc(28," Content 1 "),c.Vb(),c.Wb(29,"mat-step",7),c.Nc(30," Content 2 "),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(31,"div",3),c.Wb(32,"app-code-preview",4),c.Wb(33,"div",5),c.Wb(34,"div"),c.Wb(35,"button",8),c.gc("click",function(){return t.isLinear=!0}),c.Nc(36," Enable linear mode "),c.Vb(),c.Wb(37,"mat-horizontal-stepper",9,10),c.Wb(39,"mat-step",11),c.Wb(40,"form",12),c.Lc(41,sa,1,0,"ng-template",13),c.Wb(42,"mat-form-field"),c.Rb(43,"input",14),c.Vb(),c.Wb(44,"div"),c.Wb(45,"button",15),c.Nc(46,"Next"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(47,"mat-step",11),c.Wb(48,"form",12),c.Lc(49,ma,1,0,"ng-template",13),c.Wb(50,"mat-form-field"),c.Rb(51,"input",16),c.Vb(),c.Wb(52,"div"),c.Wb(53,"button",17),c.Nc(54,"Back"),c.Vb(),c.Wb(55,"button",15),c.Nc(56,"Next"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(57,"mat-step"),c.Lc(58,ca,1,0,"ng-template",13),c.Nc(59," You are now done. "),c.Wb(60,"div"),c.Wb(61,"button",17),c.Nc(62,"Back"),c.Vb(),c.Wb(63,"button",18),c.gc("click",function(){return c.Bc(n),c.yc(38).reset()}),c.Nc(64,"Reset"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()}2&e&&(c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleBasicStepper),c.Cb(11),c.qc("viewItem",t.exampleHorizontalStepper),c.Cb(15),c.qc("viewItem",t.exampleStepperOverview),c.Cb(5),c.qc("linear",t.isLinear),c.Cb(2),c.qc("stepControl",t.firstFormGroup),c.Cb(1),c.qc("formGroup",t.firstFormGroup),c.Cb(7),c.qc("stepControl",t.secondFormGroup),c.Cb(1),c.qc("formGroup",t.secondFormGroup))},directives:[h.a,g.a,ra.g,ra.b,ra.a,X.b,d.z,d.p,d.i,ra.c,f.c,v.b,d.d,d.o,d.h,d.v,ra.e,ra.f],encapsulation:2}),pa),ga=i("0EQZ"),fa=i("FvrZ"),va=i("8yBR"),Ca=i("2Vo4"),xa=i("VRyK"),wa=i("LRne"),Va=i("bv9b");function Wa(e,t){if(1&e&&(c.Wb(0,"mat-tree-node",12),c.Rb(1,"button",13),c.Nc(2),c.Vb()),2&e){var n=t.$implicit;c.Cb(2),c.Pc(" ",n.item," ")}}function ya(e,t){1&e&&c.Rb(0,"mat-progress-bar",17)}function Na(e,t){if(1&e&&(c.Wb(0,"mat-tree-node",12),c.Wb(1,"button",14),c.Wb(2,"mat-icon",15),c.Nc(3),c.Vb(),c.Vb(),c.Nc(4),c.Lc(5,ya,1,0,"mat-progress-bar",16),c.Vb()),2&e){var n=t.$implicit,a=c.kc();c.Cb(1),c.Db("aria-label","toggle "+n.filename),c.Cb(2),c.Pc(" ",a.treeControl.isExpanded(n)?"expand_more":"chevron_right"," "),c.Cb(1),c.Pc(" ",n.item," "),c.Cb(1),c.qc("ngIf",n.isLoading)}}function ka(e,t){if(1&e&&(c.Wb(0,"mat-tree-node",18),c.Rb(1,"button",13),c.Nc(2),c.Vb()),2&e){var n=t.$implicit;c.Cb(2),c.Qc(" ",n.filename," : ",n.type," ")}}function Ma(e,t){if(1&e&&(c.Wb(0,"mat-tree-node",12),c.Wb(1,"button",14),c.Wb(2,"mat-icon",15),c.Nc(3),c.Vb(),c.Vb(),c.Nc(4),c.Vb()),2&e){var n=t.$implicit,a=c.kc();c.Cb(1),c.Db("aria-label","toggle "+n.filename),c.Cb(2),c.Pc(" ",a.treeControl2.isExpanded(n)?"expand_more":"chevron_right"," "),c.Cb(1),c.Qc(" ",n.filename," : ",n.type," ")}}function Sa(e,t){if(1&e){var n=c.Xb();c.Wb(0,"mat-tree-node",18),c.Rb(1,"button",13),c.Wb(2,"mat-checkbox",19),c.gc("change",function(){c.Bc(n);var e=t.$implicit;return c.kc().checklistSelection3.toggle(e)}),c.Nc(3),c.Vb(),c.Vb()}if(2&e){var a=t.$implicit,o=c.kc();c.Cb(2),c.qc("checked",o.checklistSelection3.isSelected(a)),c.Cb(1),c.Oc(a.item)}}function Ta(e,t){if(1&e){var n=c.Xb();c.Wb(0,"mat-tree-node",12),c.Rb(1,"button",13),c.Wb(2,"mat-form-field"),c.Rb(3,"input",20,21),c.Vb(),c.Wb(5,"button",22),c.gc("click",function(){c.Bc(n);var e=t.$implicit,a=c.yc(4);return c.kc().saveNode3(e,a.value)}),c.Nc(6," Save "),c.Vb(),c.Vb()}}function Ia(e,t){if(1&e){var n=c.Xb();c.Wb(0,"mat-tree-node",12),c.Wb(1,"button",14),c.Wb(2,"mat-icon",15),c.Nc(3),c.Vb(),c.Vb(),c.Wb(4,"mat-checkbox",23),c.gc("change",function(){c.Bc(n);var e=t.$implicit;return c.kc().todoItemSelectionToggle3(e)}),c.Nc(5),c.Vb(),c.Wb(6,"button",24),c.gc("click",function(){c.Bc(n);var e=t.$implicit;return c.kc().addNewItem3(e)}),c.Wb(7,"mat-icon"),c.Nc(8,"add"),c.Vb(),c.Vb(),c.Vb()}if(2&e){var a=t.$implicit,o=c.kc();c.Cb(1),c.Db("aria-label","toggle "+a.filename),c.Cb(2),c.Pc(" ",o.treeControl3.isExpanded(a)?"expand_more":"chevron_right"," "),c.Cb(1),c.qc("checked",o.descendantsAllSelected3(a))("indeterminate",o.descendantsPartiallySelected3(a)),c.Cb(1),c.Oc(a.item)}}function Da(e,t){if(1&e&&(c.Wb(0,"mat-tree-node",12),c.Rb(1,"button",13),c.Nc(2),c.Vb()),2&e){var n=t.$implicit;c.Cb(2),c.Pc(" ",n.item," ")}}function Fa(e,t){if(1&e){var n=c.Xb();c.Wb(0,"mat-tree-node",12),c.Wb(1,"button",25),c.gc("click",function(){c.Bc(n);var e=t.$implicit;return c.kc().loadChildren4(e)}),c.Wb(2,"mat-icon",15),c.Nc(3),c.Vb(),c.Vb(),c.Nc(4),c.Vb()}if(2&e){var a=t.$implicit,o=c.kc();c.Cb(1),c.Db("aria-label","toggle "+a.filename),c.Cb(2),c.Pc(" ",o.treeControl4.isExpanded(a)?"expand_more":"chevron_right"," "),c.Cb(1),c.Pc(" ",a.item," ")}}function Ea(e,t){if(1&e){var n=c.Xb();c.Wb(0,"mat-tree-node"),c.Wb(1,"button",22),c.gc("click",function(){c.Bc(n);var e=t.$implicit;return c.kc().loadMore4(e.loadMoreParentItem)}),c.Nc(2," Load more... "),c.Vb(),c.Vb()}}var Oa,qa,La,Aa,Ra,Pa,_a,Ba={beforeCodeTitle:"Tree with dynamic data",htmlCode:'\n<mat-tree [dataSource]="dataSource" [treeControl]="treeControl">\n  <mat-tree-node *matTreeNodeDef="let node" matTreeNodePadding>\n    <button mat-icon-button disabled></button>\n    {{node.item}}\n  </mat-tree-node>\n  <mat-tree-node *matTreeNodeDef="let node; when: hasChild" matTreeNodePadding>\n    <button mat-icon-button\n      [attr.aria-label]="\'toggle \' + node.filename" matTreeNodeToggle>\n      <mat-icon class="mat-icon-rtl-mirror">\n        {{treeControl.isExpanded(node) ? \'expand_more\' : \'chevron_right\'}}\n      </mat-icon>\n    </button>\n    {{node.item}}\n    <mat-progress-bar *ngIf="node.isLoading"\n      mode="indeterminate"\n      class="example-tree-progress-bar"></mat-progress-bar>\n  </mat-tree-node>\n</mat-tree>',tsCode:"\nimport {CollectionViewer, SelectionChange} from '@angular/cdk/collections';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {Component, Injectable} from '@angular/core';\nimport {BehaviorSubject, merge, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n/** Flat node with expandable and level information */\nexport class DynamicFlatNode {\n  constructor(public item: string, public level = 1, public expandable = false,\n    public isLoading = false) {}\n  }\n\n  /**\n  * Database for dynamic data. When expanding a node in the tree, the data source will need to fetch\n  * the descendants data from the database.\n  */\n  export class DynamicDatabase {\n    dataMap = new Map<string, string[]>([\n      ['Vegetables', ['Tomato', 'Potato', 'Onion']],\n      ['Apple', ['Fuji', 'Macintosh']],\n      ['Onion', ['Yellow', 'White', 'Purple']]\n    ]);\n\n    rootLevelNodes: string[] = ['Fruits', 'Vegetables'];\n    /** Initial data from database */\n    initialData(): DynamicFlatNode[] {\n    return this.rootLevelNodes.map(name => new DynamicFlatNode(name, 0, true));\n  }\n\n  getChildren(node: string): string[] | undefined {\n    return this.dataMap.get(node);\n  }\n\n  isExpandable(node: string): boolean {\n    return this.dataMap.has(node);\n  }\n}\n\n/**\n* File database, it can build a tree structured Json object from string.\n* Each node in Json object represents a file or a directory. For a file, it has filename and type.\n* For a directory, it has filename and children (a list of files or directories).\n* The input will be a json object string, and the output is a list of `FileNode` with nested\n* structure.\n*/\n@Injectable()\nexport class DynamicDataSource {\n\n  dataChange = new BehaviorSubject<DynamicFlatNode[]>([]);\n\n  get data(): DynamicFlatNode[] { return this.dataChange.value; }\n  set data(value: DynamicFlatNode[]) {\n    this.treeControl.dataNodes = value;\n    this.dataChange.next(value);\n  }\n\n  constructor(private treeControl: FlatTreeControl<DynamicFlatNode>,\n    private database: DynamicDatabase) {}\n\n  connect(collectionViewer: CollectionViewer): Observable<DynamicFlatNode[]> {\n    this.treeControl.expansionModel.onChange!.subscribe(change => {\n    if ((change as SelectionChange<DynamicFlatNode>).added ||\n      (change as SelectionChange<DynamicFlatNode>).removed) {\n        this.handleTreeControl(change as SelectionChange<DynamicFlatNode>);\n      }\n    });\n\n    return merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\n  }\n\n\n  /** Handle expand/collapse behaviors */\n  handleTreeControl(change: SelectionChange<DynamicFlatNode>) {\n    if (change.added) {\n      change.added.forEach(node => this.toggleNode(node, true));\n    }\n    if (change.removed) {\n      change.removed.slice().reverse().forEach(node => this.toggleNode(node, false));\n    }\n  }\n\n\n  /**\n  * Toggle the node, remove from display list\n  */\n  toggleNode(node: DynamicFlatNode, expand: boolean) {\n    const children = this.database.getChildren(node.item);\n    const index = this.data.indexOf(node);\n    if (!children || index < 0) { // If no children, or cannot find the node, no op\n      return;\n    }\n\n\n    node.isLoading = true;\n\n    setTimeout(() => {\n      if (expand) {\n        const nodes = children.map(name =>\n          new DynamicFlatNode(name, node.level + 1, this.database.isExpandable(name)));\n          this.data.splice(index + 1, 0, ...nodes);\n      } else {\n        let count = 0;\n        for (let i = index + 1; i < this.data.length\n          && this.data[i].level > node.level; i++, count++) {}\n          this.data.splice(index + 1, count);\n        }\n\n\n        // notify the change\n        this.dataChange.next(this.data);\n        node.isLoading = false;\n    }, 1000);\n  }\n}\n\n\n/**\n* @title Tree with dynamic data\n*/\n@Component({\n  selector: 'tree-dynamic-example',\n  templateUrl: 'tree-dynamic-example.html',\n  styleUrls: ['tree-dynamic-example.css'],\n  providers: [DynamicDatabase]\n})\nexport class TreeDynamicExample {\n  constructor(database: DynamicDatabase) {\n    this.treeControl = new FlatTreeControl<DynamicFlatNode>(this.getLevel, this.isExpandable);\n    this.dataSource = new DynamicDataSource(this.treeControl, database);\n\n    this.dataSource.data = database.initialData();\n  }\n\n  treeControl: FlatTreeControl<DynamicFlatNode>;\n\n  dataSource: DynamicDataSource;\n\n  getLevel = (node: DynamicFlatNode) => node.level;\n\n  isExpandable = (node: DynamicFlatNode) => node.expandable;\n\n  hasChild = (_: number, _nodeData: DynamicFlatNode) => _nodeData.expandable;\n}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},Ua={beforeCodeTitle:"Tree with flat nodes",htmlCode:'\n<mat-tree [dataSource]="dataSource" [treeControl]="treeControl">\n  <mat-tree-node *matTreeNodeDef="let node" matTreeNodeToggle matTreeNodePadding>\n    <button mat-icon-button disabled></button>\n    {{node.filename}} : {{node.type}}\n  </mat-tree-node>\n\n  <mat-tree-node *matTreeNodeDef="let node;when: hasChild" matTreeNodePadding>\n    <button mat-icon-button matTreeNodeToggle\n      [attr.aria-label]="\'toggle \' + node.filename">\n      <mat-icon class="mat-icon-rtl-mirror">\n        {{treeControl.isExpanded(node) ? \'expand_more\' : \'chevron_right\'}}\n      </mat-icon>\n    </button>\n    {{node.filename}} : {{node.type}}\n  </mat-tree-node>\n</mat-tree>',tsCode:"\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {Component, Injectable} from '@angular/core';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport {BehaviorSubject, Observable, of as observableOf} from 'rxjs';\n\n/**\n* File node data with nested structure.\n* Each node has a filename, and a type or a list of children.\n*/\nexport class FileNode {\n  children: FileNode[];\n  filename: string;\n  type: any;\n}\n\n/** Flat node with expandable and level information */\n  export class FileFlatNode {\n  constructor(\n  public expandable: boolean, public filename: string, public level: number, public type: any) {}\n\n}\n\n/**\n* The file structure tree data in string. The data could be parsed into a Json object\n*/\nconst TREE_DATA = JSON.stringify({\n  Applications: {\n    Calendar: 'app',\n    Chrome: 'app',\n    Webstorm: 'app'\n  },\n  Documents: {\n    angular: {\n      src: {\n        compiler: 'ts',\n        core: 'ts'\n      }\n    },\n    material2: {\n      src: {\n        button: 'ts',\n        checkbox: 'ts',\n        input: 'ts'\n      }\n    }\n  },\n  Downloads: {\n    October: 'pdf',\n    November: 'pdf',\n    Tutorial: 'html'\n  },\n  Pictures: {\n    'Photo Booth Library': {\n      Contents: 'dir',\n      Pictures: 'dir'\n    },\n    Sun: 'png',\n    Woods: 'jpg'\n   }\n});\n\n/**\n* File database, it can build a tree structured Json object from string.\n* Each node in Json object represents a file or a directory. For a file, it has filename and type.\n* For a directory, it has filename and children (a list of files or directories).\n* The input will be a json object string, and the output is a list of `FileNode` with nested\n* structure.\n*/\n@Injectable()\n  export class FileDatabase {\n  dataChange = new BehaviorSubject<FileNode[]>([]);\n\n  get data(): FileNode[] { return this.dataChange.value; }\n\n  constructor() {\n    this.initialize();\n  }\n\n  initialize() {\n    // Parse the string to json object.\n    const dataObject = JSON.parse(TREE_DATA);\n\n    // Build the tree nodes from Json object. The result is a list of `FileNode` with nested\n    //     file node as children.\n    const data = this.buildFileTree(dataObject, 0);\n\n    // Notify the change.\n    this.dataChange.next(data);\n  }\n\n  /**\n  * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n  * The return value is the list of `FileNode`.\n  */\n  buildFileTree(obj: object, level: number): FileNode[] {\n    return Object.keys(obj).reduce<FileNode[]>((accumulator, key) => {\n    const value = obj[key];\n    const node = new FileNode();\n    node.filename = key;\n\n     if (value != null) {\n       if (typeof value === 'object') {\n         node.children = this.buildFileTree(value, level + 1);\n       } else {\n         node.type = value;\n       }\n      }\n\n      return accumulator.concat(node);\n    }, []);\n  }\n}\n\n\n/**\n* @title Tree with flat nodes\n*/\n@Component({\n  selector: 'tree-flat-overview-example',\n  templateUrl: 'tree-flat-overview-example.html',\n  styleUrls: ['tree-flat-overview-example.css'],\n  providers: [FileDatabase]\n})\nexport class TreeFlatOverviewExample {\n  treeControl: FlatTreeControl<FileFlatNode>;\n  treeFlattener: MatTreeFlattener<FileNode, FileFlatNode>;\n  dataSource: MatTreeFlatDataSource<FileNode, FileFlatNode>;\n\n  constructor(database: FileDatabase) {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this._getLevel,\n    this._isExpandable, this._getChildren);\n    this.treeControl = new FlatTreeControl<FileFlatNode>(this._getLevel, this._isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    database.dataChange.subscribe(data => this.dataSource.data = data);\n  }\n\n  transformer = (node: FileNode, level: number) => {\n    return new FileFlatNode(!!node.children, node.filename, level, node.type);\n  }\n\n  private _getLevel = (node: FileFlatNode) => node.level;\n  private _isExpandable = (node: FileFlatNode) => node.expandable;\n  private _getChildren = (node: FileNode): Observable<FileNode[]> => observableOf(node.children);\n  hasChild = (_: number, _nodeData: FileFlatNode) => _nodeData.expandable;\n}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},za={beforeCodeTitle:"Tree with checkboxes",htmlCode:'\n<mat-tree [dataSource]="dataSource" [treeControl]="treeControl">\n  <mat-tree-node *matTreeNodeDef="let node" matTreeNodeToggle matTreeNodePadding>\n    <button mat-icon-button disabled></button>\n    <mat-checkbox class="checklist-leaf-node"\n      [checked]="checklistSelection.isSelected(node)"\n      (change)="checklistSelection.toggle(node);">{{node.item}}</mat-checkbox>\n  </mat-tree-node>\n\n  <mat-tree-node *matTreeNodeDef="let node; when: hasNoContent" matTreeNodePadding>\n     <button mat-icon-button disabled></button>\n     <mat-form-field>\n       <input matInput #itemValue placeholder="New item...">\n     </mat-form-field>\n     <button mat-button (click)="saveNode(node, itemValue.value)">Save</button>\n  </mat-tree-node>\n\n  <mat-tree-node *matTreeNodeDef="let node; when: hasChild" matTreeNodePadding>\n    <button mat-icon-button matTreeNodeToggle\n      [attr.aria-label]="\'toggle \' + node.filename">\n      <mat-icon class="mat-icon-rtl-mirror">\n        {{treeControl.isExpanded(node) ? \'expand_more\' : \'chevron_right\'}}\n      </mat-icon>\n    </button>\n    <mat-checkbox [checked]="descendantsAllSelected(node)"\n      [indeterminate]="descendantsPartiallySelected(node)"\n      (change)="todoItemSelectionToggle(node)">{{node.item}}</mat-checkbox>\n    <button mat-icon-button (click)="addNewItem(node)"><mat-icon>add</mat-icon></button>\n  </mat-tree-node>\n</mat-tree>',tsCode:"\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {Component, Injectable} from '@angular/core';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport {BehaviorSubject} from 'rxjs';\n\n/**\n* Node for to-do item\n*/\nexport class TodoItemNode {\n  children: TodoItemNode[];\n  item: string;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class TodoItemFlatNode {\n  item: string;\n  level: number;\n  expandable: boolean;\n}\n\n/**\n* The Json object for to-do list data.\n*/\nconst TREE_DATA = {\n  Groceries: {\n    'Almond Meal flour': null,\n    'Organic eggs': null,\n    'Protein Powder': null,\n    Fruits: {\n      Apple: null,\n      Berries: ['Blueberry', 'Raspberry'],\n      Orange: null\n    }\n  },\n  Reminders: [\n    'Cook dinner',\n    'Read the Material Design spec',\n    'Upgrade Application to Angular'\n  ]\n};\n\n/**\n* Checklist database, it can build a tree structured Json object.\n* Each node in Json object represents a to-do item or a category.\n* If a node is a category, it has children items and new items can be added under the category.\n*/\n@Injectable()\nexport class ChecklistDatabase {\n  dataChange = new BehaviorSubject<TodoItemNode[]>([]);\n\n  get data(): TodoItemNode[] { return this.dataChange.value; }\n\n  constructor() {\n    this.initialize();\n  }\n\n  initialize() {\n    // Build the tree nodes from Json object. The result is a list of `TodoItemNode` with nested\n    //     file node as children.\n    const data = this.buildFileTree(TREE_DATA, 0);\n\n    // Notify the change.\n    this.dataChange.next(data);\n  }\n\n  /**\n  * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n  * The return value is the list of `TodoItemNode`.\n  */\n  buildFileTree(obj: object, level: number): TodoItemNode[] {\n    return Object.keys(obj).reduce<TodoItemNode[]>((accumulator, key) => {\n      const value = obj[key];\n      const node = new TodoItemNode();\n      node.item = key;\n\n      if (value != null) {\n        if (typeof value === 'object') {\n          node.children = this.buildFileTree(value, level + 1);\n        } else {\n          node.item = value;\n        }\n      }\n\n      return accumulator.concat(node);\n    }, []);\n  }\n\n/** Add an item to to-do list */\n  insertItem(parent: TodoItemNode, name: string) {\n    if (parent.children) {\n      parent.children.push({item: name} as TodoItemNode);\n      this.dataChange.next(this.data);\n    }\n  }\n\n  updateItem(node: TodoItemNode, name: string) {\n    node.item = name;\n\tthis.dataChange.next(this.data);\n  }\n}\n\n/**\n* @title Tree with checkboxes\n*/\n@Component({\n  selector: 'tree-checklist-example',\n  templateUrl: 'tree-checklist-example.html',\n  styleUrls: ['tree-checklist-example.css'],\n  providers: [ChecklistDatabase]\n)\nexport class TreeChecklistExample {\n  /** Map from flat node to nested node. This helps us finding the nested node to be modified */\n  flatNodeMap = new Map<TodoItemFlatNode, TodoItemNode>();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap = new Map<TodoItemNode, TodoItemFlatNode>();\n\n  /** A selected parent node to be inserted */\n  selectedParent: TodoItemFlatNode | null = null;\n\n  /** The new item's name */\n  newItemName = '';\n\n  treeControl: FlatTreeControl<TodoItemFlatNode>;\n\n  treeFlattener: MatTreeFlattener<TodoItemNode, TodoItemFlatNode>;\n\n  dataSource: MatTreeFlatDataSource<TodoItemNode, TodoItemFlatNode>;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel<TodoItemFlatNode>(true /* multiple */);\n\n  constructor(private database: ChecklistDatabase) {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\n    this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl<TodoItemFlatNode>(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    database.dataChange.subscribe(data => {\n      this.dataSource.data = data;\n    });\n  }\n\n  getLevel = (node: TodoItemFlatNode) => node.level;\n\n  isExpandable = (node: TodoItemFlatNode) => node.expandable;\n\n  getChildren = (node: TodoItemNode): TodoItemNode[] => node.children;\n\n  hasChild = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.expandable;\n\n  hasNoContent = (_: number, _nodeData: TodoItemFlatNode) => _nodeData.item === '';\n\n  /**\n  * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n  */\n  transformer = (node: TodoItemNode, level: number) => {\n    const existingNode = this.nestedNodeMap.get(node);\n    const flatNode = existingNode && existingNode.item === node.item\n      ? existingNode\n      : new TodoItemFlatNode();\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  /** Whether all the descendants of the node are selected */\n  descendantsAllSelected(node: TodoItemFlatNode): boolean {\n  const descendants = this.treeControl.getDescendants(node);\n     return descendants.every(child => this.checklistSelection.isSelected(child));\n  }\n\n  /** Whether part of the descendants are selected */\n  descendantsPartiallySelected(node: TodoItemFlatNode): boolean {\n  const descendants = this.treeControl.getDescendants(node);\n  const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    return result && !this.descendantsAllSelected(node);\n  }\n\n  /** Toggle the to-do item selection. Select/deselect all the descendants node */\n  todoItemSelectionToggle(node: TodoItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    this.checklistSelection.isSelected(node) ? this.checklistSelection.select(...descendants)\n      : this.checklistSelection.deselect(...descendants);\n  }\n\n  /** Select the category so we can insert the new item. */\n  addNewItem(node: TodoItemFlatNode) {\n    const parentNode = this.flatNodeMap.get(node);\n    this.database.insertItem(parentNode!, '');\n    this.treeControl.expand(node);\n  }\n\n  /** Save the node to database */\n  saveNode(node: TodoItemFlatNode, itemValue: string) {\n    const nestedNode = this.flatNodeMap.get(node);\n    this.database.updateItem(nestedNode!, itemValue);\n  }\n}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},ja={beforeCodeTitle:"Tree with partially loaded data",htmlCode:'\n<mat-tree [dataSource]="dataSource" [treeControl]="treeControl">\n  \x3c!-- Leaf node --\x3e\n  <mat-tree-node *matTreeNodeDef="let node" matTreeNodePadding>\n    <button mat-icon-button disabled></button>\n      {{node.item}}\n  </mat-tree-node>\n\n  \x3c!-- expandable node --\x3e\n  <mat-tree-node *matTreeNodeDef="let node; when: hasChild" matTreeNodePadding>\n    <button mat-icon-button\n      [attr.aria-label]="\'toggle \' + node.filename"\n      (click)="loadChildren(node)"\n      matTreeNodeToggle>\n      <mat-icon class="mat-icon-rtl-mirror">\n        {{treeControl.isExpanded(node) ? \'expand_more\' : \'chevron_right\'}}\n      </mat-icon>\n   </button>\n   {{node.item}}\n  </mat-tree-node>\n\n  <mat-tree-node *matTreeNodeDef="let node; when: isLoadMore">\n    <button mat-button (click)="loadMore(node.loadMoreParentItem)">\n      Load more...\n    </button>\n  </mat-tree-node>\n</mat-tree>',tsCode:"\n/**\n* @license\n* Copyright Google LLC All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n*/\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {Component, Injectable} from '@angular/core';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\nconst LOAD_MORE = 'LOAD_MORE';\n/** Nested node */\nexport class LoadmoreNode {\n  childrenChange = new BehaviorSubject<LoadmoreNode[]>([]);\n\n  get children(): LoadmoreNode[] {\n    return this.childrenChange.value;\n  }\n\n  constructor(public item: string,\n  public hasChildren = false,\n  public loadMoreParentItem: string | null = null) {}\n}\n\n/** Flat node with expandable and level information */\nexport class LoadmoreFlatNode {\n  constructor(public item: string,\n  public level = 1,\n  public expandable = false,\n  public loadMoreParentItem: string | null = null) {}\n}\n\n/**\n* A database that only load part of the data initially. After user clicks on the `Load more`\n* button, more data will be loaded.\n*/\n@Injectable()\nexport class LoadmoreDatabase {\n  batchNumber = 5;\n  dataChange = new BehaviorSubject<LoadmoreNode[]>([]);\n  nodeMap = new Map<string, LoadmoreNode>();\n\n  /** The data */\n  rootLevelNodes: string[] = ['Vegetables', 'Fruits'];\n  dataMap = new Map<string, string[]>([\n    ['Fruits', ['Apple', 'Orange', 'Banana']],\n    ['Vegetables', ['Tomato', 'Potato', 'Onion']],\n    ['Apple', ['Fuji', 'Macintosh']],\n    ['Onion', ['Yellow', 'White', 'Purple', 'Green', 'Shallot', 'Sweet', 'Red', 'Leek']],\n  ]);\n\n  initialize() {\n    const data = this.rootLevelNodes.map(name => this._generateNode(name));\n    this.dataChange.next(data);\n  }\n\n  /** Expand a node whose children are not loaded */\n  loadMore(item: string, onlyFirstTime = false) {\n    if (!this.nodeMap.has(item) || !this.dataMap.has(item)) {\n      return;\n    }\n    const parent = this.nodeMap.get(item)!;\n    const children = this.dataMap.get(item)!;\n    if (onlyFirstTime && parent.children!.length > 0) {\n      return;\n    }\n    const newChildrenNumber = parent.children!.length + this.batchNumber;\n    const nodes = children.slice(0, newChildrenNumber).map(name => this._generateNode(name));\n    if (newChildrenNumber < children.length) {\n    // Need a new load more node\n      nodes.push(new LoadmoreNode(LOAD_MORE, false, item));\n    }\n\n    parent.childrenChange.next(nodes);\n    this.dataChange.next(this.dataChange.value);\n  }\n\n  private _generateNode(item: string): LoadmoreNode {\n    if (this.nodeMap.has(item)) {\n      return this.nodeMap.get(item)!;\n    }\n    const result = new LoadmoreNode(item, this.dataMap.has(item));\n    this.nodeMap.set(item, result);\n    return result;\n  }\n}\n\n/**\n* @title Tree with partially loaded data\n*/\nComponent({\n  selector: 'tree-loadmore-example',\n  templateUrl: 'tree-loadmore-example.html',\n  styleUrls: ['tree-loadmore-example.css'],\n  providers: [LoadmoreDatabase]\n})\nexport class TreeLoadmoreExample {\n  nodeMap = new Map<string, LoadmoreFlatNode>();\n  treeControl: FlatTreeControl<LoadmoreFlatNode>;\n  treeFlattener: MatTreeFlattener<LoadmoreNode, LoadmoreFlatNode>;\n  // Flat tree data source\n  dataSource: MatTreeFlatDataSource<LoadmoreNode, LoadmoreFlatNode>;\n\n  constructor(private database: LoadmoreDatabase) {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\n    this.isExpandable, this.getChildren);\n\n    this.treeControl = new FlatTreeControl<LoadmoreFlatNode>(this.getLevel, this.isExpandable);\n\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    database.dataChange.subscribe(data => {\n      this.dataSource.data = data;\n    });\n\n    database.initialize();\n  }\n\n  getChildren = (node: LoadmoreNode): Observable<LoadmoreNode[]> => node.childrenChange;\n\n  transformer = (node: LoadmoreNode, level: number) => {\n    const existingNode = this.nodeMap.get(node.item);\n\n    if (existingNode) {\n      return existingNode;\n    }\n\n    const newNode = new LoadmoreFlatNode(node.item, level, node.hasChildren, node.loadMoreParentItem);\n    this.nodeMap.set(node.item, newNode);\n    return newNode;\n  }\n\n  getLevel = (node: LoadmoreFlatNode) => node.level;\n\n  isExpandable = (node: LoadmoreFlatNode) => node.expandable;\n\n  hasChild = (_: number, _nodeData: LoadmoreFlatNode) => _nodeData.expandable;\n\n  isLoadMore = (_: number, _nodeData: LoadmoreFlatNode) => _nodeData.item === LOAD_MORE;\n\n  /** Load more nodes from data source */\n  loadMore(item: string) {\n    this.database.loadMore(item);\n  }\n\n  loadChildren(node: LoadmoreFlatNode) {\n    this.database.loadMore(node.item, true);\n  }\n}",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},Ha=function e(){o(this,e)},Ga=function e(t,n,a,i){o(this,e),this.expandable=t,this.filename=n,this.level=a,this.type=i},$a=JSON.stringify({Applications:{Calendar:"app",Chrome:"app",Webstorm:"app"},Documents:{angular:{src:{compiler:"ts",core:"ts"}},material2:{src:{button:"ts",checkbox:"ts",input:"ts"}}},Downloads:{October:"pdf",November:"pdf",Tutorial:"html"},Pictures:{"Photo Booth Library":{Contents:"dir",Pictures:"dir"},Sun:"png",Woods:"jpg"}}),Ka=((Oa=function(){function e(){o(this,e),this.dataChange=new Ca.a([]),this.initialize()}return a(e,[{key:"initialize",value:function(){var e=JSON.parse($a),t=this.buildFileTree(e,0);this.dataChange.next(t)}},{key:"buildFileTree",value:function(e,t){var n=this;return Object.keys(e).reduce(function(a,o){var i=e[o],l=new Ha;return l.filename=o,null!=i&&("object"==typeof i?l.children=n.buildFileTree(i,t+1):l.type=i),a.concat(l)},[])}},{key:"data",get:function(){if(this.dataChange)return this.dataChange.value}}]),e}()).\u0275fac=function(e){return new(e||Oa)},Oa.\u0275prov=c.Mb({token:Oa,factory:Oa.\u0275fac}),Oa),Ya=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];o(this,e),this.item=t,this.level=n,this.expandable=a,this.isLoading=i},Ja=function(){function e(){o(this,e),this.dataMap=new Map([["Fruits",["Apple","Orange","Banana"]],["Vegetables",["Tomato","Potato","Onion"]],["Apple",["Fuji","Macintosh"]],["Onion",["Yellow","White","Purple"]]]),this.rootLevelNodes=["Fruits","Vegetables"]}return a(e,[{key:"initialData",value:function(){return this.rootLevelNodes.map(function(e){return new Ya(e,0,!0)})}},{key:"getChildren",value:function(e){return this.dataMap.get(e)}},{key:"isExpandable",value:function(e){return this.dataMap.has(e)}}]),e}(),Qa=((qa=function(){function t(e,n,a){o(this,t),this.treeControl=e,this.database=n,this.cdr=a,this.dataChange=new Ca.a([])}return a(t,[{key:"connect",value:function(e){var t=this;return this.treeControl.expansionModel.changed.subscribe(function(e){(e.added||e.removed)&&t.handleTreeControl(e)}),Object(xa.a)(e.viewChange,this.dataChange).pipe(Object(u.a)(function(){return t.data}))}},{key:"handleTreeControl",value:function(e){var t=this;e.added&&e.added.forEach(function(e){return t.toggleNode(e,!0)}),e.removed&&e.removed.slice().reverse().forEach(function(e){return t.toggleNode(e,!1)})}},{key:"toggleNode",value:function(t,n){var a=this,o=this.database.getChildren(t.item),i=this.data.indexOf(t);!o||i<0||(t.isLoading=!0,setTimeout(function(){if(n){var l,r=o.map(function(e){return new Ya(e,t.level+1,a.database.isExpandable(e))});(l=a.data).splice.apply(l,[i+1,0].concat(e(r)))}else{for(var s=0,m=i+1;m<a.data.length&&a.data[m].level>t.level;m++,s++);a.data.splice(i+1,s)}a.dataChange.next(a.data),t.isLoading=!1,a.cdr.markForCheck()},500))}},{key:"data",get:function(){return this.dataChange.value},set:function(e){this.treeControl.dataNodes=e,this.dataChange.next(e)}}]),t}()).\u0275fac=function(e){return new(e||qa)(c.dc(fa.j),c.dc(Ja),c.dc(c.i))},qa.\u0275prov=c.Mb({token:qa,factory:qa.\u0275fac}),qa),Xa=function e(){o(this,e)},Za=function e(){o(this,e)},eo={Groceries:{"Almond Meal flour":null,"Organic eggs":null,"Protein Powder":null,Fruits:{Apple:null,Berries:["Blueberry","Raspberry"],Orange:null}},Reminders:["Cook dinner","Read the Material Design spec","Upgrade Application to Angular"]},to=((La=function(){function e(){o(this,e),this.dataChange=new Ca.a([]),this.initialize()}return a(e,[{key:"initialize",value:function(){var e=this.buildFileTree(eo,0);this.dataChange.next(e)}},{key:"buildFileTree",value:function(e,t){var n=this;return Object.keys(e).reduce(function(a,o){var i=e[o],l=new Xa;return l.item=o,null!=i&&("object"==typeof i?l.children=n.buildFileTree(i,t+1):l.item=i),a.concat(l)},[])}},{key:"insertItem",value:function(e,t){e.children&&(e.children.push({item:t}),this.dataChange.next(this.data))}},{key:"updateItem",value:function(e,t){e.item=t,this.dataChange.next(this.data)}},{key:"data",get:function(){if(this.dataChange)return this.dataChange.value}}]),e}()).\u0275fac=function(e){return new(e||La)},La.\u0275prov=c.Mb({token:La,factory:La.\u0275fac}),La),no=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;o(this,e),this.item=t,this.hasChildren=n,this.loadMoreParentItem=a,this.childrenChange=new Ca.a([])}return a(e,[{key:"children",get:function(){return this.childrenChange.value}}]),e}(),ao=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;o(this,e),this.item=t,this.level=n,this.expandable=a,this.loadMoreParentItem=i},oo=((Ra=function(){function e(){o(this,e),this.batchNumber=5,this.dataChange=new Ca.a([]),this.nodeMap=new Map,this.rootLevelNodes=["Vegetables","Fruits"],this.dataMap=new Map([["Fruits",["Apple","Orange","Banana"]],["Vegetables",["Tomato","Potato","Onion"]],["Apple",["Fuji","Macintosh"]],["Onion",["Yellow","White","Purple","Green","Shallot","Sweet","Red","Leek"]]])}return a(e,[{key:"initialize",value:function(){var e=this,t=this.rootLevelNodes.map(function(t){return e._generateNode(t)});this.dataChange.next(t)}},{key:"loadMore",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.nodeMap.has(e)&&this.dataMap.has(e)){var a=this.nodeMap.get(e),o=this.dataMap.get(e);if(!(n&&a.children.length>0)){var i=a.children.length+this.batchNumber,l=o.slice(0,i).map(function(e){return t._generateNode(e)});i<o.length&&l.push(new no("LOAD_MORE",!1,e)),a.childrenChange.next(l),this.dataChange.next(this.dataChange.value)}}}},{key:"_generateNode",value:function(e){if(this.nodeMap.has(e))return this.nodeMap.get(e);var t=new no(e,this.dataMap.has(e));return this.nodeMap.set(e,t),t}}]),e}()).\u0275fac=function(e){return new(e||Ra)},Ra.\u0275prov=c.Mb({token:Ra,factory:Ra.\u0275fac}),Ra),io=((Aa=function(){function t(e,n,a,i,l){var r=this;o(this,t),this.database3=a,this.database4=i,this.cdr=l,this.flatNodeMap3=new Map,this.nestedNodeMap3=new Map,this.selectedParent3=null,this.newItemName3="",this.checklistSelection3=new ga.c(!0),this.nodeMap4=new Map,this.getLevel=function(e){return e.level},this.isExpandable=function(e){return e.expandable},this.hasChild=function(e,t){return t.expandable},this.transformer2=function(e,t){return new Ga(!!e.children,e.filename,t,e.type)},this._getLevel2=function(e){return e.level},this._isExpandable2=function(e){return e.expandable},this._getChildren2=function(e){return Object(wa.a)(e.children)},this.hasChild2=function(e,t){return t.expandable},this.getLevel3=function(e){return e.level},this.isExpandable3=function(e){return e.expandable},this.getChildren3=function(e){return e.children},this.hasChild3=function(e,t){return t.expandable},this.hasNoContent3=function(e,t){return""===t.item},this.transformer3=function(e,t){var n=r.nestedNodeMap3.get(e),a=n&&n.item===e.item?n:new Za;return a.item=e.item,a.level=t,a.expandable=!!e.children,r.flatNodeMap3.set(a,e),r.nestedNodeMap3.set(e,a),a},this.getChildren4=function(e){return e.childrenChange},this.transformer4=function(e,t){var n=r.nodeMap4.get(e.item);if(n)return n;var a=new ao(e.item,t,e.hasChildren,e.loadMoreParentItem);return r.nodeMap4.set(e.item,a),a},this.getLevel4=function(e){return e.level},this.isExpandable4=function(e){return e.expandable},this.hasChild4=function(e,t){return t.expandable},this.isLoadMore4=function(e,t){return"LOAD_MORE"===t.item},this.treeControl=new fa.j(this.getLevel,this.isExpandable),this.dataSource=new Qa(this.treeControl,e,this.cdr),this.dataSource.data=e.initialData(),this.treeFlattener2=new va.c(this.transformer2,this._getLevel2,this._isExpandable2,this._getChildren2),this.treeControl2=new fa.j(this._getLevel2,this._isExpandable2),this.dataSource2=new va.b(this.treeControl2,this.treeFlattener2),n.dataChange.subscribe(function(e){return r.dataSource2.data=e}),this.treeFlattener3=new va.c(this.transformer3,this.getLevel3,this.isExpandable3,this.getChildren3),this.treeControl3=new fa.j(this.getLevel3,this.isExpandable3),this.dataSource3=new va.b(this.treeControl3,this.treeFlattener3),a.dataChange.subscribe(function(e){r.dataSource3.data=e}),this.treeFlattener4=new va.c(this.transformer4,this.getLevel4,this.isExpandable4,this.getChildren4),this.treeControl4=new fa.j(this.getLevel4,this.isExpandable4),this.dataSource4=new va.b(this.treeControl4,this.treeFlattener4),i.dataChange.subscribe(function(e){r.dataSource4.data=e}),i.initialize()}return a(t,[{key:"ngOnInit",value:function(){this.exampleTreeWithDynamicData=Ba,this.exampleTreeWithFlatNodes=Ua,this.exampleTreeWithCheckboxes=za,this.exampleTreeWithPartiallyLoadedData=ja}},{key:"descendantsAllSelected3",value:function(e){var t=this;return this.treeControl3.getDescendants(e).every(function(e){return t.checklistSelection3.isSelected(e)})}},{key:"descendantsPartiallySelected3",value:function(e){var t=this;return this.treeControl3.getDescendants(e).some(function(e){return t.checklistSelection3.isSelected(e)})&&!this.descendantsAllSelected3(e)}},{key:"todoItemSelectionToggle3",value:function(t){var n,a;this.checklistSelection3.toggle(t);var o=this.treeControl3.getDescendants(t);this.checklistSelection3.isSelected(t)?(n=this.checklistSelection3).select.apply(n,e(o)):(a=this.checklistSelection3).deselect.apply(a,e(o))}},{key:"addNewItem3",value:function(e){var t=this.flatNodeMap3.get(e);this.database3.insertItem(t,""),this.treeControl3.expand(e)}},{key:"saveNode3",value:function(e,t){var n=this.flatNodeMap3.get(e);this.database3.updateItem(n,t)}},{key:"loadMore4",value:function(e){this.database4.loadMore(e)}},{key:"loadChildren4",value:function(e){this.database4.loadMore(e.item,!0)}}]),t}()).\u0275fac=function(e){return new(e||Aa)(c.Qb(Ja),c.Qb(Ka),c.Qb(to),c.Qb(oo),c.Qb(c.i))},Aa.\u0275cmp=c.Kb({type:Aa,selectors:[["app-material-tree"]],features:[c.Bb([Ja,Ka,to,oo])],decls:39,vars:19,consts:[[3,"svg"],["href","https://material.angular.io/components/tree/overview","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],[3,"dataSource","treeControl"],["matTreeNodePadding","",4,"matTreeNodeDef"],["matTreeNodePadding","",4,"matTreeNodeDef","matTreeNodeDefWhen"],["matTreeNodeToggle","","matTreeNodePadding","",4,"matTreeNodeDef"],[4,"matTreeNodeDef","matTreeNodeDefWhen"],["matTreeNodePadding",""],["mat-icon-button","","disabled",""],["mat-icon-button","","matTreeNodeToggle",""],[1,"mat-icon-rtl-mirror"],["mode","indeterminate","class","example-tree-progress-bar",4,"ngIf"],["mode","indeterminate",1,"example-tree-progress-bar"],["matTreeNodeToggle","","matTreeNodePadding",""],[1,"checklist-leaf-node",3,"checked","change"],["matInput","","placeholder","New item..."],["itemValue",""],["mat-button","",3,"click"],[3,"checked","indeterminate","change"],["mat-icon-button","",3,"click"],["mat-icon-button","","matTreeNodeToggle","",3,"click"]],template:function(e,t){1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"span"),c.Nc(9," The "),c.Wb(10,"code"),c.Nc(11,"mat-tree"),c.Vb(),c.Nc(12," provides a Material Design styled tree that can be used to display hierarchy data. "),c.Vb(),c.Rb(13,"div",6),c.Wb(14,"div"),c.Wb(15,"mat-tree",7),c.Lc(16,Wa,3,1,"mat-tree-node",8),c.Lc(17,Na,6,4,"mat-tree-node",9),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(18,"app-code-preview",4),c.Wb(19,"div",5),c.Wb(20,"div"),c.Wb(21,"mat-tree",7),c.Lc(22,ka,3,2,"mat-tree-node",10),c.Lc(23,Ma,5,4,"mat-tree-node",9),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(24,"div",3),c.Wb(25,"app-code-preview",4),c.Wb(26,"div",5),c.Wb(27,"div"),c.Wb(28,"mat-tree",7),c.Lc(29,Sa,4,2,"mat-tree-node",10),c.Lc(30,Ta,7,0,"mat-tree-node",9),c.Lc(31,Ia,9,5,"mat-tree-node",9),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(32,"app-code-preview",4),c.Wb(33,"div",5),c.Wb(34,"div"),c.Wb(35,"mat-tree",7),c.Lc(36,Da,3,1,"mat-tree-node",8),c.Lc(37,Fa,5,3,"mat-tree-node",9),c.Lc(38,Ea,3,0,"mat-tree-node",11),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e&&(c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleTreeWithDynamicData),c.Cb(9),c.qc("dataSource",t.dataSource)("treeControl",t.treeControl),c.Cb(2),c.qc("matTreeNodeDefWhen",t.hasChild),c.Cb(1),c.qc("viewItem",t.exampleTreeWithFlatNodes),c.Cb(3),c.qc("dataSource",t.dataSource2)("treeControl",t.treeControl2),c.Cb(2),c.qc("matTreeNodeDefWhen",t.hasChild2),c.Cb(2),c.qc("viewItem",t.exampleTreeWithCheckboxes),c.Cb(3),c.qc("dataSource",t.dataSource3)("treeControl",t.treeControl3),c.Cb(2),c.qc("matTreeNodeDefWhen",t.hasNoContent3),c.Cb(1),c.qc("matTreeNodeDefWhen",t.hasChild3),c.Cb(1),c.qc("viewItem",t.exampleTreeWithPartiallyLoadedData),c.Cb(3),c.qc("dataSource",t.dataSource4)("treeControl",t.treeControl4),c.Cb(2),c.qc("matTreeNodeDefWhen",t.hasChild4),c.Cb(1),c.qc("matTreeNodeDefWhen",t.isLoadMore4))},directives:[h.a,g.a,va.a,va.f,va.e,va.g,X.b,va.h,K.a,s.n,Va.a,P.a,f.c,v.b],styles:[".example-tree-progress-bar[_ngcontent-%COMP%] {\n        margin-left: 30px;\n      }"]}),Aa),lo={beforeCodeTitle:"Basic buttons",htmlCode:'\n<div class="button-row">\n  <button mat-button>Basic</button>\n  <button mat-button color="primary">Primary</button>\n  <button mat-button color="accent">Accent</button>\n  <button mat-button color="warn">Warn</button>\n  <button mat-button disabled>Disabled</button>\n  <a mat-button routerLink=".">Link</a>\n</div>',tsCode:"\nimport {Component} from '@angular/core';\n\n\n/**\n* @title Button varieties\n*/\n@Component({\n  selector: 'button-types-example',\n  templateUrl: 'button-types-example.html',\n  styleUrls: ['button-types-example.css'],\n})\nexport class ButtonTypesExample {}",cssCode:"\n.example-button-row {\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n}",viewCode:"",isCodeVisible:!1},ro={beforeCodeTitle:"Raised buttons",htmlCode:'\n<div class="button-row">\n  <button mat-raised-button>Basic</button>\n  <button mat-raised-button color="primary">Primary</button>\n  <button mat-raised-button color="accent">Accent</button>\n  <button mat-raised-button color="warn">Warn</button>\n  <button mat-raised-button disabled>Disabled</button>\n  <a mat-raised-button routerLink=".">Link</a>\n</div>',tsCode:"\nimport {Component} from '@angular/core';\n\n\n/**\n* @title Button varieties\n*/\n@Component({\n  selector: 'button-types-example',\n  templateUrl: 'button-types-example.html',\n  styleUrls: ['button-types-example.css'],\n})\nexport class ButtonTypesExample {}",cssCode:"\n.example-button-row {\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n}",viewCode:"",isCodeVisible:!1},so={beforeCodeTitle:"Icon buttons",htmlCode:'\n<div class="button-row">\n  <button mat-icon-button>\n    <mat-icon aria-label="Example icon-button with a heart icon">favorite</mat-icon>\n  </button>\n  <button mat-icon-button color="primary">\n    <mat-icon aria-label="Example icon-button with a heart icon">favorite</mat-icon>\n  </button>\n  <button mat-icon-button color="accent">\n    <mat-icon aria-label="Example icon-button with a heart icon">favorite</mat-icon>\n  </button>\n  <button mat-icon-button color="warn">\n    <mat-icon aria-label="Example icon-button with a heart icon">favorite</mat-icon>\n  </button>\n  <button mat-icon-button disabled>\n    <mat-icon aria-label="Example icon-button with a heart icon">favorite</mat-icon>\n  </button>\n  </div>',tsCode:"\nimport {Component} from '@angular/core';\n\n\n/**\n* @title Button varieties\n*/\n@Component({\n  selector: 'button-types-example',\n  templateUrl: 'button-types-example.html',\n  styleUrls: ['button-types-example.css'],\n})\nexport class ButtonTypesExample {}\n\n",cssCode:"\n.example-button-row {\n  display: flex;\n  align-items: center;\n justify-content: space-around;\n}",viewCode:"",isCodeVisible:!1},mo={beforeCodeTitle:"Fab buttons",htmlCode:'\n<div class="button-row">\n  <button mat-fab>Basic</button>\n  <button mat-fab color="primary">Primary</button>\n  <button mat-fab color="accent">Accent</button>\n  <button mat-fab color="warn">Warn</button>\n  <button mat-fab disabled>Disabled</button>\n  <button mat-fab>\n    <mat-icon aria-label="Example icon-button with a heart icon">favorite</mat-icon>\n  </button>\n  <a mat-fab routerLink=".">Link</a>\n</div>',tsCode:"\nimport {Component} from '@angular/core';\n\n\n/**\n* @title Button varieties\n*/\n@Component({\n  selector: 'button-types-example',\n  templateUrl: 'button-types-example.html',\n  styleUrls: ['button-types-example.css'],\n})\nexport class ButtonTypesExample {}",cssCode:"\n.example-button-row {\n  display: flex;\n  align-items: center;\n justify-content: space-around;\n}",viewCode:"",isCodeVisible:!1},co={beforeCodeTitle:"Mini Fab buttons",htmlCode:'\n<div class="button-row">\n  <button mat-mini-fab>Basic</button>\n  <button mat-mini-fab color="primary">Primary</button>\n  <button mat-mini-fab color="accent">Accent</button>\n  <button mat-mini-fab color="warn">Warn</button>\n  <button mat-mini-fab disabled>Disabled</button>\n  <button mat-mini-fab>\n    <mat-icon aria-label="Example icon-button with a heart icon">favorite</mat-icon>\n  </button>\n  <a mat-mini-fab routerLink=".">Link</a>\n</div>',tsCode:"\nimport {Component} from '@angular/core';\n\n\n/**\n* @title Button varieties\n*/\n@Component({\n  selector: 'button-types-example',\n  templateUrl: 'button-types-example.html',\n  styleUrls: ['button-types-example.css'],\n})\nexport class ButtonTypesExample {}",cssCode:"\n.example-button-row {\n  display: flex;\n  align-items: center;\n justify-content: space-around;\n}",viewCode:"",isCodeVisible:!1},po=((Pa=function(){function e(){o(this,e)}return a(e,[{key:"ngOnInit",value:function(){this.exampleBasic=lo,this.exampleRaised=ro,this.exampleIcon=so,this.exmapleFab=mo,this.exampleMiniFav=co}}]),e}()).\u0275fac=function(e){return new(e||Pa)},Pa.\u0275cmp=c.Kb({type:Pa,selectors:[["app-material-button"]],decls:145,vars:6,consts:[[3,"svg"],["href","https://material.angular.io/components/button/overview","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],[1,"example-container"],[1,"button-row"],["mat-button",""],["mat-button","","color","primary"],["mat-button","","color","accent"],["mat-button","","color","warn"],["mat-button","","disabled",""],["mat-button","","routerLink","."],["mat-raised-button",""],["mat-raised-button","","color","primary"],["mat-raised-button","","color","accent"],["mat-raised-button","","color","warn"],["mat-raised-button","","disabled",""],["mat-raised-button","","routerLink","."],["mat-icon-button",""],["aria-label","Example icon-button with a heart icon"],["mat-icon-button","","color","primary"],["mat-icon-button","","color","accent"],["mat-icon-button","","color","warn"],["mat-icon-button","","disabled",""],["mat-fab",""],["mat-fab","","color","primary"],["mat-fab","","color","accent"],["mat-fab","","color","warn"],["mat-fab","","disabled",""],["mat-fab","","routerLink","."],["mat-mini-fab",""],["mat-mini-fab","","color","primary"],["mat-mini-fab","","color","accent"],["mat-mini-fab","","color","warn"],["mat-mini-fab","","disabled",""],["mat-mini-fab","","routerLink","."]],template:function(e,t){1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"p"),c.Nc(9," Angular Material buttons are native "),c.Wb(10,"code"),c.Nc(11,"<button>"),c.Vb(),c.Nc(12," or "),c.Wb(13,"code"),c.Nc(14,"<a>"),c.Vb(),c.Nc(15," elements enhanced with Material Design styling and ink ripples. "),c.Vb(),c.Wb(16,"p"),c.Nc(17," Native "),c.Wb(18,"code"),c.Nc(19,"<button>"),c.Vb(),c.Nc(20," and "),c.Wb(21,"code"),c.Nc(22,"<a>"),c.Vb(),c.Nc(23," elements are always used in order to provide the most straightforward and accessible experience for users. A "),c.Wb(24,"code"),c.Nc(25,"<button>"),c.Vb(),c.Nc(26," element should be used whenever some action is performed. An "),c.Wb(27,"code"),c.Nc(28,"<a>"),c.Vb(),c.Nc(29," element should be used whenever the user will navigate to another view. "),c.Vb(),c.Rb(30,"div",6),c.Wb(31,"div",7),c.Wb(32,"div",8),c.Wb(33,"button",9),c.Nc(34,"Basic"),c.Vb(),c.Nc(35,"\xa0 "),c.Wb(36,"button",10),c.Nc(37,"Primary"),c.Vb(),c.Nc(38,"\xa0 "),c.Wb(39,"button",11),c.Nc(40,"Accent"),c.Vb(),c.Nc(41,"\xa0 "),c.Wb(42,"button",12),c.Nc(43,"Warn"),c.Vb(),c.Nc(44,"\xa0 "),c.Wb(45,"button",13),c.Nc(46,"Disabled"),c.Vb(),c.Nc(47,"\xa0 "),c.Wb(48,"a",14),c.Nc(49,"Link"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(50,"app-code-preview",4),c.Wb(51,"div",5),c.Wb(52,"div",7),c.Wb(53,"div",8),c.Wb(54,"button",15),c.Nc(55,"Basic"),c.Vb(),c.Nc(56,"\xa0 "),c.Wb(57,"button",16),c.Nc(58,"Primary"),c.Vb(),c.Nc(59,"\xa0 "),c.Wb(60,"button",17),c.Nc(61,"Accent"),c.Vb(),c.Nc(62,"\xa0 "),c.Wb(63,"button",18),c.Nc(64,"Warn"),c.Vb(),c.Nc(65,"\xa0 "),c.Wb(66,"button",19),c.Nc(67,"Disabled"),c.Vb(),c.Nc(68,"\xa0 "),c.Wb(69,"a",20),c.Nc(70,"Link"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(71,"app-code-preview",4),c.Wb(72,"div",5),c.Wb(73,"div",7),c.Wb(74,"div",8),c.Wb(75,"button",21),c.Wb(76,"mat-icon",22),c.Nc(77,"favorite"),c.Vb(),c.Vb(),c.Nc(78,"\xa0 "),c.Wb(79,"button",23),c.Wb(80,"mat-icon",22),c.Nc(81,"favorite"),c.Vb(),c.Vb(),c.Nc(82,"\xa0 "),c.Wb(83,"button",24),c.Wb(84,"mat-icon",22),c.Nc(85,"favorite"),c.Vb(),c.Vb(),c.Nc(86,"\xa0 "),c.Wb(87,"button",25),c.Wb(88,"mat-icon",22),c.Nc(89,"favorite"),c.Vb(),c.Vb(),c.Nc(90,"\xa0 "),c.Wb(91,"button",26),c.Wb(92,"mat-icon",22),c.Nc(93,"favorite"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(94,"div",3),c.Wb(95,"app-code-preview",4),c.Wb(96,"div",5),c.Wb(97,"div",7),c.Wb(98,"div",8),c.Wb(99,"button",27),c.Nc(100,"Basic"),c.Vb(),c.Nc(101,"\xa0 "),c.Wb(102,"button",28),c.Nc(103,"Primary"),c.Vb(),c.Nc(104,"\xa0 "),c.Wb(105,"button",29),c.Nc(106,"Accent"),c.Vb(),c.Nc(107,"\xa0 "),c.Wb(108,"button",30),c.Nc(109,"Warn"),c.Vb(),c.Nc(110,"\xa0 "),c.Wb(111,"button",31),c.Nc(112,"Disabled"),c.Vb(),c.Nc(113,"\xa0 "),c.Wb(114,"button",27),c.Wb(115,"mat-icon",22),c.Nc(116,"favorite"),c.Vb(),c.Vb(),c.Nc(117,"\xa0 "),c.Wb(118,"a",32),c.Nc(119,"Link"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(120,"app-code-preview",4),c.Wb(121,"div",5),c.Wb(122,"div",7),c.Wb(123,"div",8),c.Wb(124,"button",33),c.Nc(125,"Basic"),c.Vb(),c.Nc(126,"\xa0 "),c.Wb(127,"button",34),c.Nc(128,"Primary"),c.Vb(),c.Nc(129,"\xa0 "),c.Wb(130,"button",35),c.Nc(131,"Accent"),c.Vb(),c.Nc(132,"\xa0 "),c.Wb(133,"button",36),c.Nc(134,"Warn"),c.Vb(),c.Nc(135,"\xa0 "),c.Wb(136,"button",37),c.Nc(137,"Disabled"),c.Vb(),c.Nc(138,"\xa0 "),c.Wb(139,"button",33),c.Wb(140,"mat-icon",22),c.Nc(141,"favorite"),c.Vb(),c.Vb(),c.Nc(142,"\xa0 "),c.Wb(143,"a",38),c.Nc(144,"Link"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e&&(c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleBasic),c.Cb(44),c.qc("viewItem",t.exampleRaised),c.Cb(21),c.qc("viewItem",t.exampleIcon),c.Cb(24),c.qc("viewItem",t.exmapleFab),c.Cb(25),c.qc("viewItem",t.exampleMiniFav))},directives:[h.a,g.a,X.b,X.a,m.k,K.a],styles:[".example-button-row[_ngcontent-%COMP%] {\n        display: flex;\n        align-items: center;\n        justify-content: space-around;\n      }"],changeDetection:0}),Pa),bo=i("jaxi"),uo={beforeCodeTitle:"Basic button-toggles",htmlCode:"<mat-button-toggle>Toggle me!</mat-button-toggle>",tsCode:"\nimport {Component} from '@angular/core';\n\n\n/**\n* @title Basic button-toggles\n*/\n@Component({\n  selector: 'button-toggle-overview-example',\n  templateUrl: 'button-toggle-overview-example.html',\n  styleUrls: ['button-toggle-overview-example.css'],\n})\nexport class ButtonToggleOverviewExample {}",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},ho={beforeCodeTitle:"Vertical button toggle",htmlCode:'<mat-button-toggle [vertical]="true">Toggle me!</mat-button-toggle>',tsCode:"\nimport {Component} from '@angular/core';\n\n\n/**\n* @title  Vertical button-toggles\n*/\n@Component({\n  selector: 'button-toggle-vertical-example',\n  templateUrl: 'button-toggle-vertical-example.html',\n  styleUrls: ['button-toggle-vertical-example.css'],\n})\nexport class ButtonToggleVerticalExample {}",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},go={beforeCodeTitle:"Exclusive selection",htmlCode:'\n<mat-button-toggle-group #group="matButtonToggleGroup">\n  <mat-button-toggle value="left">\n    <mat-icon>format_align_left</mat-icon>\n  </mat-button-toggle>\n  <mat-button-toggle value="center">\n    <mat-icon>format_align_center</mat-icon>\n  </mat-button-toggle>\n  <mat-button-toggle value="right">\n    <mat-icon>format_align_right</mat-icon>\n  </mat-button-toggle>\n  <mat-button-toggle value="justify" disabled>\n    <mat-icon>format_align_justify</mat-icon>\n  </mat-button-toggle>\n</mat-button-toggle-group>\n<div class="example-selected-value">Selected value: {{group.value}}</div>',tsCode:"\nimport {Component} from '@angular/core';\n\n\n/**\n* @title Exclusive selection\n*/\n@Component({\n  selector: 'button-toggle-exclusive-example',\n  templateUrl: 'button-toggle-exclusive-example.html',\n  styleUrls: ['button-toggle-exclusive-example.css'],\n})\nexport class ButtonToggleExclusiveExample {}",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},fo=((_a=function(){function e(){o(this,e)}return a(e,[{key:"ngOnInit",value:function(){this.exampleBasic=uo,this.exampleVertical=ho,this.exampleList=go}}]),e}()).\u0275fac=function(e){return new(e||_a)},_a.\u0275cmp=c.Kb({type:_a,selectors:[["app-material-button-toggle"]],decls:52,vars:5,consts:[[3,"svg"],["href","https://material.angular.io/components/button-toggle/overview","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],["vertical","true"],["group","matButtonToggleGroup"],["value","left"],["value","center"],["value","right"],["value","justify","disabled",""],[1,"example-selected-value"]],template:function(e,t){if(1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"span"),c.Wb(9,"code"),c.Nc(10,"<mat-button-toggle>"),c.Vb(),c.Nc(11," are on/off toggles with the appearance of a button. These toggles can be configured to behave as either radio-buttons or checkboxes. While they can be standalone, they are typically part of a "),c.Wb(12,"mark"),c.Nc(13,"mat-button-toggle-group"),c.Vb(),c.Nc(14,". "),c.Vb(),c.Rb(15,"div",6),c.Wb(16,"div"),c.Wb(17,"mat-button-toggle"),c.Nc(18,"Toggle me!"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(19,"app-code-preview",4),c.Wb(20,"div",5),c.Wb(21,"span"),c.Nc(22," The button-toggles can be rendered in a vertical orientation by adding the "),c.Wb(23,"mark"),c.Nc(24,"vertical"),c.Vb(),c.Nc(25," attribute. "),c.Vb(),c.Rb(26,"div",6),c.Wb(27,"div"),c.Wb(28,"mat-button-toggle",7),c.Nc(29,"Toggle me!"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(30,"div",3),c.Wb(31,"app-code-preview",4),c.Wb(32,"div",5),c.Wb(33,"span"),c.Nc(34," Dividers can be added to lists as a means of separating content into distinct sections. Inset dividers can also be added to provide the appearance of distinct elements in a list without cluttering content like avatar images or icons. Make sure to avoid adding an inset divider to the last element in a list, because it will overlap with the section divider. "),c.Vb(),c.Wb(35,"div"),c.Wb(36,"mat-button-toggle-group",null,8),c.Wb(38,"mat-button-toggle",9),c.Wb(39,"mat-icon"),c.Nc(40,"format_align_left"),c.Vb(),c.Vb(),c.Wb(41,"mat-button-toggle",10),c.Wb(42,"mat-icon"),c.Nc(43,"format_align_center"),c.Vb(),c.Vb(),c.Wb(44,"mat-button-toggle",11),c.Wb(45,"mat-icon"),c.Nc(46,"format_align_right"),c.Vb(),c.Vb(),c.Wb(47,"mat-button-toggle",12),c.Wb(48,"mat-icon"),c.Nc(49,"format_align_justify"),c.Vb(),c.Vb(),c.Vb(),c.Wb(50,"div",13),c.Nc(51),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e){var n=c.yc(37);c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleBasic),c.Cb(13),c.qc("viewItem",t.exampleVertical),c.Cb(12),c.qc("viewItem",t.exampleList),c.Cb(20),c.Pc(" Selected value: ",n.value," ")}},directives:[h.a,g.a,bo.a,bo.b,K.a],styles:[".example-selected-value[_ngcontent-%COMP%] {\n        margin: 15px 0;\n      }"],changeDetection:0}),_a),vo=i("FtGj"),Co=i("A5z7");function xo(e,t){1&e&&(c.Wb(0,"mat-icon",17),c.Nc(1,"cancel"),c.Vb())}function wo(e,t){if(1&e){var n=c.Xb();c.Wb(0,"mat-chip",15),c.gc("removed",function(){c.Bc(n);var e=t.$implicit;return c.kc().remove(e)}),c.Nc(1),c.Lc(2,xo,2,0,"mat-icon",16),c.Vb()}if(2&e){var a=t.$implicit,o=c.kc();c.qc("selectable",o.selectable)("removable",o.removable),c.Cb(1),c.Pc(" ",a.name," "),c.Cb(1),c.qc("ngIf",o.removable)}}function Vo(e,t){if(1&e&&(c.Wb(0,"mat-chip",18),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.qc("color",n.color),c.Cb(1),c.Pc(" ",n.name," ")}}var Wo,yo,No={beforeCodeTitle:"Basic chips",htmlCode:'\n<mat-chip-list>\n  <mat-chip>One fish</mat-chip>\n  <mat-chip>Two fish</mat-chip>\n  <mat-chip color="primary" selected="true">Primary fish</mat-chip>\n  <mat-chip color="accent" selected="true">Accent fish</mat-chip>\n</mat-chip-list>',tsCode:"\nimport {Component} from '@angular/core';\n\n\n/**\n* @title Basic chips\n*/\n@Component({\n  selector: 'chips-overview-example',\n  templateUrl: 'chips-overview-example.html',\n  styleUrls: ['chips-overview-example.css'],\n})\nexport class ChipsOverviewExample {}",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},ko={beforeCodeTitle:"Chips with input",htmlCode:'\n<mat-form-field class="demo-chip-list">\n  <mat-chip-list #chipList>\n    <mat-chip *ngFor="let fruit of fruits" [selectable]="selectable"\n      [removable]="removable" (remove)="remove(fruit)">\n      {{fruit.name}}\n      <mat-icon matChipRemove *ngIf="removable">cancel</mat-icon>\n    </mat-chip>\n    <input placeholder="New fruit..."\n      [matChipInputFor]="chipList"\n      [matChipInputSeparatorKeyCodes]="separatorKeysCodes"\n      [matChipInputAddOnBlur]="addOnBlur"\n      (matChipInputTokenEnd)="add($event)" />\n  </mat-chip-list>\n</mat-form-field>',tsCode:"\nimport {Component} from '@angular/core';\nimport {MatChipInputEvent} from '@angular/material';\nimport {ENTER, COMMA} from '@angular/cdk/keycodes';\n\n\n/**\n* @title Chips with input\n*/\n@Component({\n  selector: 'chips-input-example',\n  templateUrl: 'chips-input-example.html',\n  styleUrls: ['chips-input-example.css']\n})\nexport class ChipsInputExample {\n  visible: boolean = true;\n  selectable: boolean = true;\n  removable: boolean = true;\n  addOnBlur: boolean = true;\n\n\n  // Enter, comma\n  separatorKeysCodes = [ENTER, COMMA];\n\n\n  fruits = [\n    { name: 'Lemon' },\n    { name: 'Lime' },\n    { name: 'Apple' },\n  ];\n\n\n  add(event: MatChipInputEvent): void {\n    let input = event.input;\n    let value = event.value;\n\n\n    // Add our fruit\n    if ((value || '').trim()) {\n      this.fruits.push({ name: value.trim() });\n    }\n\n\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n  }\n\n\n  remove(fruit: any): void {\n    let index = this.fruits.indexOf(fruit);\n\n    if (index >= 0) {\n      this.fruits.splice(index, 1);\n    }\n  }\n}\n",cssCode:"\n.demo-chip-list {\n  width: 100%;\n}",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},Mo={beforeCodeTitle:"Stacked chips",htmlCode:'\n<<mat-chip-list class="mat-chip-list-stacked">\n  <mat-chip *ngFor="let chip of availableColors" selected="true" [color]="chip.color">\n    {{chip.name}}\n  </mat-chip>\n</mat-chip-list>',tsCode:"\nimport {Component} from '@angular/core';\n\n\n/**\n* @title Stacked chips\n*/\n@Component({\n  selector: 'chips-stacked-example',\n  templateUrl: 'chips-stacked-example.html',\n  styleUrls: ['chips-stacked-example.css'],\n})\nexport class ChipsStackedExample {\n  color: string;\n\n\n  availableColors = [\n    { name: 'none', color: '' },\n    { name: 'Primary', color: 'primary' },\n    { name: 'Accent', color: 'accent' },\n    { name: 'Warn', color: 'warn' }\n  ];\n}\n",cssCode:"\n\t\tmat-chip {\n\t\t\tmax-width: 200px;\n\t\t}",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},So=((Wo=function(){function e(){o(this,e),this.visible=!0,this.selectable=!0,this.removable=!0,this.addOnBlur=!0,this.separatorKeysCodes=[vo.g,vo.c],this.fruits=[{name:"Lemon"},{name:"Lime"},{name:"Apple"}],this.availableColors=[{name:"none",color:""},{name:"Primary",color:"primary"},{name:"Accent",color:"accent"},{name:"Warn",color:"warn"}]}return a(e,[{key:"ngOnInit",value:function(){this.exampleBasic=No,this.exampleInput=ko,this.exampleStacked=Mo}},{key:"add",value:function(e){var t=e.input,n=e.value;(n||"").trim()&&this.fruits.push({name:n.trim()}),t&&(t.value="")}},{key:"remove",value:function(e){var t=this.fruits.indexOf(e);t>=0&&this.fruits.splice(t,1)}}]),e}()).\u0275fac=function(e){return new(e||Wo)},Wo.\u0275cmp=c.Kb({type:Wo,selectors:[["app-material-chips"]],decls:54,vars:9,consts:[[3,"svg"],["href","https://material.angular.io/components/chips/overview","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],["color","primary","selected","true"],["color","accent","selected","true"],[1,"demo-chip-list"],["chipList",""],[3,"selectable","removable","removed",4,"ngFor","ngForOf"],["placeholder","New fruit...",3,"matChipInputFor","matChipInputSeparatorKeyCodes","matChipInputAddOnBlur","matChipInputTokenEnd"],[1,"mat-chip-list-stacked"],["selected","true",3,"color",4,"ngFor","ngForOf"],[3,"selectable","removable","removed"],["matChipRemove","",4,"ngIf"],["matChipRemove",""],["selected","true",3,"color"]],template:function(e,t){if(1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"span"),c.Wb(9,"code"),c.Nc(10,"<mat-chip-list>"),c.Vb(),c.Nc(11," displays a list of values as individual, keyboard accessible, chips. "),c.Vb(),c.Rb(12,"div",6),c.Wb(13,"div"),c.Wb(14,"mat-chip-list"),c.Wb(15,"mat-chip"),c.Nc(16,"One fish"),c.Vb(),c.Wb(17,"mat-chip"),c.Nc(18,"Two fish"),c.Vb(),c.Wb(19,"mat-chip",7),c.Nc(20,"Primary fish"),c.Vb(),c.Wb(21,"mat-chip",8),c.Nc(22,"Accent fish"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(23,"app-code-preview",4),c.Wb(24,"div",5),c.Wb(25,"p"),c.Nc(26," The "),c.Wb(27,"mark"),c.Nc(28,"MatChipInput"),c.Vb(),c.Nc(29," directive can be used together with a chip-list to streamline the interaction between the two components. This directive adds chip-specific behaviors to the input element within "),c.Wb(30,"code"),c.Nc(31,"<mat-form-field>"),c.Vb(),c.Nc(32," for adding and removing chips. The "),c.Wb(33,"code"),c.Nc(34,"<input>"),c.Vb(),c.Nc(35," with "),c.Wb(36,"mark"),c.Nc(37,"MatChipInput"),c.Vb(),c.Nc(38," can be placed inside or outside the chip-list element. "),c.Vb(),c.Wb(39,"p"),c.Nc(40," An example of chip input placed inside the chip-list element. "),c.Vb(),c.Rb(41,"div",6),c.Wb(42,"div"),c.Wb(43,"mat-form-field",9),c.Wb(44,"mat-chip-list",null,10),c.Lc(46,wo,3,4,"mat-chip",11),c.Wb(47,"input",12),c.gc("matChipInputTokenEnd",function(e){return t.add(e)}),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(48,"div",3),c.Wb(49,"app-code-preview",4),c.Wb(50,"div",5),c.Wb(51,"div"),c.Wb(52,"mat-chip-list",13),c.Lc(53,Vo,2,2,"mat-chip",14),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e){var n=c.yc(45);c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleBasic),c.Cb(17),c.qc("viewItem",t.exampleInput),c.Cb(23),c.qc("ngForOf",t.fruits),c.Cb(1),c.qc("matChipInputFor",n)("matChipInputSeparatorKeyCodes",t.separatorKeysCodes)("matChipInputAddOnBlur",t.addOnBlur),c.Cb(2),c.qc("viewItem",t.exampleStacked),c.Cb(4),c.qc("ngForOf",t.availableColors)}},directives:[h.a,g.a,Co.c,Co.a,f.c,s.m,Co.b,s.n,K.a,Co.d],styles:[".demo-chip-list[_ngcontent-%COMP%] {\n        width: 100%;\n      }\n      mat-chip[_ngcontent-%COMP%] {\n        max-width: 200px;\n      }"],changeDetection:0}),Wo),To=i("jhN1"),Io={beforeCodeTitle:"Basic icons",htmlCode:"\n<mat-icon>home</mat-icon>\n<mat-icon>queue music</mat-icon>\n<mat-icon>call split</mat-icon>\n<mat-icon>event note</mat-icon>",tsCode:"\nimport {Component} from '@angular/core';\n\n\n/**\n* @title Basic icons\n*/\n@Component({\n  selector: 'icon-overview-example',\n  templateUrl: 'icon-overview-example.html',\n  styleUrls: ['icon-overview-example.css']\n})\nexport class IconOverviewExample {}",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},Do={beforeCodeTitle:"SVG icons",htmlCode:'<mat-icon svgIcon="thumbs-up"></mat-icon>',tsCode:"\nimport {Component} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {MatIconRegistry} from '@angular/material';\n\n\n/**\n* @title SVG icons\n*/\n@Component({\n  selector: 'icon-svg-example',\n  templateUrl: 'icon-svg-example.html',\n  styleUrls: ['icon-svg-example.css'],\n})\nexport class IconSvgExample {\n  constructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\n  iconRegistry.addSvgIcon(\n    'thumbs-up',\n     sanitizer.bypassSecurityTrustResourceUrl('assets/img/examples/thumbup-icon.svg'));\n  }\n}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},Fo=((yo=function(){function e(t,n){o(this,e),t.addSvgIcon("boy",n.bypassSecurityTrustResourceUrl("./assets/media/svg/avatars/001-boy.svg"))}return a(e,[{key:"ngOnInit",value:function(){this.exampleBasic=Io,this.exampleSVG=Do}}]),e}()).\u0275fac=function(e){return new(e||yo)(c.Qb(K.c),c.Qb(To.b))},yo.\u0275cmp=c.Kb({type:yo,selectors:[["app-material-icon"]],decls:79,vars:3,consts:[[3,"svg"],["href","https://material.angular.io/components/icon/overview","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],["href","https://en.wikipedia.org/wiki/Typographic_ligature","target","_blank"],["href","http://google.github.io/material-design-icons/#icon-font-for-the-web","target","_blank"],[1,"separator","separator-dashed","my-6"],["href","https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#currentColor_keyword","target","_blank"],["svgIcon","boy"]],template:function(e,t){1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"p"),c.Wb(9,"code"),c.Nc(10,"<mat-icon>"),c.Vb(),c.Nc(11," makes it easier to use vector-based icons in your app. This directive supports both icon fonts and SVG icons, but not bitmap-based formats (png, jpg, etc.). "),c.Vb(),c.Wb(12,"p"),c.Wb(13,"b"),c.Nc(14,"Registering icons:"),c.Vb(),c.Wb(15,"mark"),c.Nc(16,"MatIconRegistry"),c.Vb(),c.Nc(17," is an injectable service that allows you to associate icon names with SVG URLs and define aliases for CSS font classes. Its methods are discussed below and listed in the API summary. "),c.Vb(),c.Wb(18,"p"),c.Wb(19,"b"),c.Nc(20," Font icons with ligatures:"),c.Vb(),c.Nc(21," Some fonts are designed to show icons by using "),c.Wb(22,"a",6),c.Nc(23,"ligatures"),c.Vb(),c.Nc(24,', for example by rendering the text "home" as a home image. To use a ligature icon, put its text in the content of the '),c.Wb(25,"mark"),c.Nc(26,"mat-icon"),c.Vb(),c.Nc(27," component. "),c.Vb(),c.Wb(28,"p"),c.Nc(29," By default, "),c.Wb(30,"code"),c.Nc(31,"<mat-icon>"),c.Vb(),c.Nc(32," expects the "),c.Wb(33,"a",7),c.Nc(34,"Material icons font"),c.Vb(),c.Nc(35,". (You will still need to include the HTML to load the font and its CSS, as described in the link). You can specify a different font by setting the "),c.Wb(36,"mark"),c.Nc(37,"fontSet"),c.Vb(),c.Nc(38," input to either the CSS class to apply to use the desired font, or to an alias previously registered with "),c.Wb(39,"mark"),c.Nc(40,"MatIconRegistry.registerFontClassAlias"),c.Vb(),c.Nc(41,". "),c.Vb(),c.Rb(42,"div",8),c.Wb(43,"div"),c.Wb(44,"mat-icon"),c.Nc(45,"home"),c.Vb(),c.Wb(46,"mat-icon"),c.Nc(47,"queue music"),c.Vb(),c.Wb(48,"mat-icon"),c.Nc(49,"call split"),c.Vb(),c.Wb(50,"mat-icon"),c.Nc(51,"event note"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(52,"div",3),c.Wb(53,"app-code-preview",4),c.Wb(54,"div",5),c.Wb(55,"p"),c.Wb(56,"code"),c.Nc(57,"<mat-icon>"),c.Vb(),c.Nc(58," When an "),c.Wb(59,"mark"),c.Nc(60,"mat-icon"),c.Vb(),c.Nc(61," component displays an SVG icon, it does so by directly inlining the SVG content into the page as a child of the component. (Rather than using an tag or a div background image). This makes it easier to apply CSS styles to SVG icons. For example, the default color of the SVG content is the CSS "),c.Wb(62,"a",9),c.Nc(63,"currentColor"),c.Vb(),c.Nc(64,' value. This makes SVG icons by default have the same color as surrounding text, and allows you to change the color by setting the "color" style on the '),c.Wb(65,"mark"),c.Nc(66,"mat-icon"),c.Vb(),c.Nc(67," element. "),c.Vb(),c.Wb(68,"p"),c.Nc(69," In order to prevent XSS vulnerabilities, any SVG URLs passed to the "),c.Wb(70,"mark"),c.Nc(71,"MatIconRegistry"),c.Vb(),c.Nc(72," must be marked as trusted resource URLs by using Angular's "),c.Wb(73,"mark"),c.Nc(74,"DomSanitizer"),c.Vb(),c.Nc(75," service. "),c.Vb(),c.Rb(76,"div",8),c.Wb(77,"div"),c.Rb(78,"mat-icon",10),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e&&(c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleBasic),c.Cb(47),c.qc("viewItem",t.exampleSVG))},directives:[h.a,g.a,K.a],encapsulation:2,changeDetection:0}),yo);function Eo(e,t){if(1&e){var n=c.Xb();c.Wb(0,"section",13),c.Wb(1,"label",14),c.Nc(2,"Progress:"),c.Vb(),c.Wb(3,"mat-slider",25),c.gc("ngModelChange",function(e){return c.Bc(n),c.kc().value=e}),c.Vb(),c.Vb()}if(2&e){var a=c.kc();c.Cb(3),c.qc("ngModel",a.value)}}function Oo(e,t){if(1&e){var n=c.Xb();c.Wb(0,"section",13),c.Wb(1,"label",14),c.Nc(2,"Buffer:"),c.Vb(),c.Wb(3,"mat-slider",25),c.gc("ngModelChange",function(e){return c.Bc(n),c.kc().bufferValue=e}),c.Vb(),c.Vb()}if(2&e){var a=c.kc();c.Cb(3),c.qc("ngModel",a.bufferValue)}}var qo,Lo={beforeCodeTitle:"Determinate progress-bar",htmlCode:'<mat-progress-bar mode="determinate" value="40"></mat-progress-bar>',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Determinate progress-bar\n*/\n@Component({\n  selector: 'progress-bar-determinate-example',\n  templateUrl: 'progress-bar-determinate-example.html',\n  styleUrls: ['progress-bar-determinate-example.css'],\n})\nexport class ProgressBarDeterminateExample {}\n\n",cssCode:"",viewCode:"",isCodeVisible:!1},Ao={beforeCodeTitle:"Indeterminate progress-bar",htmlCode:'<mat-progress-bar mode="indeterminate"></mat-progress-bar>',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Indeterminate progress-bar\n*/\n@Component({\n  selector: 'progress-bar-indeterminate-example',\n  templateUrl: 'progress-bar-indeterminate-example.html',\n  styleUrls: ['progress-bar-indeterminate-example.css'],\n})\nexport class ProgressBarIndeterminateExample {}",cssCode:"",viewCode:"",isCodeVisible:!1},Ro={beforeCodeTitle:"Buffer progress-bar",htmlCode:'<mat-progress-bar mode="buffer"></mat-progress-bar>',tsCode:"\nimport {Component} from '@angular/core';\n\n\n/**\n* @title Buffer progress-bar\n*/\n@Component({\n  selector: 'progress-bar-buffer-example',\n  templateUrl: 'progress-bar-buffer-example.html',\n  styleUrls: ['progress-bar-buffer-example.css'],\n})\nexport class ProgressBarBufferExample {}",cssCode:"",viewCode:"",isCodeVisible:!1},Po={beforeCodeTitle:"Query progress-bar",htmlCode:'<mat-progress-bar mode="query"></mat-progress-bar>',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Query progress-bar\n*/\n@Component({\n  selector: 'progress-bar-query-example',\n  templateUrl: 'progress-bar-query-example.html',\n  styleUrls: ['progress-bar-query-example.css'],\n})\nexport class ProgressBarQueryExample {}",cssCode:"",viewCode:"",isCodeVisible:!1},_o={beforeCodeTitle:"Configurable progress-bar",htmlCode:'\n<mat-card>\n  <mat-card-content>\n    <h2 class="example-h2">Progress bar configuration</h2>\n    <section class="example-section">\n      <label class="example-margin">Color:</label>\n      <mat-radio-group [(ngModel)]="color">\n        <mat-radio-button class="example-margin" value="primary">\n          Primary\n        </mat-radio-button>\n        <mat-radio-button class="example-margin" value="accent">\n          Accent\n        </mat-radio-button>\n        <mat-radio-button class="example-margin" value="warn">\n          Warn\n        </mat-radio-button>\n      </mat-radio-group>\n    </section>\n\t<section class="example-section">\n      <label class="example-margin">Mode:</label>\n      <mat-radio-group [(ngModel)]="mode">\n        <mat-radio-button class="example-margin" value="determinate">\n          Determinate\n        </mat-radio-button>\n        <mat-radio-button class="example-margin" value="indeterminate">\n          Indeterminate\n        </mat-radio-button>\n        <mat-radio-button class="example-margin" value="buffer">\n          Buffer\n        </mat-radio-button>\n        <mat-radio-button class="example-margin" value="query">\n          Query\n        </mat-radio-button>\n      </mat-radio-group>\n    </section>\n    <section class="example-section" *ngIf="mode == \'determinate\' || mode == \'buffer\'">\n      <label class="example-margin">Progress:</label>\n      <mat-slider class="example-margin" [(ngModel)]="value"></mat-slider>\n    </section>\n    <section class="example-section" *ngIf="mode == \'buffer\'">\n      <label class="example-margin">Buffer:</label>\n      <mat-slider class="example-margin" [(ngModel)]="bufferValue"></mat-slider>\n    </section>\n  </mat-card-content>\n</mat-card>\n<mat-card>\n  <mat-card-content>\n    <h2 class="example-h2">Result</h2>\n    <section class="example-section">\n     <mat-progress-bar\n        class="example-margin"\n        [color]="color"\n        [mode]="mode"\n        [value]="value"\n        [bufferValue]="bufferValue">\n      </mat-progress-bar>\n    </section>\n  </mat-card-content>\n</mat-card>',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Configurable progress-bar\n*/\n@Component({\n  selector: 'progress-bar-configurable-example',\n  templateUrl: 'progress-bar-configurable-example.html',\n  styleUrls: ['progress-bar-configurable-example.css'],\n})\nexport class ProgressBarConfigurableExample {\n  color = 'primary';\n  mode = 'determinate';\n  value = 50;\n  bufferValue = 75;\n}",cssCode:"\n.example-h2 {\n  margin: 10px;\n}\n.example-section {\n  display: flex;\n  align-content: center;\n  align-items: center;\n  height: 60px;\n}\n.example-margin {\n  margin: 0 10px;\n}",viewCode:"",isCodeVisible:!1},Bo=((qo=function(){function e(){o(this,e),this.color="primary",this.mode="determinate",this.value=50,this.bufferValue=75}return a(e,[{key:"ngOnInit",value:function(){this.exampleDeterminate=Lo,this.exampleIndeterminate=Ao,this.exampleBuffer=Ro,this.exmapleQuery=Po,this.exampleConfig=_o}}]),e}()).\u0275fac=function(e){return new(e||qo)},qo.\u0275cmp=c.Kb({type:qo,selectors:[["app-material-progress-bar"]],decls:78,vars:14,consts:[[3,"svg"],["href","https://material.angular.io/components/button/overview","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],[1,"example-container"],["mode","determinate","value","40"],["mode","indeterminate"],["mode","buffer"],["mode","query"],[1,"example-h2"],[1,"example-section"],[1,"example-margin"],[3,"ngModel","ngModelChange"],["value","primary",1,"example-margin"],["value","accent",1,"example-margin"],["value","warn",1,"example-margin"],["value","determinate",1,"example-margin"],["value","indeterminate",1,"example-margin"],["value","buffer",1,"example-margin"],["value","query",1,"example-margin"],["class","example-section",4,"ngIf"],[1,"example-margin",3,"color","mode","value","bufferValue"],[1,"example-margin",3,"ngModel","ngModelChange"]],template:function(e,t){1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"p"),c.Wb(9,"code"),c.Nc(10,"<mat-progress-bar>"),c.Vb(),c.Nc(11,"is a horizontal progress-bar for indicating progress and activity. "),c.Vb(),c.Wb(12,"p"),c.Wb(13,"b"),c.Nc(14,"Determinate:"),c.Vb(),c.Nc(15," Operations where the percentage of the operation complete is known should use the determinate indicator. "),c.Vb(),c.Rb(16,"div",6),c.Wb(17,"div",7),c.Rb(18,"mat-progress-bar",8),c.Vb(),c.Vb(),c.Vb(),c.Wb(19,"app-code-preview",4),c.Wb(20,"div",5),c.Wb(21,"span"),c.Nc(22," Operations where the user is asked to wait while something finishes and it\u2019s not necessary to indicate how long it will take should use the indeterminate indicator. "),c.Vb(),c.Rb(23,"div",6),c.Wb(24,"div",7),c.Rb(25,"mat-progress-bar",9),c.Vb(),c.Vb(),c.Vb(),c.Wb(26,"app-code-preview",4),c.Wb(27,"div",5),c.Wb(28,"span"),c.Nc(29," Operations where the user wants to indicate some activity or loading from the server, use the buffer indicator. "),c.Vb(),c.Rb(30,"div",6),c.Wb(31,"div",7),c.Rb(32,"mat-progress-bar",10),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(33,"div",3),c.Wb(34,"app-code-preview",4),c.Wb(35,"div",5),c.Wb(36,"span"),c.Nc(37," For situations where the user wants to indicate pre-loading (until the loading can actually be made), use the query indicator. "),c.Vb(),c.Rb(38,"div",6),c.Wb(39,"div",7),c.Rb(40,"mat-progress-bar",11),c.Vb(),c.Vb(),c.Vb(),c.Wb(41,"app-code-preview",4),c.Wb(42,"div",5),c.Wb(43,"div",7),c.Wb(44,"mat-card"),c.Wb(45,"mat-card-content"),c.Wb(46,"h2",12),c.Nc(47,"Progress bar configuration"),c.Vb(),c.Wb(48,"section",13),c.Wb(49,"label",14),c.Nc(50,"Color:"),c.Vb(),c.Wb(51,"mat-radio-group",15),c.gc("ngModelChange",function(e){return t.color=e}),c.Wb(52,"mat-radio-button",16),c.Nc(53," Primary "),c.Vb(),c.Wb(54,"mat-radio-button",17),c.Nc(55," Accent "),c.Vb(),c.Wb(56,"mat-radio-button",18),c.Nc(57," Warn "),c.Vb(),c.Vb(),c.Vb(),c.Wb(58,"section",13),c.Wb(59,"label",14),c.Nc(60,"Mode:"),c.Vb(),c.Wb(61,"mat-radio-group",15),c.gc("ngModelChange",function(e){return t.mode=e}),c.Wb(62,"mat-radio-button",19),c.Nc(63," Determinate "),c.Vb(),c.Wb(64,"mat-radio-button",20),c.Nc(65," Indeterminate "),c.Vb(),c.Wb(66,"mat-radio-button",21),c.Nc(67," Buffer "),c.Vb(),c.Wb(68,"mat-radio-button",22),c.Nc(69," Query "),c.Vb(),c.Vb(),c.Vb(),c.Lc(70,Eo,4,1,"section",23),c.Lc(71,Oo,4,1,"section",23),c.Vb(),c.Vb(),c.Wb(72,"mat-card"),c.Wb(73,"mat-card-content"),c.Wb(74,"h2",12),c.Nc(75,"Result"),c.Vb(),c.Wb(76,"section",13),c.Rb(77,"mat-progress-bar",24),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e&&(c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleDeterminate),c.Cb(13),c.qc("viewItem",t.exampleIndeterminate),c.Cb(7),c.qc("viewItem",t.exampleBuffer),c.Cb(8),c.qc("viewItem",t.exmapleQuery),c.Cb(7),c.qc("viewItem",t.exampleConfig),c.Cb(10),c.qc("ngModel",t.color),c.Cb(10),c.qc("ngModel",t.mode),c.Cb(9),c.qc("ngIf","determinate"==t.mode||"buffer"==t.mode),c.Cb(1),c.qc("ngIf","buffer"==t.mode),c.Cb(6),c.qc("color",t.color)("mode",t.mode)("value",t.value)("bufferValue",t.bufferValue))},directives:[h.a,g.a,Va.a,gn.a,gn.d,r.b,d.o,d.r,r.a,s.n,Ft.a],styles:[".example-h2[_ngcontent-%COMP%] {\n        margin: 10px;\n      }\n      .example-section[_ngcontent-%COMP%] {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        height: 60px;\n      }\n\n      .example-margin[_ngcontent-%COMP%] {\n        margin: 0 10px;\n      }"],changeDetection:0}),qo),Uo=i("Xa2L");function zo(e,t){if(1&e){var n=c.Xb();c.Wb(0,"section",8),c.Wb(1,"label",9),c.Nc(2,"Progress:"),c.Vb(),c.Wb(3,"mat-slider",19),c.gc("ngModelChange",function(e){return c.Bc(n),c.kc().value=e}),c.Vb(),c.Vb()}if(2&e){var a=c.kc();c.Cb(3),c.qc("ngModel",a.value)}}var jo,Ho,Go={beforeCodeTitle:"Basic progressbar-spinner",htmlCode:"<mat-spinner></mat-spinner>",tsCode:"import {Component} from '@angular/core';\n\n\n/**\n* @title Basic progress-spinner\n*/\n@Component({\n  selector: 'progress-spinner-overview-example',\n  templateUrl: 'progress-spinner-overview-example.html',\n  styleUrls: ['progress-spinner-overview-example.css'],\n})\nexport class ProgressSpinnerOverviewExample {}",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},$o={beforeCodeTitle:"Configurable progress spinner",htmlCode:'\n<mat-card>\n  <mat-card-content>\n    <h2 class="example-h2">Progress spinner configuration</h2>\n    <section class="example-section">\n      <label class="example-margin">Color:</label>\n      <mat-radio-group [(ngModel)]="color">\n        <mat-radio-button class="example-margin" value="primary">\n          Primary\n        </mat-radio-button>\n        <mat-radio-button class="example-margin" value="accent">\n          Accent\n        </mat-radio-button>\n        <mat-radio-button class="example-margin" value="warn">\n          Warn\n        </mat-radio-button>\n      </mat-radio-group>\n    </section>\n    <section class="example-section">\n      <label class="example-margin">Mode:</label>\n      <mat-radio-group [(ngModel)]="mode">\n\t    <mat-radio-button class="example-margin" value="determinate">\n          Determinate\n        </mat-radio-button>\n        <mat-radio-button class="example-margin" value="indeterminate">\n          Indeterminate\n        </mat-radio-button>\n      </mat-radio-group>\n    </section>\n    <section class="example-section" *ngIf="mode == \'determinate\'">\n      <label class="example-margin">Progress:</label>\n        <mat-slider class="example-margin" [(ngModel)]="value"></mat-slider>\n    </section>\n  </mat-card-content>\n</mat-card>\n<mat-card>\n  <mat-card-content>\n    <h2 class="example-h2">Result</h2>\n    <mat-progress-spinner\n     class="example-margin"\n     [color]="color"\n     [mode]="mode"\n     [value]="value">\n    </mat-progress-spinner>\n  </mat-card-content>\n</mat-card>',tsCode:"\nimport {Component} from '@angular/core';\n\n\n/**\n* @title Configurable progress spinner\n*/\n@Component({\n  selector: 'progress-spinner-configurable-example',\n  templateUrl: 'progress-spinner-configurable-example.html',\n  styleUrls: ['progress-spinner-configurable-example.css'],\n})\nexport class ProgressSpinnerConfigurableExample {\n  color = 'primary';\n  mode = 'determinate';\n  value = 50;\n}",cssCode:"\n.example-h2 {\n  margin: 10px;\n}\n.example-section {\n  display: flex;\n  align-content: center;\n  align-items: center;\n  height: 60px;\n}\n.example-margin {\n  margin: 0 10px;\n}",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},Ko={beforeCodeTitle:"Colorized progressbar-spinner",htmlCode:"\n<mat-spinner [color]=\"'accent'\"></mat-spinner>\n<mat-spinner [color]=\"'warn'\"></mat-spinner>\n",tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Colorized progress-spinner\n*/\n@Component({\n  selector: 'progress-spinner-colorized-example',\n  templateUrl: 'progress-spinner-colorized-example.html',\n  styleUrls: ['progress-spinner-colorized-example.css'],\n})\nexport class ProgressSpinnerColorizedExample {}",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},Yo=((jo=function(){function e(){o(this,e),this.color="primary",this.mode="determinate",this.value=50}return a(e,[{key:"ngOnInit",value:function(){this.exampleBasic=Go,this.exampleWarn=Ko,this.exampleConfig=$o}}]),e}()).\u0275fac=function(e){return new(e||jo)},jo.\u0275cmp=c.Kb({type:jo,selectors:[["app-material-progress-spinner"]],decls:66,vars:12,consts:[[3,"svg"],["href","https://material.angular.io/components/progress-spinner/overview","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],[3,"color"],[1,"example-section"],[1,"example-margin"],[3,"ngModel","ngModelChange"],["value","primary",1,"example-margin"],["value","accent",1,"example-margin"],["value","warn",1,"example-margin"],["value","determinate",1,"example-margin"],["value","indeterminate",1,"example-margin"],["class","example-section",4,"ngIf"],[1,"example-h2"],[1,"example-margin",3,"color","mode","value"],[1,"example-margin",3,"ngModel","ngModelChange"]],template:function(e,t){1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"span"),c.Wb(9,"code"),c.Nc(10,"<mat-progress-spinner>"),c.Vb(),c.Nc(11," and "),c.Wb(12,"code"),c.Nc(13,"<mat-spinner>"),c.Vb(),c.Nc(14," are a circular indicators of progress and activity. "),c.Vb(),c.Rb(15,"div",6),c.Wb(16,"div"),c.Rb(17,"mat-spinner"),c.Vb(),c.Vb(),c.Vb(),c.Wb(18,"app-code-preview",4),c.Wb(19,"div",5),c.Wb(20,"span"),c.Nc(21," The color of a progress-spinner can be changed by using the "),c.Wb(22,"mark"),c.Nc(23,"color"),c.Vb(),c.Nc(24," property. By default, progress-spinners use the theme's primary color. This can be changed to "),c.Wb(25,"mark"),c.Nc(26,"'accent'"),c.Vb(),c.Nc(27," or "),c.Wb(28,"mark"),c.Nc(29,"'warn'"),c.Vb(),c.Nc(30,". "),c.Vb(),c.Rb(31,"div",6),c.Wb(32,"div"),c.Rb(33,"mat-spinner",7),c.Rb(34,"div",6),c.Rb(35,"mat-spinner",7),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(36,"div",3),c.Wb(37,"app-code-preview",4),c.Wb(38,"div",5),c.Wb(39,"div"),c.Wb(40,"mat-card"),c.Wb(41,"mat-card-content"),c.Wb(42,"section",8),c.Wb(43,"label",9),c.Nc(44,"Color:"),c.Vb(),c.Wb(45,"mat-radio-group",10),c.gc("ngModelChange",function(e){return t.color=e}),c.Wb(46,"mat-radio-button",11),c.Nc(47," Primary "),c.Vb(),c.Wb(48,"mat-radio-button",12),c.Nc(49," Accent "),c.Vb(),c.Wb(50,"mat-radio-button",13),c.Nc(51," Warn "),c.Vb(),c.Vb(),c.Vb(),c.Wb(52,"section",8),c.Wb(53,"label",9),c.Nc(54,"Mode:"),c.Vb(),c.Wb(55,"mat-radio-group",10),c.gc("ngModelChange",function(e){return t.mode=e}),c.Wb(56,"mat-radio-button",14),c.Nc(57," Determinate "),c.Vb(),c.Wb(58,"mat-radio-button",15),c.Nc(59," Indeterminate "),c.Vb(),c.Vb(),c.Vb(),c.Lc(60,zo,4,1,"section",16),c.Vb(),c.Vb(),c.Wb(61,"mat-card"),c.Wb(62,"mat-card-content"),c.Wb(63,"h2",17),c.Nc(64,"Result"),c.Vb(),c.Rb(65,"mat-progress-spinner",18),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e&&(c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleBasic),c.Cb(12),c.qc("viewItem",t.exampleWarn),c.Cb(15),c.qc("color","accent"),c.Cb(2),c.qc("color","warn"),c.Cb(2),c.qc("viewItem",t.exampleConfig),c.Cb(8),c.qc("ngModel",t.color),c.Cb(10),c.qc("ngModel",t.mode),c.Cb(5),c.qc("ngIf","determinate"==t.mode),c.Cb(5),c.qc("color",t.color)("mode",t.mode)("value",t.value))},directives:[h.a,g.a,Uo.c,gn.a,gn.d,r.b,d.o,d.r,r.a,s.n,Uo.a,Ft.a],styles:[".example-h2[_ngcontent-%COMP%] {\n        margin: 10px;\n      }\n      .example-section[_ngcontent-%COMP%] {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        height: 60px;\n      }\n      .example-margin[_ngcontent-%COMP%] {\n        margin: 0 10px;\n      }"],changeDetection:0}),jo),Jo={beforeCodeTitle:"MatRipple basic usage",htmlCode:'\n<mat-checkbox [(ngModel)]="centered" class="example-ripple-checkbox">Centered</mat-checkbox>\n<mat-checkbox [(ngModel)]="disabled" class="example-ripple-checkbox">Disabled</mat-checkbox>\n<mat-checkbox [(ngModel)]="unbounded" class="example-ripple-checkbox">Unbounded</mat-checkbox>\n\n<mat-form-field class="example-ripple-form-field">\n  <input matInput [(ngModel)]="radius" type="number" placeholder="Radius">\n</mat-form-field>\n<mat-form-field class="example-ripple-form-field">\n  <input matInput [(ngModel)]="color" type="text" placeholder="Color">\n</mat-form-field>\n\n<div class="example-ripple-container mat-elevation-z4"\n  matRipple\n  [matRippleCentered]="centered"\n  [matRippleDisabled]="disabled"\n  [matRippleUnbounded]="unbounded"\n  [matRippleRadius]="radius"\n  [matRippleColor]="color">\n  Click me\n</div>',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n  * @title MatRipple basic usage\n*/\n@Component({\n  selector: 'ripple-overview-example',\n  templateUrl: 'ripple-overview-example.html',\n  styleUrls: ['ripple-overview-example.css'],\n})\nexport class RippleOverviewExample {\n  centered = false;\n  disabled = false;\n  unbounded = false;\n\n  radius: number;\n  color: string;\n}",cssCode:"\n.example-ripple-container {\n  cursor: pointer;\n  text-align: center;\n\n  width: 300px;\n  height: 300px;\n  line-height: 300px;\n\n  user-select: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n\n  -webkit-user-drag: none;\n  -webkit-tap-highlight-color: transparent;\n}\n\n/** Styles to make the demo look better. */\n.example-ripple-checkbox {\n  margin: 6px 12px 6px 0;\n}\n\n.example-ripple-form-field {\n  margin: 0 12px 0 0;\n}",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},Qo=((Ho=function(){function e(t){o(this,e),this.centered=!1,this.disabled=!1,this.unbounded=!1}return a(e,[{key:"ngOnInit",value:function(){this.exampleBasic=Jo}}]),e}()).\u0275fac=function(e){return new(e||Ho)(c.Qb(K.c))},Ho.\u0275cmp=c.Kb({type:Ho,selectors:[["app-material-ripples"]],decls:29,vars:12,consts:[[3,"svg"],["href","https://material.angular.io/components/ripple/examples","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-12"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],[1,"example-ripple-checkbox",3,"ngModel","ngModelChange"],[1,"example-ripple-form-field"],["matInput","","type","number","placeholder","Radius",3,"ngModel","ngModelChange"],["matInput","","type","text","placeholder","Color",3,"ngModel","ngModelChange"],["matRipple","",1,"example-ripple-container","mat-elevation-z4",3,"matRippleCentered","matRippleDisabled","matRippleUnbounded","matRippleRadius","matRippleColor"]],template:function(e,t){1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"p"),c.Nc(9," Connect user input to screen reactions by using ripples to both indicate the point of touch, and to confirm that touch input was received. For touch or mouse, this occurs at the point of contact. "),c.Vb(),c.Wb(10,"p"),c.Nc(11," The "),c.Wb(12,"code"),c.Nc(13,"<mat-icon>"),c.Vb(),c.Nc(14," attribute directive defines an area in which a ripple animates on user interaction. "),c.Vb(),c.Rb(15,"div",6),c.Wb(16,"div"),c.Wb(17,"mat-checkbox",7),c.gc("ngModelChange",function(e){return t.centered=e}),c.Nc(18,"Centered"),c.Vb(),c.Wb(19,"mat-checkbox",7),c.gc("ngModelChange",function(e){return t.disabled=e}),c.Nc(20,"Disabled"),c.Vb(),c.Wb(21,"mat-checkbox",7),c.gc("ngModelChange",function(e){return t.unbounded=e}),c.Nc(22,"Unbounded"),c.Vb(),c.Wb(23,"mat-form-field",8),c.Wb(24,"input",9),c.gc("ngModelChange",function(e){return t.radius=e}),c.Vb(),c.Vb(),c.Wb(25,"mat-form-field",8),c.Wb(26,"input",10),c.gc("ngModelChange",function(e){return t.color=e}),c.Vb(),c.Vb(),c.Wb(27,"div",11),c.Nc(28," Click me "),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e&&(c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleBasic),c.Cb(11),c.qc("ngModel",t.centered),c.Cb(2),c.qc("ngModel",t.disabled),c.Cb(2),c.qc("ngModel",t.unbounded),c.Cb(3),c.qc("ngModel",t.radius),c.Cb(2),c.qc("ngModel",t.color),c.Cb(1),c.qc("matRippleCentered",t.centered)("matRippleDisabled",t.disabled)("matRippleUnbounded",t.unbounded)("matRippleRadius",t.radius)("matRippleColor",t.color))},directives:[h.a,g.a,P.a,d.o,d.r,f.c,v.b,d.t,d.d,w.t],encapsulation:2,changeDetection:0}),Ho);function Xo(e,t){1&e&&(c.Wb(0,"span"),c.Nc(1,"\u2713"),c.Vb())}function Zo(e,t){1&e&&(c.Wb(0,"span"),c.Nc(1,"\u2713"),c.Vb())}function ei(e,t){1&e&&(c.Wb(0,"span"),c.Nc(1,"\u2713"),c.Vb())}function ti(e,t){if(1&e&&(c.Wb(0,"li"),c.Nc(1),c.Vb()),2&e){var n=t.ngIf;c.Cb(1),c.Pc("You chose: ",n,"")}}var ni,ai,oi,ii,li,ri,si,mi,ci,pi=((oi=function e(){o(this,e)}).\u0275fac=function(e){return new(e||oi)},oi.\u0275cmp=c.Kb({type:oi,selectors:[["app-modal3"]],decls:29,vars:1,consts:[[1,"col-xl-12"],[1,"modal3-container"],["mat-dialog-title",""],["mat-button","","mat-dialog-close",""],["mat-button","","cdkFocusInitial","",3,"mat-dialog-close"]],template:function(e,t){1&e&&(c.Wb(0,"div",0),c.Wb(1,"div",0),c.Wb(2,"div",1),c.Wb(3,"h1",2),c.Nc(4,"Favorite Animal"),c.Vb(),c.Wb(5,"h2",2),c.Nc(6,"Install Angular"),c.Vb(),c.Wb(7,"mat-dialog-content"),c.Wb(8,"h3"),c.Nc(9,"DEVELOP ACROSS ALL PLATFORMS"),c.Vb(),c.Wb(10,"p"),c.Nc(11," Learn one way to build applications with Angular and reuse your code and abilities to build apps for any deployment target. For web, mobile web, native mobile and native desktop. "),c.Vb(),c.Wb(12,"h3"),c.Nc(13,"SPEED & PERFORMANCE"),c.Vb(),c.Wb(14,"p"),c.Nc(15," Achieve the maximum speed possible on the Web Platform today, and take it further, via Web Workers and server-side rendering. Angular puts you in control over scalability. Meet huge data requirements by building data models on RxJS, Immutable.js or another push-model. "),c.Vb(),c.Wb(16,"h3"),c.Nc(17,"INCREDIBLE TOOLING"),c.Vb(),c.Wb(18,"p"),c.Nc(19," Build features quickly with simple, declarative templates. Extend the template language with your own components and use a wide array of existing components. Get immediate Angular-specific help and feedback with nearly every IDE and editor. All this comes together so you can focus on building amazing apps rather than trying to make the code work. "),c.Vb(),c.Wb(20,"h3"),c.Nc(21,"LOVED BY MILLIONS"),c.Vb(),c.Wb(22,"p"),c.Nc(23," From prototype through global deployment, Angular delivers the productivity and scalable infrastructure that supports Google's largest applications. "),c.Vb(),c.Vb(),c.Wb(24,"mat-dialog-actions"),c.Wb(25,"button",3),c.Nc(26,"Cancel"),c.Vb(),c.Wb(27,"button",4),c.Nc(28," Install "),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e&&(c.Cb(27),c.qc("mat-dialog-close",!0))},directives:[$.h,$.e,$.c,X.b,$.d],encapsulation:2}),oi),di=((ai=function e(t){o(this,e),this.data=t}).\u0275fac=function(e){return new(e||ai)(c.Qb($.a))},ai.\u0275cmp=c.Kb({type:ai,selectors:[["app-modal2"]],decls:17,vars:3,consts:[[1,"col-xl-12"],[1,"modal2-container"],["mat-dialog-title",""],["mat-dialog-content",""],[4,"ngIf"]],template:function(e,t){1&e&&(c.Wb(0,"div",0),c.Wb(1,"div",0),c.Wb(2,"div",1),c.Wb(3,"h1",2),c.Nc(4,"Favorite Animal"),c.Vb(),c.Wb(5,"div",3),c.Nc(6," My favorite animal is: "),c.Wb(7,"ul"),c.Wb(8,"li"),c.Lc(9,Xo,2,0,"span",4),c.Nc(10," Panda "),c.Vb(),c.Wb(11,"li"),c.Lc(12,Zo,2,0,"span",4),c.Nc(13," Unicorn "),c.Vb(),c.Wb(14,"li"),c.Lc(15,ei,2,0,"span",4),c.Nc(16," Lion"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e&&(c.Cb(9),c.qc("ngIf","panda"===t.data.animal),c.Cb(3),c.qc("ngIf","unicorn"===t.data.animal),c.Cb(3),c.qc("ngIf","lion"===t.data.animal))},directives:[$.h,$.e,s.n],encapsulation:2}),ai),bi=((ni=function(){function e(t,n){o(this,e),this.dialogRef=t,this.data=n}return a(e,[{key:"onNoClick",value:function(){this.dialogRef.close()}}]),e}()).\u0275fac=function(e){return new(e||ni)(c.Qb($.g),c.Qb($.a))},ni.\u0275cmp=c.Kb({type:ni,selectors:[["app-material-modal"]],decls:16,vars:3,consts:[[1,"col-xl-12"],["mat-dialog-title",""],["mat-dialog-content",""],["matInput","",3,"ngModel","ngModelChange"],["mat-dialog-actions",""],["mat-button","",3,"click"],["mat-button","","cdkFocusInitial","",3,"mat-dialog-close"]],template:function(e,t){1&e&&(c.Wb(0,"div",0),c.Wb(1,"div",0),c.Rb(2,"br"),c.Wb(3,"h1",1),c.Nc(4),c.Vb(),c.Wb(5,"div",2),c.Wb(6,"p"),c.Nc(7,"What's your favorite animal?"),c.Vb(),c.Wb(8,"mat-form-field"),c.Wb(9,"input",3),c.gc("ngModelChange",function(e){return t.data.animal=e}),c.Vb(),c.Vb(),c.Vb(),c.Wb(10,"div",4),c.Wb(11,"button",5),c.gc("click",function(){return t.onNoClick()}),c.Nc(12,"No Thanks"),c.Vb(),c.Wb(13,"button",6),c.Nc(14," Ok "),c.Vb(),c.Vb(),c.Rb(15,"br"),c.Vb(),c.Vb()),2&e&&(c.Cb(4),c.Pc("Hi ",t.data.name,""),c.Cb(5),c.qc("ngModel",t.data.animal),c.Cb(4),c.qc("mat-dialog-close",t.data.animal))},directives:[$.h,$.e,f.c,v.b,d.d,d.o,d.r,$.c,X.b,$.d],encapsulation:2}),ni),ui={beforeCodeTitle:"Dialog Overview",htmlCode:'\n\t\t<h1 mat-dialog-title>Hi {{data.name}}</h1>\n\t\t<div mat-dialog-content>\n\t\t  <p>What\'s your favorite animal?</p>\n\t\t  <mat-form-field>\n\t\t\t<input matInput [(ngModel)]="data.animal">\n\t\t  </mat-form-field>\n\t\t</div>\n\t\t<div mat-dialog-actions>\n\t\t  <button mat-button (click)="onNoClick()">No Thanks</button>\n\t\t  <button mat-button [mat-dialog-close]="data.animal" cdkFocusInitial>Ok</button>\n\t\t</div>\n',tsCode:"\nimport {Component, Inject} from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\n\n/**\n* @title Dialog Overview\n*/\n@Component({\n  selector: 'dialog-overview-example',\n  templateUrl: 'dialog-overview-example.html',\n  styleUrls: ['dialog-overview-example.css'],\n})\nexport class DialogOverviewExample {\n\n  animal: string;\n  name: string;\n\n  constructor(public dialog: MatDialog) {}\n\n  openDialog(): void {\n    let dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n      width: '250px',\n      data: { name: this.name, animal: this.animal }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      this.animal = result;\n    });\n  }\n}\n\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  template: `\n    <h1 mat-dialog-title>Hi {{data.name}}</h1>\n    <div mat-dialog-content>\n      <p>What's your favorite animal?</p>\n      <mat-form-field>\n        <input matInput [(ngModel)]=\"data.animal\">\n      </mat-form-field>\n    </div>\n    <div mat-dialog-actions>\n      <button mat-button (click)=\"onNoClick()\">No Thanks</button>\n      <button mat-button [mat-dialog-close]=\"data.animal\" cdkFocusInitial>Ok</button>\n    </div>`\n})\nexport class DialogOverviewExampleDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n      @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},hi={beforeCodeTitle:"Injecting data when opening a dialog",htmlCode:'<button mat-button (click)="openDialog()">Open dialog</button>',tsCode:"\nimport {Component, Inject} from '@angular/core';\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material';\n\n/**\n* @title Injecting data when opening a dialog\n*/\n@Component({\n  selector: 'dialog-data-example',\n  templateUrl: 'dialog-data-example.html',\n  styleUrls: ['dialog-data-example.css']\n})\nexport class DialogDataExample {\n  constructor(public dialog: MatDialog) {}\n\n  openDialog() {\n    this.dialog.open(DialogDataExampleDialog, {\n      data: {\n        animal: 'panda'\n     }\n    });\n  }\n}\n\n@Component({\n  selector: 'dialog-data-example-dialog',\n  template: `\n    <h1 mat-dialog-title>Favorite Animal</h1>\n    <div mat-dialog-content>\n      My favorite animal is:\n      <ul>\n        <li>\n          <span *ngIf=\"data.animal === 'panda'\">&#10003;</span> Panda\n        </li>\n        <li>\n          <span *ngIf=\"data.animal === 'unicorn'\">&#10003;</span> Unicorn\n        </li>\n        <li>\n          <span *ngIf=\"data.animal === 'lion'\">&#10003;</span> Lion\n        </li>\n      </ul>\n    </div>\n\t`,\n})\nexport class DialogDataExampleDialog {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) {}\n}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},gi={beforeCodeTitle:"Dialog with header, scrollable content and actions",htmlCode:'\n<button mat-button (click)="openDialog()">Open dialog</button>\n',tsCode:"\nimport {Component} from '@angular/core';\nimport {MatDialog} from '@angular/material';\n\n/**\n* @title Dialog with header, scrollable content and actions\n*/\n@Component({\n  selector: 'dialog-content-example',\n  templateUrl: 'dialog-content-example.html',\n  styleUrls: ['dialog-content-example.css'],\n})\nexport class DialogContentExample {\n  constructor(public dialog: MatDialog) {}\n\n  openDialog() {\n    const dialogRef = this.dialog.open(DialogContentExampleDialog, {\n      height: '350px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n}\n\n@Component({\n  selector: 'dialog-content-example-dialog',\n  templateUrl: 'dialog-content-example-dialog.html',\n})\nexport class DialogContentExampleDialog {}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},fi=((li=function(){function e(t){o(this,e),this.dialog=t,this.animal2="",this.animalSubject=new Ca.a("")}return a(e,[{key:"ngOnInit",value:function(){var e=this;this.animal$=this.animalSubject.asObservable(),this.animal$.subscribe(function(t){e.animal=t}),this.exampleBasic=ui,this.exampleInjecting=hi,this.examplHeader=gi}},{key:"openDialog",value:function(){var e=this;this.dialog.open(bi,{width:"280px",data:{name:this.name,animal:this.animal}}).afterClosed().subscribe(function(t){t&&e.animalSubject.next(t)})}},{key:"openDialog2",value:function(){this.dialog.open(di,{data:{animal:"panda"}})}},{key:"openDialog3",value:function(){this.dialog.open(pi,{height:"350px"}).afterClosed().subscribe(function(e){console.log("Dialog result: "+e)})}}]),e}()).\u0275fac=function(e){return new(e||li)(c.Qb($.b))},li.\u0275cmp=c.Kb({type:li,selectors:[["app-material-dialog"]],decls:48,vars:8,consts:[[3,"svg"],["href","https://material.angular.io/components/dialog/overview","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],["matInput","","placeholder","What's your name?",3,"ngModel","ngModelChange"],["mat-raised-button","",3,"click"],[4,"ngIf"],["mat-button","",3,"click"]],template:function(e,t){1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"span"),c.Nc(9," The "),c.Wb(10,"mark"),c.Nc(11,"MatDialog"),c.Vb(),c.Nc(12," service can be used to open modal dialogs with Material Design styling and animations. "),c.Vb(),c.Rb(13,"div",6),c.Wb(14,"div"),c.Wb(15,"ol"),c.Wb(16,"li"),c.Wb(17,"mat-form-field"),c.Wb(18,"input",7),c.gc("ngModelChange",function(e){return t.name=e}),c.Vb(),c.Vb(),c.Vb(),c.Wb(19,"li"),c.Wb(20,"button",8),c.gc("click",function(){return t.openDialog()}),c.Nc(21,"Pick one"),c.Vb(),c.Vb(),c.Lc(22,ti,2,1,"li",9),c.lc(23,"async"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(24,"app-code-preview",4),c.Wb(25,"div",5),c.Wb(26,"span"),c.Nc(27," To access the data in your dialog component, you have to use the "),c.Wb(28,"mark"),c.Nc(29,"MAT_DIALOG_DATA"),c.Vb(),c.Nc(30," injection token "),c.Vb(),c.Rb(31,"div",6),c.Wb(32,"div"),c.Wb(33,"button",10),c.gc("click",function(){return t.openDialog2()}),c.Nc(34,"Open dialog"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(35,"div",3),c.Wb(36,"app-code-preview",4),c.Wb(37,"div",5),c.Wb(38,"p"),c.Nc(39," Once a dialog opens, the dialog will automatically focus the first tabbable element. "),c.Vb(),c.Wb(40,"p"),c.Nc(41," You can control which elements are tab stops with the "),c.Wb(42,"mark"),c.Nc(43,"tabindex"),c.Vb(),c.Nc(44," attribute "),c.Vb(),c.Wb(45,"div"),c.Wb(46,"button",10),c.gc("click",function(){return t.openDialog3()}),c.Nc(47,"Open dialog"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e&&(c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleBasic),c.Cb(12),c.qc("ngModel",t.name),c.Cb(4),c.qc("ngIf",c.mc(23,6,t.animal$)),c.Cb(2),c.qc("viewItem",t.exampleInjecting),c.Cb(12),c.qc("viewItem",t.examplHeader))},directives:[h.a,g.a,f.c,v.b,d.d,d.o,d.r,X.b,s.n],pipes:[s.b],encapsulation:2}),li),vi=((ii=function e(){o(this,e)}).\u0275fac=function(e){return new(e||ii)},ii.\u0275cmp=c.Kb({type:ii,selectors:[["app-snack-bar-component-example-snack"]],decls:2,vars:0,consts:[[1,"example-pizza-party"]],template:function(e,t){1&e&&(c.Wb(0,"span",0),c.Nc(1,"Pizza party!!! \ud83c\udf55"),c.Vb())},styles:[".example-pizza-party[_ngcontent-%COMP%] {\n        color: hotpink;\n      }"]}),ii),Ci=i("dNgK"),xi={beforeCodeTitle:"Basic snack-bar",htmlCode:'\n<mat-form-field>\n  <input matInput value="Disco party!" placeholder="Message" #message>\n</mat-form-field>\n<mat-form-field>\n  <input matInput value="Dance" placeholder="Action" #action>\n</mat-form-field>\n<button mat-button (click)="openSnackBar(message.value, action.value)">Show snack-bar</button>\n',tsCode:"\nimport {Component} from '@angular/core';\nimport {MatSnackBar} from '@angular/material';\n\n/**\n* @title Basic snack-bar\n*/\n@Component({\n  selector: 'snack-bar-overview-example',\n  templateUrl: 'snack-bar-overview-example.html',\n  styleUrls: ['snack-bar-overview-example.css'],\n})\nexport class SnackBarOverviewExample {\n  constructor(public snackBar: MatSnackBar) {}\n\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},wi={beforeCodeTitle:"Snack-bar with a custom component",htmlCode:'\n<button mat-button (click)="openSnackBar()" aria-label="Show an example snack-bar">\n  Pizza party\n</button>\n',tsCode:"\nimport {Component} from '@angular/core';\nimport {MatSnackBar} from '@angular/material';\n\n/**\n* @title Snack-bar with a custom component\n*/\n@Component({\n  selector: 'snack-bar-component-example',\n  templateUrl: 'snack-bar-component-example.html',\n})\nexport class SnackBarComponentExample {\n  constructor(public snackBar: MatSnackBar) {}\n\n  openSnackBar() {\n    this.snackBar.openFromComponent(PizzaPartyComponent, {\n      duration: 500,\n    });\n  }\n}\n\n@Component({\n  selector: 'snack-bar-component-example-snack',\n  template: `\n\t<span _ngcontent-c3=\"\" class=\"example-pizza-party\">\n      Pizza party!!! \ud83c\udf55\n    </span>`,\n  styles: [`.example-pizza-party { color: hotpink; }`],\n})\nexport class PizzaPartyComponent {}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},Vi={beforeCodeTitle:"Dismissal example with 6 seconds duration",htmlCode:'\n<mat-form-field>\n  <input matInput value="Disco party!" placeholder="Message" #message>\n</mat-form-field>\n<mat-form-field>\n  <input matInput value="Dance" placeholder="Action" #action>\n</mat-form-field>\n<button mat-button (click)="openSnackBar(message.value, action.value)">Show snack-bar</button>\n',tsCode:"\nimport {Component} from '@angular/core';\nimport {MatSnackBar} from '@angular/material';\n\n/**\n* @title Basic snack-bar\n*/\n@Component({\n  selector: 'snack-bar-overview-example',\n  templateUrl: 'snack-bar-overview-example.html',\n  styleUrls: ['snack-bar-overview-example.css'],\n})\nexport class SnackBarOverviewExample {\n  constructor(public snackBar: MatSnackBar) {}\n\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n}\n",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},Wi=((ri=function(){function e(t){o(this,e),this.snackBar=t}return a(e,[{key:"openSnackBar",value:function(e,t){this.snackBar.open(e,t,{duration:2e3})}},{key:"openSnackBar2",value:function(){this.snackBar.openFromComponent(vi,{duration:500})}},{key:"openSnackBar3",value:function(e,t){this.snackBar.open(e,t,{duration:6500})}},{key:"ngOnInit",value:function(){this.exampleBasic=xi,this.exampleCustom=wi,this.exampleDismissal=Vi}}]),e}()).\u0275fac=function(e){return new(e||ri)(c.Qb(Ci.a))},ri.\u0275cmp=c.Kb({type:ri,selectors:[["app-material-snackbar"]],decls:44,vars:4,consts:[[3,"svg"],["href","https://material.angular.io/components/snack-bar/overview","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],["matInput","","value","Disco party!","placeholder","Message"],["message",""],["matInput","","value","Dance","placeholder","Action"],["action",""],["mat-button","",3,"click"],["mat-button","","aria-label","Show an example snack-bar",3,"click"]],template:function(e,t){if(1&e){var n=c.Xb();c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"span"),c.Wb(9,"mark"),c.Nc(10,"MatSnackBar"),c.Vb(),c.Nc(11," is a service for displaying snack-bar notifications. "),c.Vb(),c.Rb(12,"div",6),c.Wb(13,"div"),c.Wb(14,"mat-form-field"),c.Rb(15,"input",7,8),c.Vb(),c.Wb(17,"mat-form-field"),c.Rb(18,"input",9,10),c.Vb(),c.Wb(20,"button",11),c.gc("click",function(){c.Bc(n);var e=c.yc(16),a=c.yc(19);return t.openSnackBar(e.value,a.value)}),c.Nc(21," Show snack-bar "),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(22,"app-code-preview",4),c.Wb(23,"div",5),c.Wb(24,"div"),c.Wb(25,"button",12),c.gc("click",function(){return t.openSnackBar2()}),c.Nc(26," Pizza party "),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(27,"div",3),c.Wb(28,"app-code-preview",4),c.Wb(29,"div",5),c.Wb(30,"span"),c.Wb(31,"mark"),c.Nc(32,"Dismissal"),c.Vb(),c.Nc(33," example with 6 seconds duration "),c.Vb(),c.Rb(34,"div",6),c.Wb(35,"div"),c.Wb(36,"mat-form-field"),c.Rb(37,"input",7,8),c.Vb(),c.Wb(39,"mat-form-field"),c.Rb(40,"input",9,10),c.Vb(),c.Wb(42,"button",11),c.gc("click",function(){c.Bc(n);var e=c.yc(16),a=c.yc(19);return t.openSnackBar3(e.value,a.value)}),c.Nc(43," Show snack-bar "),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()}2&e&&(c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleBasic),c.Cb(16),c.qc("viewItem",t.exampleCustom),c.Cb(6),c.qc("viewItem",t.exampleDismissal))},directives:[h.a,g.a,f.c,v.b,X.b],styles:[""]}),ri),yi=i("Qu3c"),Ni={beforeCodeTitle:"Basic table",htmlCode:'\n<div class="example-container mat-elevation-z8">\n  <mat-table #table [dataSource]="dataSource">\n    \x3c!--- Note that these columns can be defined in any order.\n\t\t\t\tThe actual rendered columns are set as a property on the row definition" --\x3e\n    \x3c!-- Position Column --\x3e\n    <ng-container matColumnDef="position">\n      <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\n      <mat-cell *matCellDef="let element"> {{element.position}} </mat-cell>\n    </ng-container>\n    \x3c!-- Name Column --\x3e\n    <ng-container matColumnDef="name">\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n      <mat-cell *matCellDef="let element"> {{element.name}} </mat-cell>\n    </ng-container>\n    \x3c!-- Weight Column --\x3e\n    <ng-container matColumnDef="weight">\n      <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\n      <mat-cell *matCellDef="let element"> {{element.weight}} </mat-cell>\n    </ng-container>\n    \x3c!-- Symbol Column --\x3e\n    <ng-container matColumnDef="symbol">\n      <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\n      <mat-cell *matCellDef="let element"> {{element.symbol}} </mat-cell>\n    </ng-container>\n    <mat-header-row *matHeaderRowDef="displayedColumns"></mat-header-row>\n    <mat-row *matRowDef="let row; columns: displayedColumns;"></mat-row>\n  </mat-table>\n</div>\n',tsCode:"\nimport {Component} from '@angular/core';\n/**\n* @title Basic tooltip\n*/\n@Component({\n  selector: 'tooltip-overview-example',\n  templateUrl: 'tooltip-overview-example.html',\n  styleUrls: ['tooltip-overview-example.css'],\n})\nexport class TooltipOverviewExample {}\n\t\t",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},ki={beforeCodeTitle:"Tooltip with custom position",htmlCode:'\n<div class="example-tooltip-host" matTooltip="Tooltip!" [matTooltipPosition]="position">\n  <span>Show tooltip</span>\n  <mat-form-field>\n    <mat-select class="example-select" [(ngModel)]="position">\n      <mat-option value="before">Before</mat-option>\n      <mat-option value="after">After</mat-option>\n      <mat-option value="above">Above</mat-option>\n      <mat-option value="below">Below</mat-option>\n      <mat-option value="left">Left</mat-option>\n      <mat-option value="right">Right</mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n\t\t',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Tooltip with custom position\n*/\n@Component({\n  selector: 'tooltip-position-example',\n  templateUrl: 'tooltip-position-example.html',\n  styleUrls: ['tooltip-position-example.css'],\n})\nexport class TooltipPositionExample {\n  position = 'before';\n}\n\t\t",cssCode:"\n.example-tooltip-host {\n  display: inline-flex;\n  align-items: center;\n  margin: 50px;\n}\n.example-select {\n  margin: 0 10px;\n}\n\t\t",viewCode:"",isCodeVisible:!1},Mi={beforeCodeTitle:"Tooltip with a show and hide delay",beforeCodeDescription:"",htmlCode:'\n<button mat-raised-button matTooltip="Tooltip!" matTooltipShowDelay="1000">\n  My tooltip waits one second to show\n</button>\n<button mat-raised-button matTooltip="Tooltip!" matTooltipHideDelay="2000">\n  My tooltip waits two seconds to hide\n</button>',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Tooltip with a show and hide delay\n*/\n@Component({\n  selector: 'tooltip-delay-example',\n  templateUrl: 'tooltip-delay-example.html',\n  styleUrls: ['tooltip-delay-example.css'],\n})\nexport class TooltipDelayExample {}\n",cssCode:"\nbutton {\n  margin: 8px;\n}\n\t\t",viewCode:"",isCodeVisible:!1},Si={beforeCodeTitle:"Tooltip with a show and hide delay",htmlCode:'\n<button mat-raised-button matTooltip="By default, I delay">\n  Button with delay-default tooltip\n</button>\n\t\t',tsCode:"\nimport {Component} from '@angular/core';\nimport {MAT_TOOLTIP_DEFAULT_OPTIONS, MatTooltipDefaultOptions} from '@angular/material';\n\n/** Custom options the configure the tooltip's default show/hide delays. */\nexport const myCustomTooltipDefaults: MatTooltipDefaultOptions = {\n  showDelay: 1000,\n  hideDelay: 1000,\n  touchendHideDelay: 1000,\n};\n\n/**\n* @title Tooltip with a show and hide delay\n*/\n@Component({\n  selector: 'tooltip-modified-defaults-example',\n  templateUrl: 'tooltip-modified-defaults-example.html',\n  styleUrls: ['tooltip-modified-defaults-example.css'],\n  providers: [\n    {provide: MAT_TOOLTIP_DEFAULT_OPTIONS, useValue: myCustomTooltipDefaults}\n  ],\n})\nexport class TooltipModifiedDefaultsExample {}\n\t\t",cssCode:"",viewCode:"",isCodeVisible:!1},Ti={beforeCodeTitle:"Tooltip that can be manually shown/hidden.",htmlCode:'\n<button mat-raised-button (click)="tooltip.show()"> Show tooltip </button>\n<span matTooltip="This is the tooltip message" #tooltip="matTooltip">\n  I have a tooltip\n</span>\n\t\t',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Tooltip that can be manually shown/hidden.\n*/\n@Component({\n  selector: 'tooltip-manual-example',\n  templateUrl: 'tooltip-manual-example.html',\n  styleUrls: ['tooltip-manual-example.css'],\n})\nexport class TooltipManualExample {}\n\t\t",viewCode:"",isCodeVisible:!1},Ii=((si=function(){function e(){o(this,e),this.position="before"}return a(e,[{key:"ngOnInit",value:function(){this.exampleBasic=Ni,this.exampleCustomPosition=ki,this.exampleShowHigh=Mi,this.exampleDelay=Si,this.exampleManually=Ti}}]),e}()).\u0275fac=function(e){return new(e||si)},si.\u0275cmp=c.Kb({type:si,selectors:[["app-material-tooltip"]],decls:86,vars:8,consts:[[3,"svg"],["href","https://material.angular.io/components/tooltip/overview","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-6"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],["matTooltip","Tooltip!"],["matTooltip","Tooltip!",1,"example-tooltip-host",3,"matTooltipPosition"],[1,"example-select",3,"ngModel","ngModelChange"],["value","before"],["value","after"],["value","above"],["value","below"],["value","left"],["value","right"],["color","primary","mat-raised-button","","matTooltip","Tooltip!","matTooltipShowDelay","1000",1,"mr-3"],["color","accent","mat-raised-button","","matTooltip","Tooltip!","matTooltipHideDelay","2000"],["mat-raised-button","","matTooltip","By default, I delay"],["mat-raised-button","",1,"mr-2",3,"click"],["matTooltip","This is the tooltip message"],["tooltip","matTooltip"]],template:function(e,t){if(1&e){var n=c.Xb();c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"span"),c.Nc(9," The Angular Material tooltip provides a text label that is displayed when the user hovers over or longpresses an element. "),c.Vb(),c.Rb(10,"div",6),c.Wb(11,"div"),c.Wb(12,"span",7),c.Nc(13,"I have a tooltip"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(14,"app-code-preview",4),c.Wb(15,"div",5),c.Wb(16,"div"),c.Wb(17,"div",8),c.Wb(18,"span"),c.Nc(19,"Show tooltip:"),c.Vb(),c.Nc(20,"\xa0\xa0 "),c.Wb(21,"mat-form-field"),c.Wb(22,"mat-select",9),c.gc("ngModelChange",function(e){return t.position=e}),c.Wb(23,"mat-option",10),c.Nc(24,"Before"),c.Vb(),c.Wb(25,"mat-option",11),c.Nc(26,"After"),c.Vb(),c.Wb(27,"mat-option",12),c.Nc(28,"Above"),c.Vb(),c.Wb(29,"mat-option",13),c.Nc(30,"Below"),c.Vb(),c.Wb(31,"mat-option",14),c.Nc(32,"Left"),c.Vb(),c.Wb(33,"mat-option",15),c.Nc(34,"Right"),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(35,"app-code-preview",4),c.Wb(36,"div",5),c.Wb(37,"span"),c.Wb(38,"b"),c.Nc(39,"Show and hide delays:"),c.Vb(),c.Nc(40," To add a delay before showing or hiding the tooltip, you can use the inputs "),c.Wb(41,"mark"),c.Nc(42,"matTooltipShowDelay"),c.Vb(),c.Nc(43," and "),c.Wb(44,"mark"),c.Nc(45,"matTooltipHideDelay"),c.Vb(),c.Nc(46," to provide a delay time in milliseconds. "),c.Vb(),c.Rb(47,"div",6),c.Wb(48,"div"),c.Wb(49,"button",16),c.Nc(50," My tooltip waits one second to show "),c.Vb(),c.Wb(51,"button",17),c.Nc(52," My tooltip waits two seconds to hide "),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(53,"div",3),c.Wb(54,"app-code-preview",4),c.Wb(55,"div",5),c.Wb(56,"span"),c.Wb(57,"b"),c.Nc(58,"Changing the default delay behavior:"),c.Vb(),c.Nc(59," You can configure your app's tooltip default show/hide delays by configuring and providing your options using the "),c.Wb(60,"mark"),c.Nc(61,"MAT_TOOLTIP_DEFAULT_OPTIONS"),c.Vb(),c.Nc(62," injection token. "),c.Vb(),c.Rb(63,"div",6),c.Wb(64,"div"),c.Wb(65,"button",18),c.Nc(66," Button with delay-default tooltip "),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(67,"app-code-preview",4),c.Wb(68,"div",5),c.Wb(69,"span"),c.Wb(70,"b"),c.Nc(71,"Manually calling show() and hide():"),c.Vb(),c.Nc(72," To manually cause the tooltip to show or hide, you can call the "),c.Wb(73,"mark"),c.Nc(74,"show"),c.Vb(),c.Nc(75," and "),c.Wb(76,"mark"),c.Nc(77,"hide"),c.Vb(),c.Nc(78," directive methods, which both accept a number in milliseconds to delay before applying the display change. "),c.Vb(),c.Rb(79,"div",6),c.Wb(80,"div"),c.Wb(81,"button",19),c.gc("click",function(){return c.Bc(n),c.yc(84).show()}),c.Nc(82," Show tooltip "),c.Vb(),c.Wb(83,"span",20,21),c.Nc(85," I have a tooltip "),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()}2&e&&(c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleBasic),c.Cb(8),c.qc("viewItem",t.exampleCustomPosition),c.Cb(3),c.qc("matTooltipPosition",t.position),c.Cb(5),c.qc("ngModel",t.position),c.Cb(13),c.qc("viewItem",t.exampleShowHigh),c.Cb(19),c.qc("viewItem",t.exampleDelay),c.Cb(13),c.qc("viewItem",t.exampleManually))},directives:[h.a,g.a,yi.a,f.c,ve.a,d.o,d.r,w.o,X.b],encapsulation:2}),si),Di=i("2ChS"),Fi=((mi=function(){function e(t){o(this,e),this.bottomSheetRef=t}return a(e,[{key:"openLink",value:function(e){this.bottomSheetRef.dismiss(),e.preventDefault()}}]),e}()).\u0275fac=function(e){return new(e||mi)(c.Qb(Di.d))},mi.\u0275cmp=c.Kb({type:mi,selectors:[["app-material-bottom-sheet-example"]],decls:21,vars:0,consts:[["href","https://keep.google.com/","mat-list-item","",3,"click"],["mat-line",""],["href","https://docs.google.com/","mat-list-item","",3,"click"],["href","https://plus.google.com/","mat-list-item","",3,"click"],["href","https://hangouts.google.com/","mat-list-item","",3,"click"]],template:function(e,t){1&e&&(c.Wb(0,"mat-nav-list"),c.Wb(1,"a",0),c.gc("click",function(e){return t.openLink(e)}),c.Wb(2,"span",1),c.Nc(3,"Google Keep"),c.Vb(),c.Wb(4,"span",1),c.Nc(5,"Add to a note"),c.Vb(),c.Vb(),c.Wb(6,"a",2),c.gc("click",function(e){return t.openLink(e)}),c.Wb(7,"span",1),c.Nc(8,"Google Docs"),c.Vb(),c.Wb(9,"span",1),c.Nc(10,"Embed in a document"),c.Vb(),c.Vb(),c.Wb(11,"a",3),c.gc("click",function(e){return t.openLink(e)}),c.Wb(12,"span",1),c.Nc(13,"Google Plus"),c.Vb(),c.Wb(14,"span",1),c.Nc(15,"Share with your friends"),c.Vb(),c.Vb(),c.Wb(16,"a",4),c.gc("click",function(e){return t.openLink(e)}),c.Wb(17,"span",1),c.Nc(18,"Google Hangouts"),c.Vb(),c.Wb(19,"span",1),c.Nc(20,"Show to your coworkers"),c.Vb(),c.Vb(),c.Vb())},directives:[wn.g,wn.c,w.k],encapsulation:2}),mi),Ei={beforeCodeTitle:"Bottom Sheet Overview",htmlCode:"\nimport {Component} from '@angular/core';\nimport {MatBottomSheet, MatBottomSheetRef} from '@angular/material';\n\n/**\n* @title Bottom Sheet Overview\n@Component({\n  selector: 'bottom-sheet-overview-example',\n  templateUrl: 'bottom-sheet-overview-example.html',\n  styleUrls: ['bottom-sheet-overview-example.css'],\n})\nexport class BottomSheetOverviewExample {\n  constructor(private bottomSheet: MatBottomSheet) {}\n\n  openBottomSheet(): void {\n    this.bottomSheet.open(BottomSheetOverviewExampleSheet);\n  }\n}\n\n\n@Component({\n  selector: 'bottom-sheet-overview-example-sheet',\n  templateUrl: 'bottom-sheet-overview-example-sheet.html',\n})\nexport class BottomSheetOverviewExampleSheet {\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheetOverviewExampleSheet>) {}\n\n  openLink(event: MouseEvent): void {\n    this.bottomSheetRef.dismiss();\n    event.preventDefault();\n  }\n}",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},Oi=((ci=function(){function e(t){o(this,e),this.bottomSheet=t}return a(e,[{key:"openBottomSheet",value:function(){this.bottomSheet.open(Fi)}},{key:"ngOnInit",value:function(){this.exampleBasic=Ei}}]),e}()).\u0275fac=function(e){return new(e||ci)(c.Qb(Di.b))},ci.\u0275cmp=c.Kb({type:ci,selectors:[["app-material-bottom-sheet"]],decls:29,vars:2,consts:[[3,"svg"],["href","https://material.angular.io/components/bottom-sheet/","target","_blank",1,"font-weight-bold"],[1,"row"],[1,"col-xl-12"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],["mat-raised-button","",3,"click"]],template:function(e,t){1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"div",2),c.Wb(5,"div",3),c.Wb(6,"app-code-preview",4),c.Wb(7,"div",5),c.Wb(8,"span"),c.Nc(9," The "),c.Wb(10,"code"),c.Nc(11,"MatBottomSheet"),c.Vb(),c.Nc(12," service can be used to open Material Design panels to the bottom of the screen. These panels are intended primarily as an interaction on mobile devices where they can be used as an alternative to dialogs and menus. "),c.Vb(),c.Wb(13,"span"),c.Nc(14," You can open a bottom sheet by calling the "),c.Wb(15,"code"),c.Nc(16,"open"),c.Vb(),c.Nc(17," method with a component to be loaded and an optional config object. The "),c.Wb(18,"code"),c.Nc(19,"open"),c.Vb(),c.Nc(20," method will return an instance of "),c.Wb(21,"code"),c.Nc(22,"MatBottomSheetRef"),c.Vb(),c.Vb(),c.Rb(23,"div",6),c.Wb(24,"div"),c.Wb(25,"p"),c.Nc(26,'You have receive a file called "cat-picture.jpeg".'),c.Vb(),c.Wb(27,"button",7),c.gc("click",function(){return t.openBottomSheet()}),c.Nc(28," Open file "),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e&&(c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(6),c.qc("viewItem",t.exampleBasic))},directives:[h.a,g.a,X.b],encapsulation:2}),ci),qi=i("M9IT");function Li(e,t){if(1&e&&(c.Wb(0,"div"),c.Wb(1,"h5"),c.Nc(2,"Page Change Event Properties"),c.Vb(),c.Wb(3,"div"),c.Nc(4),c.Vb(),c.Wb(5,"div"),c.Nc(6),c.Vb(),c.Wb(7,"div"),c.Nc(8),c.Vb(),c.Vb()),2&e){var n=c.kc();c.Cb(4),c.Pc("List length: ",n.pageEvent.length,""),c.Cb(2),c.Pc("Page size: ",n.pageEvent.pageSize,""),c.Cb(2),c.Pc("Page index: ",n.pageEvent.pageIndex,"")}}var Ai,Ri=function(){return[5,10,25,100]},Pi={beforeCodeTitle:"Paginator",htmlCode:'\n<mat-paginator [length]="100"\n  [pageSize]="10"\n  [pageSizeOptions]="[5, 10, 25, 100]">\n</mat-paginator>',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Paginator\n*/\n@Component({\n  selector: 'paginator-overview-example',\n  templateUrl: 'paginator-overview-example.html',\n  styleUrls: ['paginator-overview-example.css'],\n})\nexport class PaginatorOverviewExample {}",cssCode:"",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},_i={beforeCodeTitle:"Configurable paginatorn",htmlCode:'\n<mat-form-field>\n  List length:\n  <input matInput [(ngModel)]="length">\n</mat-form-field>\n  <mat-form-field>\n    Page size:\n    <input matInput [(ngModel)]="pageSize">\n  </mat-form-field>\n  <mat-form-field>\n    Page size options:\n    <input matInput\n      [ngModel]="pageSizeOptions"\n      (ngModelChange)="setPageSizeOptions($event)">\n  </mat-form-field>\n  <mat-paginator [length]="length"\n    [pageSize]="pageSize"\n    [pageSizeOptions]="pageSizeOptions"\n    (page)="pageEvent = $event">\n  </mat-paginator>\n  <div *ngIf="pageEvent">\n    <h5>Page Change Event Properties</h5>\n    <div>List length: {{pageEvent.length}}</div>\n    <div>Page size: {{pageEvent.pageSize}}</div>\n    <div>Page index: {{pageEvent.pageIndex}}</div>\n</div>',tsCode:"\nimport {Component} from '@angular/core';\nimport {PageEvent} from '@angular/material';\n\n/**\n* @title Configurable paginator\n*/\n@Component({\n  selector: 'paginator-configurable-example',\n  templateUrl: 'paginator-configurable-example.html',\n  styleUrls: ['paginator-configurable-example.css'],\n})\nexport class PaginatorConfigurableExample {\n  // MatPaginator Inputs\n  length = 100;\n  pageSize = 10;\n  pageSizeOptions = [5, 10, 25, 100];\n\n  // MatPaginator Output\n  pageEvent: PageEvent;\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\n    this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n  }\n}",cssCode:"",viewCode:"",isCodeVisible:!1},Bi=((Ai=function(){function e(){o(this,e),this.length=100,this.pageSize=10,this.pageSizeOptions=[5,10,25,100]}return a(e,[{key:"ngOnInit",value:function(){this.exampleBasic=Pi,this.exampleConfig=_i}},{key:"setPageSizeOptions",value:function(e){this.pageSizeOptions=e.split(",").map(function(e){return+e})}}]),e}()).\u0275fac=function(e){return new(e||Ai)},Ai.\u0275cmp=c.Kb({type:Ai,selectors:[["app-material-paginator"]],decls:27,vars:14,consts:[[3,"svg"],["href","https://material.angular.io/components/paginator/examples","target","_blank",1,"font-weight-bold"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],[3,"length","pageSize","pageSizeOptions"],["matInput","",3,"ngModel","ngModelChange"],[3,"length","pageSize","pageSizeOptions","page"],[4,"ngIf"]],template:function(e,t){1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"app-code-preview",2),c.Wb(5,"div",3),c.Wb(6,"p"),c.Wb(7,"code"),c.Nc(8,"<mat-paginator>"),c.Vb(),c.Nc(9," provides navigation for paged information, typically used with a table. "),c.Vb(),c.Rb(10,"div",4),c.Wb(11,"div"),c.Rb(12,"mat-paginator",5),c.Vb(),c.Vb(),c.Vb(),c.Wb(13,"app-code-preview",2),c.Wb(14,"div",3),c.Wb(15,"div"),c.Wb(16,"mat-form-field"),c.Nc(17," List length: "),c.Wb(18,"input",6),c.gc("ngModelChange",function(e){return t.length=e}),c.Vb(),c.Vb(),c.Wb(19,"mat-form-field"),c.Nc(20," Page size: "),c.Wb(21,"input",6),c.gc("ngModelChange",function(e){return t.pageSize=e}),c.Vb(),c.Vb(),c.Wb(22,"mat-form-field"),c.Nc(23," Page size options: "),c.Wb(24,"input",6),c.gc("ngModelChange",function(e){return t.setPageSizeOptions(e)}),c.Vb(),c.Vb(),c.Wb(25,"mat-paginator",7),c.gc("page",function(e){return t.pageEvent=e}),c.Vb(),c.Lc(26,Li,9,3,"div",8),c.Vb(),c.Vb(),c.Vb()),2&e&&(c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(4),c.qc("viewItem",t.exampleBasic),c.Cb(8),c.qc("length",100)("pageSize",10)("pageSizeOptions",c.tc(13,Ri)),c.Cb(1),c.qc("viewItem",t.exampleConfig),c.Cb(5),c.qc("ngModel",t.length),c.Cb(3),c.qc("ngModel",t.pageSize),c.Cb(3),c.qc("ngModel",t.pageSizeOptions),c.Cb(1),c.qc("length",t.length)("pageSize",t.pageSize)("pageSizeOptions",t.pageSizeOptions),c.Cb(1),c.qc("ngIf",t.pageEvent))},directives:[h.a,g.a,qi.a,f.c,v.b,d.d,d.o,d.r,s.n],encapsulation:2,changeDetection:0}),Ai),Ui=i("+0xr"),zi=i("Dh3D"),ji=["sort1"],Hi=["sort2"];function Gi(e,t){if(1&e&&(c.Wb(0,"tr"),c.Wb(1,"td"),c.Nc(2),c.Vb(),c.Wb(3,"td"),c.Nc(4),c.Vb(),c.Wb(5,"td"),c.Nc(6),c.Vb(),c.Wb(7,"td"),c.Nc(8),c.Vb(),c.Wb(9,"td"),c.Nc(10),c.Vb(),c.Vb()),2&e){var n=t.$implicit;c.Cb(2),c.Oc(n.name),c.Cb(2),c.Oc(n.calories),c.Cb(2),c.Oc(n.fat),c.Cb(2),c.Oc(n.carbs),c.Cb(2),c.Oc(n.protein)}}function $i(e,t){1&e&&(c.Wb(0,"mat-header-cell",24),c.Nc(1," No. "),c.Vb())}function Ki(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.position," ")}}function Yi(e,t){1&e&&(c.Wb(0,"mat-header-cell",24),c.Nc(1," Name "),c.Vb())}function Ji(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.name," ")}}function Qi(e,t){1&e&&(c.Wb(0,"mat-header-cell",24),c.Nc(1," Weight "),c.Vb())}function Xi(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.weight," ")}}function Zi(e,t){1&e&&(c.Wb(0,"mat-header-cell",24),c.Nc(1," Symbol "),c.Vb())}function el(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.symbol," ")}}function tl(e,t){1&e&&c.Rb(0,"mat-header-row")}function nl(e,t){1&e&&c.Rb(0,"mat-row")}var al={beforeCodeTitle:"Sorting overview",htmlCode:'\n<table matSort (matSortChange)="sortData($event)">\n  <tr>\n    <th mat-sort-header="name">Dessert (100g)</th>\n    <th mat-sort-header="calories">Calories</th>\n    <th mat-sort-header="fat">Fat (g)</th>\n    <th mat-sort-header="carbs">Carbs (g)</th>\n    <th mat-sort-header="protein">Protein (g)</th>\n  </tr>\n  <tr *ngFor="let dessert of sortedData">\n    <td>{{dessert.name}}</td>\n    <td>{{dessert.calories}}</td>\n    <td>{{dessert.fat}}</td>\n    <td>{{dessert.carbs}}</td>\n    <td>{{dessert.protein}}</td>\n  </tr>\n</table>',tsCode:"\nimport {Component} from '@angular/core';\nimport {Sort} from '@angular/material';\n\n/**\n* @title Sorting overview\n*/\n@Component({\n  selector: 'sort-overview-example',\n  templateUrl: 'sort-overview-example.html',\n  styleUrls: ['sort-overview-example.css'],\n})\nexport class SortOverviewExample {\n  desserts = [\n    {name: 'Frozen yogurt', calories: '159', fat: '6', carbs: '24', protein: '4'},\n    {name: 'Ice cream sandwich', calories: '237', fat: '9', carbs: '37', protein: '4'},\n    {name: 'Eclair', calories: '262', fat: '16', carbs: '24', protein: '6'},\n    {name: 'Cupcake', calories: '305', fat: '4', carbs: '67', protein: '4'},\n    {name: 'Gingerbread', calories: '356', fat: '16', carbs: '49', protein: '4'},\n  ];\n\n  sortedData;\n\n  constructor() {\n    this.sortedData = this.desserts.slice();\n  }\n\n  sortData(sort: Sort) {\n    const data = this.desserts.slice();\n    if (!sort.active || sort.direction == '') {\n      this.sortedData = data;\n      return;\n    }\n\n    this.sortedData = data.sort((a, b) => {\n      let isAsc = sort.direction == 'asc';\n      switch (sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'calories': return compare(+a.calories, +b.calories, isAsc);\n        case 'fat': return compare(+a.fat, +b.fat, isAsc);\n        case 'carbs': return compare(+a.carbs, +b.carbs, isAsc);\n        case 'protein': return compare(+a.protein, +b.protein, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}",cssCode:"\n.mat-sort-header-container {\n  align-items: center;\n}",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},ol={beforeCodeTitle:"Table with sorting",htmlCode:'\n<div class="example-container mat-elevation-z8">\n  <mat-table #table [dataSource]="dataSource" matSort>\n  \x3c!-- Position Column --\x3e\n  <ng-container matColumnDef="position">\n    <mat-header-cell *matHeaderCellDef mat-sort-header> No. </mat-header-cell>\n    <mat-cell *matCellDef="let element"> {{element.position}} </mat-cell>\n  </ng-container>\n  \x3c!-- Name Column --\x3e\n  <ng-container matColumnDef="name">\n    <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\n    <mat-cell *matCellDef="let element"> {{element.name}} </mat-cell>\n  </ng-container>\n  \x3c!-- Weight Column --\x3e\n  <ng-container matColumnDef="weight">\n    <mat-header-cell *matHeaderCellDef mat-sort-header> Weight </mat-header-cell>\n    <mat-cell *matCellDef="let element"> {{element.weight}} </mat-cell>\n  </ng-container>\n  \x3c!-- Symbol Column --\x3e\n  <ng-container matColumnDef="symbol">\n    <mat-header-cell *matHeaderCellDef mat-sort-header> Symbol </mat-header-cell>\n    <mat-cell *matCellDef="let element"> {{element.symbol}} </mat-cell>\n  </ng-container>\n  <mat-header-row *matHeaderRowDef="displayedColumns"></mat-header-row>\n  <mat-row *matRowDef="let row; columns: displayedColumns;"></mat-row>\n  </mat-table>\n</div>',tsCode:"\nimport {Component, ViewChild} from '@angular/core';\nimport {MatTableDataSource, MatSort} from '@angular/material';\n\n/**\n* @title Table with sorting\n*/\n@Component({\n  selector: 'table-sorting-example',\n  styleUrls: ['table-sorting-example.css'],\n  templateUrl: 'table-sorting-example.html',\n})\nexport class TableSortingExample {\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  /**\n  * Set the sort after the view init since this component will\n  * be able to query its view for the initialized sort.\n  */\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n}\nexport interface Element {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: Element[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\n];",cssCode:"\n.example-container {\n  display: flex;\n  flex-direction: column;\n  min-width: 300px;\n}\n.mat-table {\n  overflow: auto;\n  max-height: 500px;\n}\n.mat-header-cell.mat-sort-header-sorted {\n  color: black;\n}",viewCode:"",isCodeVisible:!1},il=[{position:1,name:"Hydrogen",weight:1.0079,symbol:"H"},{position:2,name:"Helium",weight:4.0026,symbol:"He"},{position:3,name:"Lithium",weight:6.941,symbol:"Li"},{position:4,name:"Beryllium",weight:9.0122,symbol:"Be"},{position:5,name:"Boron",weight:10.811,symbol:"B"},{position:6,name:"Carbon",weight:12.0107,symbol:"C"},{position:7,name:"Nitrogen",weight:14.0067,symbol:"N"},{position:8,name:"Oxygen",weight:15.9994,symbol:"O"},{position:9,name:"Fluorine",weight:18.9984,symbol:"F"},{position:10,name:"Neon",weight:20.1797,symbol:"Ne"},{position:11,name:"Sodium",weight:22.9897,symbol:"Na"},{position:12,name:"Magnesium",weight:24.305,symbol:"Mg"},{position:13,name:"Aluminum",weight:26.9815,symbol:"Al"},{position:14,name:"Silicon",weight:28.0855,symbol:"Si"},{position:15,name:"Phosphorus",weight:30.9738,symbol:"P"},{position:16,name:"Sulfur",weight:32.065,symbol:"S"},{position:17,name:"Chlorine",weight:35.453,symbol:"Cl"},{position:18,name:"Argon",weight:39.948,symbol:"Ar"},{position:19,name:"Potassium",weight:39.0983,symbol:"K"},{position:20,name:"Calcium",weight:40.078,symbol:"Ca"}];function ll(e,t,n){return(e<t?-1:1)*(n?1:-1)}var rl,sl=((rl=function(){function e(){o(this,e),this.displayedColumns=["position","name","weight","symbol"],this.dataSource=new Ui.k(il),this.desserts=[{name:"Frozen yogurt",calories:"159",fat:"6",carbs:"24",protein:"4"},{name:"Ice cream sandwich",calories:"237",fat:"9",carbs:"37",protein:"4"},{name:"Eclair",calories:"262",fat:"16",carbs:"24",protein:"6"},{name:"Cupcake",calories:"305",fat:"4",carbs:"67",protein:"4"},{name:"Gingerbread",calories:"356",fat:"16",carbs:"49",protein:"4"}],this.sortedData=this.desserts.slice()}return a(e,[{key:"ngOnInit",value:function(){this.exampleBasic=al,this.exampleConfig=ol}},{key:"ngAfterViewInit",value:function(){this.dataSource.sort=this.sort2}},{key:"sortData",value:function(e){var t=this.desserts.slice();this.sortedData=e.active&&""!==e.direction?t.sort(function(t,n){var a="asc"===e.direction;switch(e.active){case"name":return ll(t.name,n.name,a);case"calories":return ll(+t.calories,+n.calories,a);case"fat":return ll(+t.fat,+n.fat,a);case"carbs":return ll(+t.carbs,+n.carbs,a);case"protein":return ll(+t.protein,+n.protein,a);default:return 0}}):t}}]),e}()).\u0275fac=function(e){return new(e||rl)},rl.\u0275cmp=c.Kb({type:rl,selectors:[["app-material-sort-header"]],viewQuery:function(e,t){var n;1&e&&(c.Gc(ji,!0),c.Gc(Hi,!0)),2&e&&(c.xc(n=c.hc())&&(t.sort1=n.first),c.xc(n=c.hc())&&(t.sort2=n.first))},decls:51,vars:7,consts:[[3,"svg"],["href","https://material.angular.io/components/sort/overview","target","_blank",1,"font-weight-bold"],[3,"viewItem"],[1,"example-preview"],[1,"separator","separator-dashed","my-6"],["matSort","",3,"matSortChange"],["sort1","matSort"],["mat-sort-header","name"],["mat-sort-header","calories"],["mat-sort-header","fat"],["mat-sort-header","carbs"],["mat-sort-header","protein"],[4,"ngFor","ngForOf"],[1,"example-container","mat-elevation-z8"],["matSort","",3,"dataSource"],["table","","sort2","matSort"],["matColumnDef","position"],["mat-sort-header","",4,"matHeaderCellDef"],[4,"matCellDef"],["matColumnDef","name"],["matColumnDef","weight"],["matColumnDef","symbol"],[4,"matHeaderRowDef"],[4,"matRowDef","matRowDefColumns"],["mat-sort-header",""]],template:function(e,t){1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"app-code-preview",2),c.Wb(5,"div",3),c.Wb(6,"p"),c.Nc(7," The "),c.Wb(8,"mark"),c.Nc(9,"matSort"),c.Vb(),c.Nc(10," and "),c.Wb(11,"mark"),c.Nc(12,"mat-sort-header"),c.Vb(),c.Nc(13," are used, respectively, to add sorting state and display to tabular data. "),c.Vb(),c.Rb(14,"div",4),c.Wb(15,"div"),c.Wb(16,"table",5,6),c.gc("matSortChange",function(e){return t.sortData(e)}),c.Wb(18,"tr"),c.Wb(19,"th",7),c.Nc(20,"Dessert (100g)"),c.Vb(),c.Wb(21,"th",8),c.Nc(22,"Calories"),c.Vb(),c.Wb(23,"th",9),c.Nc(24,"Fat (g)"),c.Vb(),c.Wb(25,"th",10),c.Nc(26,"Carbs (g)"),c.Vb(),c.Wb(27,"th",11),c.Nc(28,"Protein (g)"),c.Vb(),c.Vb(),c.Lc(29,Gi,11,5,"tr",12),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(30,"app-code-preview",2),c.Wb(31,"div",3),c.Wb(32,"div"),c.Wb(33,"div",13),c.Wb(34,"mat-table",14,15),c.Ub(37,16),c.Lc(38,$i,2,0,"mat-header-cell",17),c.Lc(39,Ki,2,1,"mat-cell",18),c.Tb(),c.Ub(40,19),c.Lc(41,Yi,2,0,"mat-header-cell",17),c.Lc(42,Ji,2,1,"mat-cell",18),c.Tb(),c.Ub(43,20),c.Lc(44,Qi,2,0,"mat-header-cell",17),c.Lc(45,Xi,2,1,"mat-cell",18),c.Tb(),c.Ub(46,21),c.Lc(47,Zi,2,0,"mat-header-cell",17),c.Lc(48,el,2,1,"mat-cell",18),c.Tb(),c.Lc(49,tl,1,0,"mat-header-row",22),c.Lc(50,nl,1,0,"mat-row",23),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb()),2&e&&(c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(4),c.qc("viewItem",t.exampleBasic),c.Cb(25),c.qc("ngForOf",t.sortedData),c.Cb(1),c.qc("viewItem",t.exampleConfig),c.Cb(4),c.qc("dataSource",t.dataSource),c.Cb(15),c.qc("matHeaderRowDef",t.displayedColumns),c.Cb(1),c.qc("matRowDefColumns",t.displayedColumns))},directives:[h.a,g.a,zi.a,zi.b,s.m,Ui.j,Ui.c,Ui.e,Ui.b,Ui.g,Ui.i,Ui.d,Ui.a,Ui.f,Ui.h],styles:[".mat-sort-header-container[_ngcontent-%COMP%] {\n        align-items: center;\n      }\n      .example-container[_ngcontent-%COMP%] {\n        display: flex;\n        flex-direction: column;\n        min-width: 300px;\n      }\n      .mat-table[_ngcontent-%COMP%] {\n        overflow: auto;\n        max-height: 500px;\n      }\n      .mat-header-cell.mat-sort-header-sorted[_ngcontent-%COMP%] {\n        color: black;\n      }"],changeDetection:0}),rl),ml=i("eIep"),cl=i("JIr8"),pl=i("tk/3"),dl=["matPaginator2"],bl=["matPaginator6"],ul=["matPaginator7"],hl=["sort3"],gl=["sort6"],fl=["sort7"];function vl(e,t){1&e&&(c.Wb(0,"mat-header-cell"),c.Nc(1," No. "),c.Vb())}function Cl(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.position," ")}}function xl(e,t){1&e&&(c.Wb(0,"mat-header-cell"),c.Nc(1," Name "),c.Vb())}function wl(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.name," ")}}function Vl(e,t){1&e&&(c.Wb(0,"mat-header-cell"),c.Nc(1," Weight "),c.Vb())}function Wl(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.weight," ")}}function yl(e,t){1&e&&(c.Wb(0,"mat-header-cell"),c.Nc(1," Symbol "),c.Vb())}function Nl(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.symbol," ")}}function kl(e,t){1&e&&c.Rb(0,"mat-header-row")}function Ml(e,t){1&e&&c.Rb(0,"mat-row")}function Sl(e,t){1&e&&(c.Wb(0,"mat-header-cell"),c.Nc(1," No. "),c.Vb())}function Tl(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.position," ")}}function Il(e,t){1&e&&(c.Wb(0,"mat-header-cell"),c.Nc(1," Name "),c.Vb())}function Dl(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.name," ")}}function Fl(e,t){1&e&&(c.Wb(0,"mat-header-cell"),c.Nc(1," Weight "),c.Vb())}function El(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.weight," ")}}function Ol(e,t){1&e&&(c.Wb(0,"mat-header-cell"),c.Nc(1," Symbol "),c.Vb())}function ql(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.symbol," ")}}function Ll(e,t){1&e&&c.Rb(0,"mat-header-row")}function Al(e,t){1&e&&c.Rb(0,"mat-row")}function Rl(e,t){1&e&&(c.Wb(0,"mat-header-cell",47),c.Nc(1," No. "),c.Vb())}function Pl(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.position," ")}}function _l(e,t){1&e&&(c.Wb(0,"mat-header-cell",47),c.Nc(1," Name "),c.Vb())}function Bl(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.name," ")}}function Ul(e,t){1&e&&(c.Wb(0,"mat-header-cell",47),c.Nc(1," Weight "),c.Vb())}function zl(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.weight," ")}}function jl(e,t){1&e&&(c.Wb(0,"mat-header-cell",47),c.Nc(1," Symbol "),c.Vb())}function Hl(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.symbol," ")}}function Gl(e,t){1&e&&c.Rb(0,"mat-header-row")}function $l(e,t){1&e&&c.Rb(0,"mat-row")}function Kl(e,t){1&e&&(c.Wb(0,"mat-header-cell"),c.Nc(1," No. "),c.Vb())}function Yl(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.position," ")}}function Jl(e,t){1&e&&(c.Wb(0,"mat-header-cell"),c.Nc(1," Name "),c.Vb())}function Ql(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.name," ")}}function Xl(e,t){1&e&&(c.Wb(0,"mat-header-cell"),c.Nc(1," Weight "),c.Vb())}function Zl(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.weight," ")}}function er(e,t){1&e&&(c.Wb(0,"mat-header-cell"),c.Nc(1," Symbol "),c.Vb())}function tr(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.symbol," ")}}function nr(e,t){1&e&&c.Rb(0,"mat-header-row")}function ar(e,t){1&e&&c.Rb(0,"mat-row")}function or(e,t){if(1&e){var n=c.Xb();c.Wb(0,"mat-header-cell"),c.Wb(1,"mat-checkbox",48),c.gc("change",function(e){c.Bc(n);var t=c.kc();return e?t.masterToggle5():null}),c.Vb(),c.Vb()}if(2&e){var a=c.kc();c.Cb(1),c.qc("checked",a.selection.hasValue()&&a.isAllSelected5())("indeterminate",a.selection.hasValue()&&!a.isAllSelected5())}}function ir(e,t){if(1&e){var n=c.Xb();c.Wb(0,"mat-cell"),c.Wb(1,"mat-checkbox",49),c.gc("click",function(e){return e.stopPropagation()})("change",function(e){c.Bc(n);var a=t.$implicit,o=c.kc();return e?o.selection.toggle(a):null}),c.Vb(),c.Vb()}if(2&e){var a=t.$implicit,o=c.kc();c.Cb(1),c.qc("checked",o.selection.isSelected(a))}}function lr(e,t){1&e&&(c.Wb(0,"mat-header-cell"),c.Nc(1," No. "),c.Vb())}function rr(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.position," ")}}function sr(e,t){1&e&&(c.Wb(0,"mat-header-cell"),c.Nc(1," Name "),c.Vb())}function mr(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.name," ")}}function cr(e,t){1&e&&(c.Wb(0,"mat-header-cell"),c.Nc(1," Weight "),c.Vb())}function pr(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.weight," ")}}function dr(e,t){1&e&&(c.Wb(0,"mat-header-cell"),c.Nc(1," Symbol "),c.Vb())}function br(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.symbol," ")}}function ur(e,t){1&e&&c.Rb(0,"mat-header-row")}function hr(e,t){if(1&e){var n=c.Xb();c.Wb(0,"mat-row",50),c.gc("click",function(){c.Bc(n);var e=t.$implicit;return c.kc().selection.toggle(e)}),c.Vb()}}function gr(e,t){1&e&&c.Rb(0,"mat-spinner")}function fr(e,t){1&e&&(c.Wb(0,"div",54),c.Nc(1," GitHub's API rate limit has been reached. It will be reset in one minute. "),c.Vb())}function vr(e,t){if(1&e&&(c.Wb(0,"div",51),c.Lc(1,gr,1,0,"mat-spinner",52),c.Lc(2,fr,2,0,"div",53),c.Vb()),2&e){var n=c.kc();c.Cb(1),c.qc("ngIf",n.isLoadingResults),c.Cb(1),c.qc("ngIf",n.isRateLimitReached)}}function Cr(e,t){1&e&&(c.Wb(0,"mat-header-cell"),c.Nc(1,"#"),c.Vb())}function xr(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Oc(n.number)}}function wr(e,t){1&e&&(c.Wb(0,"mat-header-cell"),c.Nc(1,"Title"),c.Vb())}function Vr(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Oc(n.title)}}function Wr(e,t){1&e&&(c.Wb(0,"mat-header-cell"),c.Nc(1,"State"),c.Vb())}function yr(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Oc(n.state)}}function Nr(e,t){1&e&&(c.Wb(0,"mat-header-cell",55),c.Nc(1," Created "),c.Vb())}function kr(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.lc(2,"date"),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Oc(c.mc(2,1,n.created_at))}}function Mr(e,t){1&e&&c.Rb(0,"mat-header-row")}function Sr(e,t){1&e&&c.Rb(0,"mat-row")}function Tr(e,t){1&e&&(c.Wb(0,"mat-header-cell",47),c.Nc(1," ID "),c.Vb())}function Ir(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.id," ")}}function Dr(e,t){1&e&&(c.Wb(0,"mat-header-cell",47),c.Nc(1," Progress "),c.Vb())}function Fr(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.progress,"% ")}}function Er(e,t){1&e&&(c.Wb(0,"mat-header-cell",47),c.Nc(1," Name "),c.Vb())}function Or(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Cb(1),c.Pc(" ",n.name," ")}}function qr(e,t){1&e&&(c.Wb(0,"mat-header-cell",47),c.Nc(1," Color "),c.Vb())}function Lr(e,t){if(1&e&&(c.Wb(0,"mat-cell"),c.Nc(1),c.Vb()),2&e){var n=t.$implicit;c.Ic("color",n.color),c.Cb(1),c.Pc(" ",n.color," ")}}function Ar(e,t){1&e&&c.Rb(0,"mat-header-row")}function Rr(e,t){1&e&&c.Rb(0,"mat-row")}var Pr,_r,Br=function(){return[5,10,20]},Ur=function(){return[5,10,25,100]},zr={beforeCodeTitle:"Basic table",htmlCode:'\n<div class="example-container mat-elevation-z8">\n  <mat-table #table [dataSource]="dataSource">\n    \x3c!--- Note that these columns can be defined in any order.\n\t\t\t\tThe actual rendered columns are set as a property on the row definition" --\x3e\n    \x3c!-- Position Column --\x3e\n    <ng-container matColumnDef="position">\n      <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\n      <mat-cell *matCellDef="let element"> {{element.position}} </mat-cell>\n\t</ng-container>\n\t\x3c!-- Name Column --\x3e\n    <ng-container matColumnDef="name">\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n      <mat-cell *matCellDef="let element"> {{element.name}} </mat-cell>\n    </ng-container>\n    \x3c!-- Weight Column --\x3e\n    <ng-container matColumnDef="weight">\n      <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\n      <mat-cell *matCellDef="let element"> {{element.weight}} </mat-cell>\n    </ng-container>\n    \x3c!-- Symbol Column --\x3e\n    <ng-container matColumnDef="symbol">\n      <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\n      <mat-cell *matCellDef="let element"> {{element.symbol}} </mat-cell>\n    </ng-container>\n    <mat-header-row *matHeaderRowDef="displayedColumns"></mat-header-row>\n    <mat-row *matRowDef="let row; columns: displayedColumns;"></mat-row>\n  </mat-table>\n</div>',tsCode:"\nimport {Component} from '@angular/core';\n\n/**\n* @title Basic table\n*/\n@Component({\n  selector: 'table-basic-example',\n  styleUrls: ['table-basic-example.css'],\n  templateUrl: 'table-basic-example.html',\n})\nexport class TableBasicExample {\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n}\nexport interface Element {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\nconst ELEMENT_DATA: Element[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\n];",cssCode:"\n.example-container {\n  display: flex;\n  flex-direction: column;\n  max-height: 500px;\n  min-width: 300px;\n}\n.mat-table {\n  overflow: auto;\n  max-height: 500px;\n}",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},jr={beforeCodeTitle:"Table with pagination",htmlCode:'\n<div class="example-container mat-elevation-z8">\n  <mat-table #table [dataSource]="dataSource">\n    \x3c!-- Position Column --\x3e\n    <ng-container matColumnDef="position">\n      <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\n      <mat-cell *matCellDef="let element"> {{element.position}} </mat-cell>\n    </ng-container>\n    \x3c!-- Name Column --\x3e\n    <ng-container matColumnDef="name">\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n      <mat-cell *matCellDef="let element"> {{element.name}} </mat-cell>\n    </ng-container>\n    \x3c!-- Weight Column --\x3e\n    <ng-container matColumnDef="weight">\n      <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\n      <mat-cell *matCellDef="let element"> {{element.weight}} </mat-cell>\n    </ng-container>\n    \x3c!-- Symbol Column --\x3e\n    <ng-container matColumnDef="symbol">\n      <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\n      <mat-cell *matCellDef="let element"> {{element.symbol}} </mat-cell>\n    </ng-container>\n    <mat-header-row *matHeaderRowDef="displayedColumns"></mat-header-row>\n    <mat-row *matRowDef="let row; columns: displayedColumns;"></mat-row>\n  </mat-table>\n  <mat-paginator #paginator\n    [pageSize]="10"\n    [pageSizeOptions]="[5, 10, 20]"\n    [showFirstLastButtons]="true">\n  </mat-paginator>\n</div>\n\t\t',tsCode:"\nimport {Component, ViewChild} from '@angular/core';\nimport {MatPaginator, MatTableDataSource} from '@angular/material';\n\n/**\n* @title Table with pagination\n*/\n@Component({\n  selector: 'table-pagination-example',\n  styleUrls: ['table-pagination-example.css'],\n  templateUrl: 'table-pagination-example.html',\n})\nexport class TablePaginationExample {\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource<Element>(ELEMENT_DATA);\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  /**\n  * Set the paginator after the view init since this component will\n  * be able to query its view for the initialized paginator.\n  */\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n}\n\nexport interface Element {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: Element[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\n];",cssCode:"\n.example-container {\n  display: flex;\n  flex-direction: column;\n  min-width: 300px;\n}\n.mat-table {\n  overflow: auto;\n  max-height: 500px;\n}",viewCode:"",isCodeVisible:!1},Hr={beforeCodeTitle:"Table with sorting",beforeCodeDescription:"",htmlCode:'\n<div class="example-container mat-elevation-z8">\n  <mat-table #table [dataSource]="dataSource" matSort>\n    \x3c!-- Position Column --\x3e\n    <ng-container matColumnDef="position">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> No. </mat-header-cell>\n      <mat-cell *matCellDef="let element"> {{element.position}} </mat-cell>\n    </ng-container>\n    \x3c!-- Name Column --\x3e\n    <ng-container matColumnDef="name">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\n      <mat-cell *matCellDef="let element"> {{element.name}} </mat-cell>\n    </ng-container>\n    \x3c!-- Weight Column --\x3e\n    <ng-container matColumnDef="weight">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Weight </mat-header-cell>\n      <mat-cell *matCellDef="let element"> {{element.weight}} </mat-cell>\n    </ng-container>\n    \x3c!-- Symbol Column --\x3e\n    <ng-container matColumnDef="symbol">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Symbol </mat-header-cell>\n      <mat-cell *matCellDef="let element"> {{element.symbol}} </mat-cell>\n    </ng-container>\n    <mat-header-row *matHeaderRowDef="displayedColumns"></mat-header-row>\n    <mat-row *matRowDef="let row; columns: displayedColumns;"></mat-row>\n  </mat-table>\n</div>',tsCode:"\nimport {Component, ViewChild} from '@angular/core';\nimport {MatTableDataSource, MatSort} from '@angular/material';\n\n/**\n* @title Table with sorting\n*/\n@Component({\n  selector: 'table-sorting-example',\n  styleUrls: ['table-sorting-example.css'],\n  templateUrl: 'table-sorting-example.html',\n})\nexport class TableSortingExample {\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n\n  /**\n  * Set the sort after the view init since this component will\n  * be able to query its view for the initialized sort.\n  */\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n}\n\n\nexport interface Element {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\n\nconst ELEMENT_DATA: Element[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\n];",cssCode:"\n.example-container {\n  display: flex;\n  flex-direction: column;\n  min-width: 300px;\n}\n.mat-table {\n  overflow: auto;\n  max-height: 500px;\n}\n.mat-header-cell.mat-sort-header-sorted {\n  color: black;\n}",viewCode:"",isCodeVisible:!1},Gr={beforeCodeTitle:"Table with filtering",htmlCode:'\n<div class="example-container mat-elevation-z8">\n  <div class="example-header">\n    <mat-form-field>\n      <input matInput (keyup)="applyFilter($event.target.value)" placeholder="Filter">\n    </mat-form-field>\n  </div>\n  <mat-table #table [dataSource]="dataSource">\n    \x3c!-- Position Column --\x3e\n    <ng-container matColumnDef="position">\n      <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\n      <mat-cell *matCellDef="let element"> {{element.position}} </mat-cell>\n    </ng-container>\n    \x3c!-- Name Column --\x3e\n    <ng-container matColumnDef="name">\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n      <mat-cell *matCellDef="let element"> {{element.name}} </mat-cell>\n    </ng-container>\n    \x3c!-- Weight Column --\x3e\n    <ng-container matColumnDef="weight">\n      <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\n      <mat-cell *matCellDef="let element"> {{element.weight}} </mat-cell>\n    </ng-container>\n    \x3c!-- Symbol Column --\x3e\n    <ng-container matColumnDef="symbol">\n      <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\n      <mat-cell *matCellDef="let element"> {{element.symbol}} </mat-cell>\n    </ng-container>\n    <mat-header-row *matHeaderRowDef="displayedColumns"></mat-header-row>\n    <mat-row *matRowDef="let row; columns: displayedColumns;"></mat-row>\n  </mat-table>\n</div>',tsCode:"\nimport {Component} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material';\n\n\n/**\n* @title Table with filtering\n*/\n@Component({\n  selector: 'table-filtering-example',\n  styleUrls: ['table-filtering-example.css'],\n  templateUrl: 'table-filtering-example.html',\n})\nexport class TableFilteringExample {\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n}\n\nexport interface Element {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\n\nconst ELEMENT_DATA: Element[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\n];",cssCode:"\n/* Structure */\n.example-container {\n  display: flex;\n  flex-direction: column;\n  min-width: 300px;\n}\n.example-header {\n  min-height: 64px;\n  padding: 8px 24px 0;\n}\n.mat-form-field {\n  font-size: 14px;\n  width: 100%;\n}\n.mat-table {\n  overflow: auto;\n  max-height: 500px;\n}",viewCode:"",isCodeVisible:!1},$r={beforeCodeTitle:"Table with selection",htmlCode:'\n<div class="example-container mat-elevation-z8">\n  <mat-table #table [dataSource]="dataSource">\n    \x3c!-- Checkbox Column --\x3e\n    <ng-container matColumnDef="select">\n      <mat-header-cell *matHeaderCellDef>\n        <mat-checkbox (change)="$event ? masterToggle() : null"\n          [checked]="selection.hasValue() && isAllSelected()"\n          [indeterminate]="selection.hasValue() && !isAllSelected()">\n        </mat-checkbox>\n      </mat-header-cell>\n      <mat-cell *matCellDef="let row">\n        <mat-checkbox (click)="$event.stopPropagation()"\n          (change)="$event ? selection.toggle(row) : null"\n          [checked]="selection.isSelected(row)">\n        </mat-checkbox>\n      </mat-cell>\n    </ng-container>\n    \x3c!-- Position Column --\x3e\n    <ng-container matColumnDef="position">\n      <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\n      <mat-cell *matCellDef="let element"> {{element.position}} </mat-cell>\n    </ng-container>\n    \x3c!-- Name Column --\x3e\n    <ng-container matColumnDef="name">\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n      <mat-cell *matCellDef="let element"> {{element.name}} </mat-cell>\n    </ng-container>\n    \x3c!-- Weight Column --\x3e\n    <ng-container matColumnDef="weight">\n      <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\n      <mat-cell *matCellDef="let element"> {{element.weight}} </mat-cell>\n    </ng-container>\n    \x3c!-- Symbol Column --\x3e\n    <ng-container matColumnDef="symbol">\n      <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\n      <mat-cell *matCellDef="let element"> {{element.symbol}} </mat-cell>\n    </ng-container>\n    <mat-header-row *matHeaderRowDef="displayedColumns"></mat-header-row>\n    <mat-row *matRowDef="let row; columns: displayedColumns;"\n      (click)="selection.toggle(row)">\n    </mat-row>\n  </mat-table>\n</div>',tsCode:"\nimport {Component} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material';\nimport {SelectionModel} from '@angular/cdk/collections';\n\n/**\n* @title Table with selection\n*/\n@Component({\n  selector: 'table-selection-example',\n  styleUrls: ['table-selection-example.css'],\n  templateUrl: 'table-selection-example.html',\n})\nexport class TableSelectionExample {\n  displayedColumns = ['select', 'position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource<Element>(ELEMENT_DATA);\n  selection = new SelectionModel<Element>(true, []);\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n    this.selection.clear() :\n    this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n}\n\nexport interface Element {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: Element[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\n];",viewCode:"",isCodeVisible:!1},Kr={beforeCodeTitle:"Data table with sorting, pagination, and filtering.",htmlCode:'\n<div class="example-header">\n  <mat-form-field>\n    <input matInput (keyup)="applyFilter($event.target.value)" placeholder="Filter">\n  </mat-form-field>\n</div>\n<div class="example-container mat-elevation-z8">\n  <mat-table [dataSource]="dataSource" matSort>\n    \x3c!-- ID Column --\x3e\n    <ng-container matColumnDef="id">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> ID </mat-header-cell>\n      <mat-cell *matCellDef="let row"> {{row.id}} </mat-cell>\n    </ng-container>\n    \x3c!-- Progress Column --\x3e\n    <ng-container matColumnDef="progress">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Progress </mat-header-cell>\n      <mat-cell *matCellDef="let row"> {{row.progress}}% </mat-cell>\n    </ng-container>\n    \x3c!-- Name Column --\x3e\n    <ng-container matColumnDef="name">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\n      <mat-cell *matCellDef="let row"> {{row.name}} </mat-cell>\n    </ng-container>\n    \x3c!-- Color Column --\x3e\n    <ng-container matColumnDef="color">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Color </mat-header-cell>\n      <mat-cell *matCellDef="let row" [style.color]="row.color"> {{row.color}} </mat-cell>\n    </ng-container>\n    <mat-header-row *matHeaderRowDef="displayedColumns"></mat-header-row>\n      <mat-row *matRowDef="let row; columns: displayedColumns;">\n    </mat-row>\n  </mat-table>\n  <mat-paginator [pageSizeOptions]="[5, 10, 25, 100]"></mat-paginator>\n</div>',tsCode:"\nimport {Component, ViewChild} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\n\n/**\n* @title Data table with sorting, pagination, and filtering.\n*/\n@Component({\n  selector: 'table-overview-example',\n  styleUrls: ['table-overview-example.css'],\n  templateUrl: 'table-overview-example.html',\n})\nexport class TableOverviewExample {\n  displayedColumns = ['id', 'name', 'progress', 'color'];\n  dataSource: MatTableDataSource<UserData>;\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor() {\n    // Create 100 users\n    const users: UserData[] = [];\n      for (let i = 1; i <= 100; i++) { users.push(createNewUser(i)); }\n\n      // Assign the data to the data source for the table to render\n      this.dataSource = new MatTableDataSource(users);\n  }\n\n  /**\n  * Set the paginator and sort after the view init since this component will\n  * be able to query its view for the initialized paginator and sort.\n  */\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n}\n\n\n/** Builds and returns a new User. */\nfunction createNewUser(id: number): UserData {\n  const name =\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n\n\n  return {\n    id: id.toString(),\n    name: name,\n    progress: Math.round(Math.random() * 100).toString(),\n    color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n   };\n}\n\n\n/** Constants used to fill up our data base. */\nconst COLORS = ['maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple',\n  'fuchsia', 'lime', 'teal', 'aqua', 'blue', 'navy', 'black', 'gray'];\nconst NAMES = ['Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack',\n  'Charlotte', 'Theodore', 'Isla', 'Oliver', 'Isabella', 'Jasper',\n  'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'];\n\nexport interface UserData {\n  id: string;\n  name: string;\n  progress: string;\n  color: string;\n}",cssCode:"\n.example-container {\n  display: flex;\n  flex-direction: column;\n  min-width: 300px;\n}\n.example-header {\n  min-height: 64px;\n  padding: 8px 24px 0;\n}\n.mat-form-field {\n  font-size: 14px;\n  width: 100%;\n}\n.mat-table {\n  overflow: auto;\n  max-height: 500px;\n}",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},Yr={beforeCodeTitle:"Table retrieving data through HTTP",htmlCode:'\n<div class="example-container mat-elevation-z8">\n  <div class="example-loading-shade"\n    *ngIf="isLoadingResults || isRateLimitReached">\n    <mat-spinner *ngIf="isLoadingResults"></mat-spinner>\n    <div class="example-rate-limit-reached" *ngIf="isRateLimitReached">\n\t  GitHub\'s API rate limit has been reached. It will be reset in one minute.\n    </div>\n  </div>\n  <mat-table #table [dataSource]="dataSource" class="example-table"\n    matSort matSortActive="created" matSortDisableClear matSortDirection="asc">\n    \x3c!--- Note that these columns can be defined in any order.\n    The actual rendered columns are set as a property on the row definition" --\x3e\n    \x3c!-- Number Column --\x3e\n    <ng-container matColumnDef="number">\n      <mat-header-cell *matHeaderCellDef>#</mat-header-cell>\n      <mat-cell *matCellDef="let row">{{row.number}}</mat-cell>\n    </ng-container>\n    \x3c!-- Title Column --\x3e\n    <ng-container matColumnDef="title">\n      <mat-header-cell *matHeaderCellDef>Title</mat-header-cell>\n      <mat-cell *matCellDef="let row">{{row.title}}</mat-cell>\n    </ng-container>\n    \x3c!-- State Column --\x3e\n    <ng-container matColumnDef="state">\n      <mat-header-cell *matHeaderCellDef>State</mat-header-cell>\n      <mat-cell *matCellDef="let row">{{row.state}}</mat-cell>\n    </ng-container>\n    \x3c!-- Created Column --\x3e\n    <ng-container matColumnDef="created">\n      <mat-header-cell *matHeaderCellDef\n        mat-sort-header\n        disableClear="true">\n        Created\n      </mat-header-cell>\n      <mat-cell *matCellDef="let row">{{row.created_at | date}}</mat-cell>\n    </ng-container>\n    <mat-header-row *matHeaderRowDef="displayedColumns"></mat-header-row>\n    <mat-row *matRowDef="let row; columns: displayedColumns;"></mat-row>\n  </mat-table>\n  <mat-paginator [length]="resultsLength" [pageSize]="30">\n  </mat-paginator>\n </div>',tsCode:"\nimport {Component, OnInit, ViewChild} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\nimport {Observable} from 'rxjs/Observable';\nimport {merge} from 'rxjs/observable/merge';\nimport {of as observableOf} from 'rxjs/observable/of';\nimport {catchError} from 'rxjs/operators/catchError';\nimport {map} from 'rxjs/operators/map';\nimport {startWith} from 'rxjs/operators/startWith';\nimport {switchMap} from 'rxjs/operators/switchMap';\n\n/**\n* @title Table retrieving data through HTTP\n*/\n@Component({\n  selector: 'table-http-example',\n  styleUrls: ['table-http-example.css'],\n  templateUrl: 'table-http-example.html',\n})\nexport class TableHttpExample implements OnInit {\n  displayedColumns = ['created', 'state', 'number', 'title'];\n  exampleDatabase: ExampleHttpDao | null;\n  dataSource = new MatTableDataSource();\n\n  resultsLength = 0;\n  isLoadingResults = true;\n  isRateLimitReached = false;\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    this.exampleDatabase = new ExampleHttpDao(this.http);\n\n\n    // If the user changes the sort order, reset back to the first page.\n\tthis.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        startWith({}),\n\t    switchMap(() => {\n          this.isLoadingResults = true;\n\t\t\t  return this.exampleDatabase!.getRepoIssues(\n          this.sort.active, this.sort.direction, this.paginator.pageIndex);\n        }),\n        map(data => {\n        // Flip flag to show that loading has finished.\n          this.isLoadingResults = false;\n          this.isRateLimitReached = false;\n          this.resultsLength = data.total_count;\n\n\n          return data.items;\n        }),\n        catchError(() => {\n          this.isLoadingResults = false;\n          // Catch if the GitHub API has reached its rate limit. Return empty data.\n          this.isRateLimitReached = true;\n            return observableOf([]);\n      })\n    ).subscribe(data => this.dataSource.data = data);\n  }\n}\n\n\nexport interface GithubApi {\n  items: GithubIssue[];\n  total_count: number;\n}\n\nexport interface GithubIssue {\n  created_at: string;\n  number: string;\n  state: string;\n  title: string;\n}\n\n/** An example database that the data source uses to retrieve data for the table. */\nexport class ExampleHttpDao {\n  constructor(private http: HttpClient) {}\n  getRepoIssues(sort: string, order: string, page: number): Observable<GithubApi> {\n    const href = 'https://api.github.com/search/issues';\n    const requestUrl =\n    `${href}?q=repo:angular/material2&sort=${sort}&order=${order}&page=${page + 1}`;\n\n    return this.http.get<GithubApi>(requestUrl);\n  }\n}",cssCode:"\n.example-container {\n  display: flex;\n  flex-direction: column;\n  max-height: 500px;\n  min-width: 300px;\n  position: relative;\n}\n.example-header {\n  min-height: 64px;\n  display: flex;\n  align-items: center;\n  padding-left: 24px;\n  font-size: 20px;\n}\n.example-table {\n  overflow: auto;\n  min-height: 300px;\n}\n.example-loading-shade {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 56px;\n  right: 0;\n  background: rgba(0, 0, 0, 0.15);\n  z-index: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.example-rate-limit-reached {\n  color: #980000;\n  max-width: 360px;\n  text-align: center;\n}\n/* Column Widths */\n.mat-column-number,\n.mat-column-state {\n  max-width: 64px;\n}\n.mat-column-created {\n  max-width: 124px;\n}",viewCode:"",isCodeVisible:!1,isExampleExpanded:!0},Jr=[{position:1,name:"Hydrogen",weight:1.0079,symbol:"H"},{position:2,name:"Helium",weight:4.0026,symbol:"He"},{position:3,name:"Lithium",weight:6.941,symbol:"Li"},{position:4,name:"Beryllium",weight:9.0122,symbol:"Be"},{position:5,name:"Boron",weight:10.811,symbol:"B"},{position:6,name:"Carbon",weight:12.0107,symbol:"C"},{position:7,name:"Nitrogen",weight:14.0067,symbol:"N"},{position:8,name:"Oxygen",weight:15.9994,symbol:"O"},{position:9,name:"Fluorine",weight:18.9984,symbol:"F"},{position:10,name:"Neon",weight:20.1797,symbol:"Ne"}],Qr=[{position:1,name:"Hydrogen",weight:1.0079,symbol:"H"},{position:2,name:"Helium",weight:4.0026,symbol:"He"},{position:3,name:"Lithium",weight:6.941,symbol:"Li"},{position:4,name:"Beryllium",weight:9.0122,symbol:"Be"},{position:5,name:"Boron",weight:10.811,symbol:"B"},{position:6,name:"Carbon",weight:12.0107,symbol:"C"},{position:7,name:"Nitrogen",weight:14.0067,symbol:"N"},{position:8,name:"Oxygen",weight:15.9994,symbol:"O"},{position:9,name:"Fluorine",weight:18.9984,symbol:"F"},{position:10,name:"Neon",weight:20.1797,symbol:"Ne"},{position:11,name:"Sodium",weight:22.9897,symbol:"Na"},{position:12,name:"Magnesium",weight:24.305,symbol:"Mg"},{position:13,name:"Aluminum",weight:26.9815,symbol:"Al"},{position:14,name:"Silicon",weight:28.0855,symbol:"Si"},{position:15,name:"Phosphorus",weight:30.9738,symbol:"P"},{position:16,name:"Sulfur",weight:32.065,symbol:"S"},{position:17,name:"Chlorine",weight:35.453,symbol:"Cl"},{position:18,name:"Argon",weight:39.948,symbol:"Ar"},{position:19,name:"Potassium",weight:39.0983,symbol:"K"},{position:20,name:"Calcium",weight:40.078,symbol:"Ca"}],Xr=function(){function e(t){o(this,e),this.http=t}return a(e,[{key:"getRepoIssues",value:function(e,t,n){return this.http.get("https://api.github.com/search/issues?q=repo:angular/material2&sort=".concat(e,"&order=").concat(t,"&page=").concat(n+1))}}]),e}(),Zr=["maroon","red","orange","yellow","olive","green","purple","fuchsia","lime","teal","aqua","blue","navy","black","gray"],es=["Maia","Asher","Olivia","Atticus","Amelia","Jack","Charlotte","Theodore","Isla","Oliver","Isabella","Jasper","Cora","Levi","Violet","Arthur","Mia","Thomas","Elizabeth"],ts=[{path:"",component:p,children:[{path:"form-controls/autocomplete",component:R},{path:"form-controls/checkbox",component:j},{path:"form-controls/datepicker",component:fe},{path:"form-controls/formfield",component:De},{path:"form-controls/input",component:$e},{path:"form-controls/radiobutton",component:ot},{path:"form-controls/select",component:Dt},{path:"form-controls/slider",component:zt},{path:"form-controls/slidertoggle",component:$t},{path:"navigation/menu",component:Zt},{path:"navigation/sidenav",component:cn},{path:"navigation/toolbar",component:hn},{path:"layout/card",component:xn},{path:"layout/divider",component:In},{path:"layout/expansion-panel",component:qn},{path:"layout/grid-list",component:Bn},{path:"layout/list",component:Yn},{path:"layout/tabs",component:la},{path:"layout/stepper",component:ha},{path:"layout/tree",component:io},{path:"buttons-and-indicators/button",component:po},{path:"buttons-and-indicators/button-toggle",component:fo},{path:"buttons-and-indicators/chips",component:So},{path:"buttons-and-indicators/icon",component:Fo},{path:"buttons-and-indicators/progress-bar",component:Bo},{path:"buttons-and-indicators/progress-spinner",component:Yo},{path:"buttons-and-indicators/ripples",component:Qo},{path:"popups-and-modals/bottom-sheet",component:Oi},{path:"popups-and-modals/dialog",component:fi},{path:"popups-and-modals/snackbar",component:Wi},{path:"popups-and-modals/tooltip",component:Ii},{path:"data"},{path:"data-table/paginator",component:Bi},{path:"data-table/sort-header",component:sl},{path:"data-table/table",component:(Pr=function(){function e(t){o(this,e),this.http=t,this.displayedColumns1=["position","name","weight","symbol"],this.displayedColumns2=["position","name","weight","symbol"],this.displayedColumns3=["position","name","weight","symbol"],this.displayedColumns4=["position","name","weight","symbol"],this.displayedColumns5=["select","position","name","weight","symbol"],this.displayedColumns6=["created","state","number","title"],this.displayedColumns7=["id","name","progress","color"],this.dataSource1=Jr,this.dataSource2=new Ui.k(Qr),this.dataSource3=new Ui.k(Jr),this.dataSource4=new Ui.k(Jr),this.dataSource5=new Ui.k(Jr),this.dataSource6=[],this.selection=new ga.c(!0,[]),this.resultsLength=0,this.isLoadingResults=!0,this.isRateLimitReached=!1;var n=Array.from({length:100},function(e,t){return n=t+1,a=es[Math.round(Math.random()*(es.length-1))]+" "+es[Math.round(Math.random()*(es.length-1))].charAt(0)+".",{id:n.toString(),name:a,progress:Math.round(100*Math.random()).toString(),color:Zr[Math.round(Math.random()*(Zr.length-1))]};var n,a});this.dataSource7=new Ui.k(n)}return a(e,[{key:"ngAfterViewInit",value:function(){}},{key:"ngOnInit",value:function(){var e=this;this.exampleBasic=zr,this.examplePagination=jr,this.exampleSorting=Hr,this.exampleFiltering=Gr,this.exampleSelection=$r,this.exampleHTTP=Yr,this.exampleMain=Kr,this.dataSource2.paginator=this.paginator2,this.dataSource3.sort=this.sort3,this.exampleDatabase=new Xr(this.http),this.sort6.sortChange.subscribe(function(){return e.paginator6.pageIndex=0}),Object(xa.a)(this.sort6.sortChange,this.paginator6.page).pipe(Object(b.a)({}),Object(ml.a)(function(){return e.isLoadingResults=!0,e.exampleDatabase.getRepoIssues(e.sort6.active,e.sort6.direction,e.paginator6.pageIndex)}),Object(u.a)(function(t){return e.isLoadingResults=!1,e.isRateLimitReached=!1,e.resultsLength=t.total_count,t.items}),Object(cl.a)(function(){return e.isLoadingResults=!1,e.isRateLimitReached=!0,Object(wa.a)([])})).subscribe(function(t){return e.dataSource6=t}),this.dataSource7.paginator=this.paginator7,this.dataSource7.sort=this.sort7}},{key:"applyFilter4",value:function(e){this.dataSource4.filter=e.trim().toLowerCase()}},{key:"applyFilter7",value:function(e){this.dataSource7.filter=e.trim().toLowerCase(),this.dataSource7.paginator&&this.dataSource7.paginator.firstPage()}},{key:"isAllSelected5",value:function(){return this.selection.selected.length===this.dataSource5.data.length}},{key:"masterToggle5",value:function(){var e=this;this.isAllSelected5()?this.selection.clear():this.dataSource5.data.forEach(function(t){return e.selection.select(t)})}}]),e}(),Pr.\u0275fac=function(e){return new(e||Pr)(c.Qb(pl.b))},Pr.\u0275cmp=c.Kb({type:Pr,selectors:[["app-material-material-table"]],viewQuery:function(e,t){var n;1&e&&(c.Gc(dl,!0),c.Gc(bl,!0),c.Gc(ul,!0),c.Gc(hl,!0),c.Gc(gl,!0),c.Gc(fl,!0)),2&e&&(c.xc(n=c.hc())&&(t.paginator2=n.first),c.xc(n=c.hc())&&(t.paginator6=n.first),c.xc(n=c.hc())&&(t.paginator7=n.first),c.xc(n=c.hc())&&(t.sort3=n.first),c.xc(n=c.hc())&&(t.sort6=n.first),c.xc(n=c.hc())&&(t.sort7=n.first))},decls:177,vars:38,consts:[[3,"svg"],["href","https://material.angular.io/components/table/examples","target","_blank",1,"font-weight-bold"],[3,"viewItem"],[1,"example-preview"],["href","https://material.angular.io/cdk/table/overview","target","_blank"],[1,"separator","separator-dashed","my-6"],[1,"example-container","mat-elevation-z8"],[3,"dataSource"],["table1",""],["matColumnDef","position"],[4,"matHeaderCellDef"],[4,"matCellDef"],["matColumnDef","name"],["matColumnDef","weight"],["matColumnDef","symbol"],[4,"matHeaderRowDef"],[4,"matRowDef","matRowDefColumns"],["table2",""],[3,"pageSize","pageSizeOptions","showFirstLastButtons"],["matPaginator2",""],["matSort","",3,"dataSource"],["table3","","sort3","matSort"],["mat-sort-header","",4,"matHeaderCellDef"],[1,"example-header"],[1,"mat-form-field"],["matInput","","placeholder","Filter",3,"keyup"],["table4",""],["table5",""],["matColumnDef","select"],[3,"click",4,"matRowDef","matRowDefColumns"],["class","example-loading-shade",4,"ngIf"],["matSort","","matSortActive","created","matSortDisableClear","","matSortDirection","asc",1,"example-table",3,"dataSource"],["sort6","matSort","table6",""],["matColumnDef","number"],["matColumnDef","title"],["matColumnDef","state"],["matColumnDef","created"],["mat-sort-header","","disableClear","true",4,"matHeaderCellDef"],[3,"length","pageSize"],["matPaginator6",""],["sort7","matSort"],["matColumnDef","id"],["matColumnDef","progress"],["matColumnDef","color"],[3,"color",4,"matCellDef"],[3,"pageSizeOptions"],["matPaginator7",""],["mat-sort-header",""],[3,"checked","indeterminate","change"],[3,"checked","click","change"],[3,"click"],[1,"example-loading-shade"],[4,"ngIf"],["class","example-rate-limit-reached",4,"ngIf"],[1,"example-rate-limit-reached"],["mat-sort-header","","disableClear","true"]],template:function(e,t){1&e&&(c.Wb(0,"app-notice",0),c.Nc(1," For more info please check the components's official demos & documentation "),c.Wb(2,"a",1),c.Nc(3,"demos & documentation"),c.Vb(),c.Vb(),c.Wb(4,"app-code-preview",2),c.Wb(5,"div",3),c.Wb(6,"p"),c.Nc(7," The "),c.Wb(8,"mark"),c.Nc(9,"mat-table"),c.Vb(),c.Nc(10," provides a Material Design styled data-table that can be used to display rows of data. "),c.Vb(),c.Wb(11,"p"),c.Nc(12," This table builds on the foundation of the CDK data-table and uses a similar interface for its data input and template, except that its element and attribute selectors will be prefixed with "),c.Wb(13,"mark"),c.Nc(14,"mat-"),c.Vb(),c.Nc(15," instead of "),c.Wb(16,"mark"),c.Nc(17,"cdk-"),c.Vb(),c.Nc(18,". For more information on the interface and a detailed look at how the table is implemented, see the "),c.Wb(19,"a",4),c.Nc(20,"guide covering the CDK data-table"),c.Vb(),c.Nc(21,". "),c.Vb(),c.Rb(22,"div",5),c.Wb(23,"div"),c.Wb(24,"div",6),c.Wb(25,"mat-table",7,8),c.Ub(27,9),c.Lc(28,vl,2,0,"mat-header-cell",10),c.Lc(29,Cl,2,1,"mat-cell",11),c.Tb(),c.Ub(30,12),c.Lc(31,xl,2,0,"mat-header-cell",10),c.Lc(32,wl,2,1,"mat-cell",11),c.Tb(),c.Ub(33,13),c.Lc(34,Vl,2,0,"mat-header-cell",10),c.Lc(35,Wl,2,1,"mat-cell",11),c.Tb(),c.Ub(36,14),c.Lc(37,yl,2,0,"mat-header-cell",10),c.Lc(38,Nl,2,1,"mat-cell",11),c.Tb(),c.Lc(39,kl,1,0,"mat-header-row",15),c.Lc(40,Ml,1,0,"mat-row",16),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(41,"app-code-preview",2),c.Wb(42,"div",3),c.Wb(43,"div"),c.Wb(44,"div",6),c.Wb(45,"mat-table",7,17),c.Ub(47,9),c.Lc(48,Sl,2,0,"mat-header-cell",10),c.Lc(49,Tl,2,1,"mat-cell",11),c.Tb(),c.Ub(50,12),c.Lc(51,Il,2,0,"mat-header-cell",10),c.Lc(52,Dl,2,1,"mat-cell",11),c.Tb(),c.Ub(53,13),c.Lc(54,Fl,2,0,"mat-header-cell",10),c.Lc(55,El,2,1,"mat-cell",11),c.Tb(),c.Ub(56,14),c.Lc(57,Ol,2,0,"mat-header-cell",10),c.Lc(58,ql,2,1,"mat-cell",11),c.Tb(),c.Lc(59,Ll,1,0,"mat-header-row",15),c.Lc(60,Al,1,0,"mat-row",16),c.Vb(),c.Rb(61,"mat-paginator",18,19),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(63,"app-code-preview",2),c.Wb(64,"div",3),c.Wb(65,"div"),c.Wb(66,"div",6),c.Wb(67,"mat-table",20,21),c.Ub(70,9),c.Lc(71,Rl,2,0,"mat-header-cell",22),c.Lc(72,Pl,2,1,"mat-cell",11),c.Tb(),c.Ub(73,12),c.Lc(74,_l,2,0,"mat-header-cell",22),c.Lc(75,Bl,2,1,"mat-cell",11),c.Tb(),c.Ub(76,13),c.Lc(77,Ul,2,0,"mat-header-cell",22),c.Lc(78,zl,2,1,"mat-cell",11),c.Tb(),c.Ub(79,14),c.Lc(80,jl,2,0,"mat-header-cell",22),c.Lc(81,Hl,2,1,"mat-cell",11),c.Tb(),c.Lc(82,Gl,1,0,"mat-header-row",15),c.Lc(83,$l,1,0,"mat-row",16),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(84,"app-code-preview",2),c.Wb(85,"div",3),c.Wb(86,"div"),c.Wb(87,"div",6),c.Wb(88,"div",23),c.Wb(89,"mat-form-field",24),c.Wb(90,"input",25),c.gc("keyup",function(e){return t.applyFilter4(e.target.value)}),c.Vb(),c.Vb(),c.Vb(),c.Wb(91,"mat-table",7,26),c.Ub(93,9),c.Lc(94,Kl,2,0,"mat-header-cell",10),c.Lc(95,Yl,2,1,"mat-cell",11),c.Tb(),c.Ub(96,12),c.Lc(97,Jl,2,0,"mat-header-cell",10),c.Lc(98,Ql,2,1,"mat-cell",11),c.Tb(),c.Ub(99,13),c.Lc(100,Xl,2,0,"mat-header-cell",10),c.Lc(101,Zl,2,1,"mat-cell",11),c.Tb(),c.Ub(102,14),c.Lc(103,er,2,0,"mat-header-cell",10),c.Lc(104,tr,2,1,"mat-cell",11),c.Tb(),c.Lc(105,nr,1,0,"mat-header-row",15),c.Lc(106,ar,1,0,"mat-row",16),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(107,"app-code-preview",2),c.Wb(108,"div",3),c.Wb(109,"div"),c.Wb(110,"div",6),c.Wb(111,"mat-table",7,27),c.Ub(113,28),c.Lc(114,or,2,2,"mat-header-cell",10),c.Lc(115,ir,2,1,"mat-cell",11),c.Tb(),c.Ub(116,9),c.Lc(117,lr,2,0,"mat-header-cell",10),c.Lc(118,rr,2,1,"mat-cell",11),c.Tb(),c.Ub(119,12),c.Lc(120,sr,2,0,"mat-header-cell",10),c.Lc(121,mr,2,1,"mat-cell",11),c.Tb(),c.Ub(122,13),c.Lc(123,cr,2,0,"mat-header-cell",10),c.Lc(124,pr,2,1,"mat-cell",11),c.Tb(),c.Ub(125,14),c.Lc(126,dr,2,0,"mat-header-cell",10),c.Lc(127,br,2,1,"mat-cell",11),c.Tb(),c.Lc(128,ur,1,0,"mat-header-row",15),c.Lc(129,hr,1,0,"mat-row",29),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Vb(),c.Wb(130,"app-code-preview",2),c.Wb(131,"div",3),c.Wb(132,"div",6),c.Lc(133,vr,3,2,"div",30),c.Wb(134,"mat-table",31,32),c.Ub(137,33),c.Lc(138,Cr,2,0,"mat-header-cell",10),c.Lc(139,xr,2,1,"mat-cell",11),c.Tb(),c.Ub(140,34),c.Lc(141,wr,2,0,"mat-header-cell",10),c.Lc(142,Vr,2,1,"mat-cell",11),c.Tb(),c.Ub(143,35),c.Lc(144,Wr,2,0,"mat-header-cell",10),c.Lc(145,yr,2,1,"mat-cell",11),c.Tb(),c.Ub(146,36),c.Lc(147,Nr,2,0,"mat-header-cell",37),c.Lc(148,kr,3,3,"mat-cell",11),c.Tb(),c.Lc(149,Mr,1,0,"mat-header-row",15),c.Lc(150,Sr,1,0,"mat-row",16),c.Vb(),c.Rb(151,"mat-paginator",38,39),c.Vb(),c.Vb(),c.Vb(),c.Wb(153,"app-code-preview",2),c.Wb(154,"div",3),c.Wb(155,"div",23),c.Wb(156,"mat-form-field"),c.Wb(157,"input",25),c.gc("keyup",function(e){return t.applyFilter7(e.target.value)}),c.Vb(),c.Vb(),c.Vb(),c.Wb(158,"div",6),c.Wb(159,"mat-table",20,40),c.Ub(161,41),c.Lc(162,Tr,2,0,"mat-header-cell",22),c.Lc(163,Ir,2,1,"mat-cell",11),c.Tb(),c.Ub(164,42),c.Lc(165,Dr,2,0,"mat-header-cell",22),c.Lc(166,Fr,2,1,"mat-cell",11),c.Tb(),c.Ub(167,12),c.Lc(168,Er,2,0,"mat-header-cell",22),c.Lc(169,Or,2,1,"mat-cell",11),c.Tb(),c.Ub(170,43),c.Lc(171,qr,2,0,"mat-header-cell",22),c.Lc(172,Lr,2,3,"mat-cell",44),c.Tb(),c.Lc(173,Ar,1,0,"mat-header-row",15),c.Lc(174,Rr,1,0,"mat-row",16),c.Vb(),c.Rb(175,"mat-paginator",45,46),c.Vb(),c.Vb(),c.Vb()),2&e&&(c.qc("svg","assets/media/svg/icons/Tools/Compass.svg"),c.Cb(4),c.qc("viewItem",t.exampleBasic),c.Cb(21),c.qc("dataSource",t.dataSource1),c.Cb(14),c.qc("matHeaderRowDef",t.displayedColumns1),c.Cb(1),c.qc("matRowDefColumns",t.displayedColumns1),c.Cb(1),c.qc("viewItem",t.examplePagination),c.Cb(4),c.qc("dataSource",t.dataSource2),c.Cb(14),c.qc("matHeaderRowDef",t.displayedColumns2),c.Cb(1),c.qc("matRowDefColumns",t.displayedColumns2),c.Cb(1),c.qc("pageSize",10)("pageSizeOptions",c.tc(36,Br))("showFirstLastButtons",!0),c.Cb(2),c.qc("viewItem",t.exampleSorting),c.Cb(4),c.qc("dataSource",t.dataSource3),c.Cb(15),c.qc("matHeaderRowDef",t.displayedColumns3),c.Cb(1),c.qc("matRowDefColumns",t.displayedColumns3),c.Cb(1),c.qc("viewItem",t.exampleFiltering),c.Cb(7),c.qc("dataSource",t.dataSource4),c.Cb(14),c.qc("matHeaderRowDef",t.displayedColumns4),c.Cb(1),c.qc("matRowDefColumns",t.displayedColumns4),c.Cb(1),c.qc("viewItem",t.exampleSelection),c.Cb(4),c.qc("dataSource",t.dataSource5),c.Cb(17),c.qc("matHeaderRowDef",t.displayedColumns5),c.Cb(1),c.qc("matRowDefColumns",t.displayedColumns5),c.Cb(1),c.qc("viewItem",t.exampleHTTP),c.Cb(3),c.qc("ngIf",t.isLoadingResults||t.isRateLimitReached),c.Cb(1),c.qc("dataSource",t.dataSource6),c.Cb(15),c.qc("matHeaderRowDef",t.displayedColumns6),c.Cb(1),c.qc("matRowDefColumns",t.displayedColumns6),c.Cb(1),c.qc("length",t.resultsLength)("pageSize",30),c.Cb(2),c.qc("viewItem",t.exampleMain),c.Cb(6),c.qc("dataSource",t.dataSource7),c.Cb(14),c.qc("matHeaderRowDef",t.displayedColumns7),c.Cb(1),c.qc("matRowDefColumns",t.displayedColumns7),c.Cb(1),c.qc("pageSizeOptions",c.tc(37,Ur)))},directives:[h.a,g.a,Ui.j,Ui.c,Ui.e,Ui.b,Ui.g,Ui.i,qi.a,zi.a,f.c,v.b,s.n,Ui.d,Ui.a,Ui.f,Ui.h,zi.b,P.a,Uo.c],pipes:[s.e],styles:[".example-container[_ngcontent-%COMP%] {\n        display: flex;\n        flex-direction: column;\n        max-height: 500px;\n        min-width: 300px;\n        position: relative;\n      }\n\n      .mat-table[_ngcontent-%COMP%] {\n        overflow: auto;\n        max-height: 500px;\n      }\n\n      .mat-header-cell.mat-sort-header-sorted[_ngcontent-%COMP%] {\n        color: black;\n      }\n\n      .example-header[_ngcontent-%COMP%] {\n        min-height: 64px;\n        padding: 8px 24px 0;\n      }\n\n      .mat-form-field[_ngcontent-%COMP%] {\n        font-size: 14px;\n        width: 100%;\n      }\n\n      .mat-table[_ngcontent-%COMP%] {\n        overflow: auto;\n        max-height: 500px;\n      }\n      .mat-column-select[_ngcontent-%COMP%] {\n        overflow: initial;\n      }\n      .example-header[_ngcontent-%COMP%] {\n        min-height: 64px;\n        display: flex;\n        align-items: center;\n        padding-left: 24px;\n        font-size: 20px;\n      }\n\n      .example-table[_ngcontent-%COMP%] {\n        overflow: auto;\n        min-height: 300px;\n      }\n\n      .example-loading-shade[_ngcontent-%COMP%] {\n        position: absolute;\n        top: 0;\n        left: 0;\n        bottom: 56px;\n        right: 0;\n        background: rgba(0, 0, 0, 0.15);\n        z-index: 1;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      .example-rate-limit-reached[_ngcontent-%COMP%] {\n        color: #980000;\n        max-width: 360px;\n        text-align: center;\n      }\n\n      \n      .mat-column-number[_ngcontent-%COMP%], .mat-column-state[_ngcontent-%COMP%] {\n        max-width: 64px;\n      }\n\n      .mat-column-created[_ngcontent-%COMP%] {\n        max-width: 124px;\n      }"]}),Pr)},{path:"",redirectTo:"form-controls/autocomplete",pathMatch:"full"},{path:"**",redirectTo:"form-controls/autocomplete",pathMatch:"full"}]}],ns=((_r=function e(){o(this,e)}).\u0275mod=c.Ob({type:_r}),_r.\u0275inj=c.Nb({factory:function(e){return new(e||_r)},providers:[K.c,{provide:Di.d,useValue:{}},{provide:Di.a,useValue:{}},{provide:w.f,useValue:"en-GB"},{provide:J.a,useValue:{useUtc:!0}}],imports:[[s.c,v.c,f.e,Y.c,C.b,wn.d,Ft.b,gn.g,ve.b,X.c,K.b,w.m,x.b,P.b,Kt.c,Jn.d,yi.b,en.g,Va.b,Uo.b,Ci.b,Ui.l,Ln.b,pn.b,Di.c,Dn.b,Vn.b,zi.c,ra.d,Co.e,qi.b,$.f,w.u,H.a,r.c,va.d,bo.c,G.a,d.j,d.u,m.l.forChild(ts)],m.l]}),_r)}}])}();